<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on source{d} blog</title>
    <link>/post/</link>
    <description>Recent content in Posts on source{d} blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 24 Nov 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Weighted MinHash on GPU helps to find duplicate GitHub repositories.</title>
      <link>/post/minhashcuda/</link>
      <pubDate>Thu, 24 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/minhashcuda/</guid>
      <description>

&lt;p&gt;The codez: &lt;a href=&#34;https://github.com/src-d/minhashcuda&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/minhashcuda/benders.jpg&#34; alt=&#34;benders&#34; /&gt;&lt;/p&gt;

&lt;p&gt;While doing topic modeling of GitHub repositories, to which we dedicated the recent article
&lt;a href=&#34;http://blog.sourced.tech/post/github_topic_modeling/&#34;&gt;Topic Modeling of GitHub Repositories&lt;/a&gt;,
we gradually realized that our dataset should be filtered to achieve better results.
Particularly, we should throw away &amp;ldquo;extreme forks&amp;rdquo;, the Large Unidentified
&lt;span style=&#34;text-decoration: line-through;&#34;&gt;Flying&lt;/span&gt; Copy-Pasted
Codebases. The typical example of such LUCPCs are web site engines, e.g.
many people copy Wordpress into their repository and build their open-source blogs.
Numerous github.io sites are the same copy-pasted examples. Folks
like to learn web programming from books or online manuals copy-pasting the
sample boilerplates. We are not saying it is wrong; sometimes it is even inevitable,
sometimes &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Submodules&#34;&gt;git submodules&lt;/a&gt;
seem a bigger evil in spite of all GitHub&amp;rsquo;s efforts to support them. Such duplicates
are bad for specifically topic modeling since a lot of &amp;ldquo;garbage&amp;rdquo; bags are introduced.&lt;/p&gt;

&lt;p&gt;We are working with repositories using the bag-of-names model, which treats
each codebase as a sparse vector. The number of dimensions equals to the number
of unique names occurring in all the source code we&amp;rsquo;ve got, the values are equal
to the corresponding &lt;a href=&#34;https://en.wikipedia.org/wiki/Tf%E2%80%93idf&#34;&gt;TF-IDF&lt;/a&gt;-s
(the derivatives from frequencies). Names are extracted using the source highlight
library &lt;a href=&#34;http://pygments.org/&#34;&gt;pygments&lt;/a&gt;, and additionally refined with several tricky heuristics. For example,
consider the following Python snippet:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class WebServer(ServerBase):
  def route(self, path):
    raise NotImplementedError()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is transformed into&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;{&amp;quot;web&amp;quot;: 1, &amp;quot;server&amp;quot;: 2, &amp;quot;base&amp;quot;: 1, &amp;quot;route&amp;quot;: 1, &amp;quot;path&amp;quot;: 1}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we apply frequency filtering, TF-IDF, stemming, etc.&lt;/p&gt;

&lt;p&gt;We expect the resulting sparse vectors for duplicate repositories to be
nearly the same. Of course, some files may contain minor edits and we cannot seek
for the exact same bag-of-names; we have to make up something smarter. The problem which
we&amp;rsquo;ve just stated is by no means unique: many Natural Language Processing
tasks involve the same challenges. Let&amp;rsquo;s revise the common approach: thresholding
by &lt;a href=&#34;https://en.wikipedia.org/wiki/Jaccard_index&#34;&gt;Jaccard Similarity&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;theory:e60f9f7bf5b66fa2a5351b97e906a1a1&#34;&gt;Theory&lt;/h2&gt;

&lt;h3 id=&#34;minhash:e60f9f7bf5b66fa2a5351b97e906a1a1&#34;&gt;MinHash&lt;/h3&gt;

&lt;p&gt;Imagine that we have two sets (in mathematical sense) - \(A\) and \(B\). The Jaccard Similarity
Measure reflects the extent to which our two sets are similar to each other.
\[J=\frac{\left|A \cap B\right|}{\left|A \cup B\right|}\]
That is, the power of the set intersection divided by the power of set union. The idea
is to calculate pairwise \(J\) matrix for all our samples, treat it as a
mutual similarity graph&amp;rsquo;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Incidence_matrix&#34;&gt;incidence matrix&lt;/a&gt;
and then pick the &lt;a href=&#34;https://en.wikipedia.org/wiki/Clique&#34;&gt;cliques&lt;/a&gt; which have each
edges weight above the fixed threshold. There is the problem: we&amp;rsquo;ve got too many
samples, more than 10 million and we cannot calculate a 10Mx10M matrix in any
observable future. Luckily for us there is a nice solution to that problem: &lt;a href=&#34;https://en.wikipedia.org/wiki/MinHash&#34;&gt;MinHash
algorithm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are several modifications of MinHash-ing, they are basically equivalent to each other.
Let&amp;rsquo;s consider the easiest one. We randomly permute the elements of the union of all sets,
and enumerate them. We pick the minimum index throughout contained elements for every set.
We repeat this procedure multiple times, and take the average of the indices, \(h\).
We call \(h\) &amp;ldquo;MinHash&amp;rdquo;, it is indeed a hash function, but unlike other hashes, it is
&lt;a href=&#34;https://en.wikipedia.org/wiki/Consistent_hashing&#34;&gt;consistent&lt;/a&gt;: similar
items tend to yield near hash values. The difference between two MinHash values
can be proved to approximate the Jaccard Similarity. There is a good blog post
which explains how to apply the MinHash algorithm to find duplicates:
&lt;a href=&#34;http://stevehanov.ca/blog/index.php?id=144&#34;&gt;On removing duplicates from a set of documents&lt;/a&gt;.
Basically, we sort all the hash values and scan them using the window of the size
which is specially tailored for the tolerated level of false-positives.
MinHash has an awesome property: there are always no false-negatives, so
we end up with the same result which we would end up in 10Mx10M brute force.&lt;/p&gt;

&lt;h3 id=&#34;weighted-minhash:e60f9f7bf5b66fa2a5351b97e906a1a1&#34;&gt;Weighted MinHash&lt;/h3&gt;

&lt;p&gt;Things change when you&amp;rsquo;ve got a dictionary instead of a set: the keys are still
unique and values are non-negative &amp;ldquo;weights&amp;rdquo; of the corresponding keys. The Jaccard Similarity
between dictionaries \(A=\{i: a_ i\}, i\in I\) and \(B=\{j: b_ j\}, j\in J\) is defined as
\[J=\frac{\sum_ {k\in K}\limits \min(a_ k, b_ k)}{\sum_ {k\in K}\limits \max(a_k, b_k)}, K=I\cup J\]
where \(a_k = 0, k\notin I\) and \(b_k = 0, k\notin J\). If the weights are
binary, this formula is equivalent to the common Jaccard Similarity definition.&lt;/p&gt;

&lt;p&gt;The corresponding hashing method for the Weighted Jaccard Similarity is named
&amp;ldquo;Weighted MinHash&amp;rdquo; and described in detail in &lt;a href=&#34;http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36928.pdf&#34;&gt;Sergey Ioffe&amp;rsquo;s article&lt;/a&gt;.
His proposed algorithm depends on the parameter \(K\) which adjusts the
resulting hash length.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;for \(k\) in range(\(K\)):

&lt;ol&gt;
&lt;li&gt;Sample \(r_ k, c_ k ∼ Gamma(2, 1)\) (their PDF is \(P( r)=re^{-r}\)), and
\(\beta_ k ∼ Uniform(0, 1)\).&lt;/li&gt;
&lt;li&gt;Compute
$$
\begin{align}
t_ k &amp;amp;= \lfloor \frac{\ln S_ k}{r_ k} + \beta_ k\rfloor \\
y_ k &amp;amp;= e^{r_ k(t_ k - \beta_ k)} \\
z_ k &amp;amp;= y_ k e^{r_ k} \\
a_ k &amp;amp;= \frac{c_ k}{z_ k}
\end{align}
$$&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Find \(k^* = \arg\!\min_ k a_ k\) and return the samples \((k^*, t_ {k^*})\).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thus given \(K\) and supposing that the integers are 32-bit we obtain the hash
with size \(8K\) bytes. &lt;a href=&#34;https://en.wikipedia.org/wiki/Gamma_distribution&#34;&gt;\(Gamma(2, 1)\) distribution&lt;/a&gt;
can be efficiently calculated as \(r = −\ln(u_ 1 u_ 2)\) where \(u_ 1, u_ 2 ∼ Uniform(0, 1)\).&lt;/p&gt;

&lt;p&gt;Having calculated all the hashes in the dataset, we can then conduct
&lt;a href=&#34;https://en.wikipedia.org/wiki/Locality-sensitive_hashing&#34;&gt;local sensitive hashing&lt;/a&gt;,
an algorithm from &lt;a href=&#34;http://infolab.stanford.edu/~ullman/mmds/ch3.pdf&#34;&gt;Chapter 3, Mining of Massive Datasets&lt;/a&gt;.
Briefly, we define several hash tables, each for it&amp;rsquo;s own subhash, depending on
the target level of false positives. Same elements will appear in the same bucket;
union of the bucket sets across all the hash tables for a specific sample
yields all the similar samples. If we&amp;rsquo;d like to determine the sets of mutually
similar samples a.k.a. &lt;a href=&#34;https://en.wikipedia.org/wiki/Clique&#34;&gt;cliques&lt;/a&gt;, we should
consider the set intersection instead.&lt;/p&gt;

&lt;h3 id=&#34;minhashcuda:e60f9f7bf5b66fa2a5351b97e906a1a1&#34;&gt;MinHashCuda&lt;/h3&gt;

&lt;p&gt;The LSH algorithm is actually pretty fast by design, does not require much memory
and works perfectly, even when implemented in Python (&lt;a href=&#34;https://github.com/ekzhu/datasketch&#34;&gt;datasketch&lt;/a&gt;),
whereas calculation of the hashes themselves is resource consuming. We&amp;rsquo;ve
developed an efficient Weighted MinHash calculation library &lt;a href=&#34;https://github.com/src-d/minhashcuda&#34;&gt;MinHashCuda&lt;/a&gt;.
It allows to offload the heavy-lifting to the GPU(s).&lt;/p&gt;

&lt;p&gt;MinHashCuda has two interfaces, C and Python, much like &lt;a href=&#34;https://github.com/src-d/kmcuda&#34;&gt;kmcuda&lt;/a&gt;,
and actually borrowed quite a lot of boilerplate code from kmcuda. I will use the Python API
throughout this section. Suppose that we&amp;rsquo;ve got out dataset in the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Sparse_matrix#Compressed_sparse_row_.28CSR.2C_CRS_or_Yale_format.29&#34;&gt;compressed sparse row&lt;/a&gt;
format, particularly &lt;a href=&#34;https://docs.scipy.org/doc/scipy-0.18.1/reference/generated/scipy.sparse.csr_matrix.html&#34;&gt;&lt;code&gt;scipy.sparse.csr_matrix&lt;/code&gt;&lt;/a&gt;.
In order to feed it to MinHashCuda, first you must initialize the hasher object:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import libMHCUDA
# m is our scipy.sparse.csr_matrix
# m.shape[-1] is the dimensionality - number of distinct elements in the weighted sets
hasher = libMHCUDA.minhash_cuda_init(m.shape[-1], 128, seed=1, verbosity=1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Internally, it will leverage &lt;a href=&#34;http://docs.nvidia.com/cuda/curand/#axzz4QqWj1Cak&#34;&gt;cuRAND&lt;/a&gt;,
NVIDIA&amp;rsquo;s stock random generation library, to generate \(r\), \(c\) and \(\beta\).
If the precious GPU memory fits those arrays, then you may move along to the hash
calculation, otherwise some dimensionality reduction is needed. For example,
the Titan X 2016 has 12GB GDDR5X, so the theoretical limit is \(\frac{12*10^9}{3\cdot sizeof(float)} = 10^9\)
dimensions. Of course, there must be some room for the samples, so practically
the maximum dimensionality is about 500 million.&lt;/p&gt;

&lt;p&gt;Next, we calculate the hashes. Depending on whether the whole matrix fits into
the memory, there are two options:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# fits
hashes = libMHCUDA.minhash_cuda_calc(hasher, m)

# does not fit
hashes = []
for i in range(0, m.shape[0], chunk):
  hashes.append(libMHCUDA.minhash_cuda_calc(hasher, m, row_start=i, row_finish=i + chunk))
hashes = numpy.vstack(hashes)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the latter case, we avoid using &lt;code&gt;m[i:i + chunk]&lt;/code&gt; because it creates the new
matrix and introduces much overhead.&lt;/p&gt;

&lt;p&gt;Finally, we free all the allocated resources:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;libMHCUDA.minhash_cuda_fini(hasher)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;performance:e60f9f7bf5b66fa2a5351b97e906a1a1&#34;&gt;Performance&lt;/h3&gt;

&lt;p&gt;As usual, CUDA kernel performance dramatically varies depending on the chosen
parallelization scheme, occupancy and the benevolence of the evil overlords.
I had to rewrite it several times until I reached a satisfying result.&lt;/p&gt;

&lt;p&gt;The naive method of parallelization would be to assign rows to threads on
the equivalent basis: each thread takes a row, enters the argmin loop and
finally writes the whole hash. There are several problems with this approach:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Sparse rows may be severely unbalanced, e.g. one consists of 10 elements and the other has 100000.
CUDA is &lt;a href=&#34;https://en.wikipedia.org/wiki/Single_instruction,_multiple_threads&#34;&gt;SIMT&lt;/a&gt; and the performance is going to suffer.&lt;/li&gt;
&lt;li&gt;There is no caching, every iteration includes reading the whole row and reading the corresponding
random values.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The solution to (1) is to split the incoming matrix into row intervals with
roughly the same number of &lt;em&gt;elements&lt;/em&gt;, not &lt;em&gt;rows&lt;/em&gt;. (2) is solved by
caching the partial minimum \(a_ k\) and \((k^*, t_ {k^*})\) into the
shared memory, so that the row&amp;rsquo;s elements are read only once. There is no
ability to accurately cache the random values as well because different rows refer to
arbitrary different column indices. Apart from solving (1) and (2), I had the special
pleasure to implement multiple GPUs support.&lt;/p&gt;

&lt;p&gt;(1) appeared to be harder than it seems. The point is, (2) sets the limit on the
maximum amount of shared memory per block, so the maximum number of elements
consumed by each thread is upper bounded. We end up with a discrete optimization
problem. It resembles &lt;a href=&#34;https://en.wikipedia.org/wiki/Bin_packing_problem&#34;&gt;bin packing&lt;/a&gt;,
but instead of minimizing the number of bins, it focuses on the overall equal
load and grouping the bins by CUDA blocks. Here is my solution:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/minhashcuda/bins.png&#34; alt=&#34;bins&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Obtain a rough estimate of the number of elements per block, knowing the
shared memory limit and thriving to distribute some fixed number of elements per thread.
It approximates the number of CUDA blocks and the overall number of threads \(T\)
since the CUDA block size is constant. This takes a constant time.&lt;/li&gt;
&lt;li&gt;Sort the rows by the length - \(O(R\log R)\).&lt;/li&gt;
&lt;li&gt;Greedily distribute the rows to the threads, starting from the biggest and
finishing with the smallest. The row which is loaded the lowest receives the row.
To efficiently implement this, we maintain the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Priority_queue#Usual_implementation&#34;&gt;priority queue&lt;/a&gt;,
getting \(O(R\log T)\) complexity.&lt;/li&gt;
&lt;li&gt;Sort the threads according to the final load. It takes \(O(T\log T)\).&lt;/li&gt;
&lt;li&gt;Split the threads sequence by blocks. Step (4) guarantees the minimum possible
imbalance.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The overall complexity is thus \(O(R(\log R + \log T) + T\log T) = O(R \log R)\)
since \(T ∼ R\).&lt;/p&gt;

&lt;p&gt;I hit the problems with the low &lt;a href=&#34;http://developer.download.nvidia.com/compute/cuda/CUDA_Occupancy_calculator.xls&#34;&gt;kernel occupancy&lt;/a&gt;.
The used number of registers was too high. I managed to dramatically reduce the register pressure applying
&lt;a href=&#34;http://blog.icare3d.org/2010/04/cuda-volatile-trick.html&#34;&gt;the volatile trick&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;battle-tested:e60f9f7bf5b66fa2a5351b97e906a1a1&#34;&gt;Battle tested&lt;/h3&gt;

&lt;p&gt;We successfully applied &lt;a href=&#34;https://github.com/src-d/minhashcuda&#34;&gt;MinHashCuda&lt;/a&gt; to find duplicate repositories on GitHub.
The size of our dataset was initially 13.6 million but later was filtered down to 9.6 million.
To be precise, the matrix was 9624276 x 2422260 with the sparsity 0.00014, which
is roughly equivalent to 9624276 x 340. We ran the hash calculation on two Titan Xs
(Maxwell), it took 40 minutes. According to my estimation, the achieved speed is
600 times faster than the implementation in &lt;code&gt;datasketch&lt;/code&gt; using 12 CPU
cores with &lt;a href=&#34;https://en.wikipedia.org/wiki/Math_Kernel_Library&#34;&gt;Intel&amp;rsquo;s MKL&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The result after LSH with a similarity threshold of 0.9 was about 467,000 duplicate groups with 1.66 million repositories.
110,000 repositories appeared to be *.github.io. Here are the examples:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Mange/rtl8192eu-linux-driver
donahue95/rtl8192eu-linux-driver
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;dcarbajosa/linuxacademy-chef
jachinh/linuxacademy-chef
flarotag/linuxacademy-chef
qhawk/linuxacademy-chef
paul-e-allen/linuxacademy-chef
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;choysama/my-django-first-blog
mihuie/django-first
PubMahesh/my-first-django-app
nickmalhotra/first-django-blog
Jmeggesto/MyFirstDjango
atlwendy/django-first
susancodes/first-django-app
quipper7/DjangoFirstProject
phidang/first-django-blog
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The complete dataset is published on &lt;a href=&#34;https://data.world/vmarkovtsev/github-duplicate-repositories&#34;&gt;data.world&lt;/a&gt;.&lt;/p&gt;

&lt;script async src=&#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_CHTML&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>kmcuda (K-Means on GPU) version 4 is released</title>
      <link>/post/kmcuda4/</link>
      <pubDate>Wed, 23 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/kmcuda4/</guid>
      <description>

&lt;p&gt;Some time ago, I wrote an article about &lt;a href=&#34;https://github.com/src-d/kmcuda&#34;&gt;src-d/kmcuda&lt;/a&gt;
named &lt;a href=&#34;http://blog.sourced.tech/post/towards_kmeans_on_gpu/&#34;&gt;Towards Yinyang K-means on GPU&lt;/a&gt;.
Last weekend we released version 4 of that library. Here is the brief list of
changes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;K-Means iterations can run in parallel on several GPU cards, so
the elapsed time reduces proportional to the number of GPUs.&lt;/li&gt;
&lt;li&gt;Type of the input samples can be &lt;a href=&#34;https://en.wikipedia.org/wiki/Half-precision_floating-point_format&#34;&gt;16-bit floating point&lt;/a&gt; (fp16),
so the maximum size of clustered data doubles.&lt;/li&gt;
&lt;li&gt;Distance between points can be calculated with the &lt;a href=&#34;https://en.wikipedia.org/wiki/Cosine_similarity#Angular_distance_and_similarity&#34;&gt;angular metric&lt;/a&gt;,
thus the clustering algorithm becomes a variant of &lt;a href=&#34;http://www.google.com/search?q=spherical+k-means&#34;&gt;Spherical K-Means&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The precision of the calculation of distances was improved at the expense
of some small computational overhead thanks to &lt;a href=&#34;https://en.wikipedia.org/wiki/Kahan_summation_algorithm&#34;&gt;Kahan summation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Zero-copy device input and output, that is, taking samples from GPU
memory and writing the results to the preallocated GPU memory.&lt;/li&gt;
&lt;li&gt;Build was much improved: selection of the CUDA device architecture, optional components,
continuous integration, &lt;a href=&#34;https://github.com/pypa/manylinux&#34;&gt;PyPi manylinux wheels&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Extensive test suite was developed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I will go into details about each of the points.&lt;/p&gt;

&lt;h3 id=&#34;multi-gpu:0f383f0988f980083ee61048001e3e6d&#34;&gt;Multi-GPU&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;/post/kmcuda4/nvprof.png&#34; alt=&#34;nvprof&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Clustering on several GPUs at the same time is not straightforward,
because you cannot simply split the samples into equal parts and
feed them in parallel. The calculation of the centroids requires having
all the data in the same place. While there can be workarounds for
storing the whole dataset in memory, I chose a quicker to implement
and more performant solution.&lt;/p&gt;

&lt;p&gt;Let me recap how the Lloyd&amp;rsquo;s algorithm works:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We calculate the distances between the samples and the centroids,
pick the centroid with the minimum distance for every sample (assignment stage).&lt;/li&gt;
&lt;li&gt;We update the centroids by averaging all the samples assigned to each
(centroids stage).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The current multi-gpu scheme is as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We cut the samples into as many intervals as GPUs are available.
Each GPU works with one interval, calculates the distances and
writes the local assignments.&lt;/li&gt;
&lt;li&gt;GPUs transfer the assignments to each other in an all to all manner.&lt;/li&gt;
&lt;li&gt;We cut the centroids into the same number of intervals as the number of
GPUs. Each GPU works with one interval and updates the local centroids.&lt;/li&gt;
&lt;li&gt;GPUs transfer the centroids to each other in an all to all manner.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Steps 2 and 4 require efficient peer to peer communication, and indeed
I am using &lt;code&gt;cudaMemcpyPeer()&lt;/code&gt;. This approach works well with 2 or 4 GPUs,
but it may produce too much comunication traffic with a bigger number.
In the future (when I start using 8-GPU installments ;)) I will use NVIDIA&amp;rsquo;s
awesome &lt;a href=&#34;https://github.com/NVIDIA/nccl&#34;&gt;nccl&lt;/a&gt; library.&lt;/p&gt;

&lt;p&gt;Conceptually, nothing changes, and the same parallelization pattern is
applied to the Yinyang refinement. The devil is in the implementation details,
as usual.&lt;/p&gt;

&lt;p&gt;Enabling peer to peer accees takes quadratic complexity since the
&lt;code&gt;cudaDeviceEnablePeerAccess()&lt;/code&gt; function must be called for every pair
of GPUs, even for the same pair but reversed. This is surely not an issue
but still fun.&lt;/p&gt;

&lt;p&gt;You have to call &lt;code&gt;cudaSetDevice()&lt;/code&gt; before any other CUDA API call or you
may end up with the wrong device. This is not cool at all and I think
the weakest part of the whole CUDA runtime API. Setting the device number for
every API function would be much better, and it would cure all the
thread safety issues which are currently solved in an ugly manner by the thread local
context.&lt;/p&gt;

&lt;p&gt;You shouldn&amp;rsquo;t mix kernel calls with peer to peer memory exchanges,
because &lt;code&gt;cudaMemcpyPeerAsync()&lt;/code&gt; requires &lt;strong&gt;both&lt;/strong&gt; device pipelines
to become ready. In other words, the following will serialize the computation:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;for each device {
  kernel&amp;lt;&amp;lt;&amp;lt;...&amp;gt;&amp;gt;&amp;gt;(...);
  for all other devices {
    // wrong - will block other device&#39;s stream
    cudaMemcpyPeerAsync(this device, other device);
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But this will work:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;for each device {
  kernel&amp;lt;&amp;lt;&amp;lt;...&amp;gt;&amp;gt;&amp;gt;(...);
}
// all pipelines are loaded now
for each device {
  for all other devices {
    cudaMemcpyPeerAsync(this device, other device);
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I wrapped all the repeating boilerplate code in macros. While I am DRY
now, I clearly stepped into a macro hell. Here is an example. An innocent
line which allocates ccounts (centroid assignments counters
written on stage 1 and read on stage 2)&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CUMALLOC(device_ccounts, clusters_size);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;hellip;is actually&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;do {
  do {
    for (int dev : devs) {
      cudaSetDevice(dev);
      do {
        void* __ptr;
        do {
          auto __res = cudaMalloc(
              &amp;amp;__ptr,
              (clusters_size) *
                  sizeof(std::remove_reference&amp;lt;decltype(
                             device_ccounts)&amp;gt;::type::value_type::element_type));
          if (__res != 0) {
            do {
              if (verbosity &amp;gt; 1) {
                printf(&amp;quot;%s\n&amp;quot;,
                       &amp;quot;cudaMalloc( &amp;amp;__ptr, (clusters_size) * &amp;quot;
                       &amp;quot;sizeof(std::remove_reference&amp;lt;decltype(device_ccounts)&amp;gt;:&amp;quot;
                       &amp;quot;:type::value_type ::element_type))&amp;quot;);
              }
            } while (false);
            do {
              if (verbosity &amp;gt; 0) {
                printf(&amp;quot;%s:%d -&amp;gt; %s\n&amp;quot;, &amp;quot;_file_name_&amp;quot;, 301,
                       cudaGetErrorString(__res));
              }
            } while (false);
            do {
              if (verbosity &amp;gt; 0) {
                printf(
                    &amp;quot;failed to allocate %zu bytes for &amp;quot;
                    &amp;quot;device_ccounts&amp;quot;
                    &amp;quot;\n&amp;quot;,
                    static_cast&amp;lt;size_t&amp;gt;(clusters_size));
              }
            } while (false);
            return kmcudaMemoryAllocationFailure;
          }
        } while (false);
        (device_ccounts)
            .emplace_back(
                reinterpret_cast&amp;lt;std::remove_reference&amp;lt;decltype(
                    device_ccounts)&amp;gt;::type::value_type::element_type*&amp;gt;(__ptr));
      } while (false);
    }
  } while (false);
} while (false)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And this is only one tiny example. I deeply regret what I have done.
However, I don&amp;rsquo;t see any other ways to stay DRY. Perhaps I should have been WET after all.&lt;/p&gt;

&lt;h3 id=&#34;fp16:0f383f0988f980083ee61048001e3e6d&#34;&gt;fp16&lt;/h3&gt;

&lt;p&gt;NVIDIA&amp;rsquo;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Pascal_(microarchitecture&#34;&gt;Pascal&lt;/a&gt;) architecture allows calculations with the half2
data type - two 16-bit floats packed into a 32-bit struct.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://devblogs.nvidia.com/wp-content/uploads/2015/07/fp16_format-624x146.png&#34; alt=&#34;half and half2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;All the operations on half and half2 types exist in the form of
&lt;a href=&#34;https://en.wikipedia.org/wiki/Intrinsic_function&#34;&gt;compiler intrinsics&lt;/a&gt;.
For example, if you want to sum two half2 values, the following code
will not be compiled:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;__device__ half2 foo(half2 a, half2 b) {
  return a + b;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;but this will work:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;__device__ half2 foo(half2 a, half2 b) {
  return __hadd2(a. b);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In theory, I should write nice C++ classes which wrap half2 and offer
overloaded operators, but in practice, there are problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;They will devastate the performance of the Debug build.&lt;/li&gt;
&lt;li&gt;They will simplify only the limited number of operations: +, - and *
(division in CUDA is a bad idea - one normally caches the reciprocal
and uses it later).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So my decision was to wrap the intrinsics into plain functions with
&lt;a href=&#34;https://en.wikipedia.org/wiki/Inline_expansion&#34;&gt;inlining&lt;/a&gt; forced via
&lt;code&gt;__forceinline__&lt;/code&gt;. Thus the calculation code remains the same for both
data types, whereas all the fast math is applied properly and there is
no need for &lt;code&gt;--use-fast-math&lt;/code&gt; flag for &lt;code&gt;nvcc&lt;/code&gt;. I mean, for example,
taking the square root from a 32-bit float is performed using
&lt;code&gt;__fsqrt_rn&lt;/code&gt; intrinsic and not the normal &lt;code&gt;sqrt&lt;/code&gt; function. The latter
is translated to the former only if &lt;a href=&#34;http://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#options-for-steering-gpu-code-generation&#34;&gt;fast math&lt;/a&gt;
is enabled, but the precision may degrade. The fast math switch activates some other
trade-off optimizations which are not desirable to have in our code.&lt;/p&gt;

&lt;p&gt;Although the functions are inlined, they still increased the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Instruction_set#REGISTER-PRESSURE&#34;&gt;register pressure&lt;/a&gt;
for some reason, that is, some kernels demanded more registers than they did before.
While it is not bad for the kernels, the occupancy of which is bounded with the
shared memory usage, it harms others. I successfully battled with the
pressure using the &lt;a href=&#34;http://blog.icare3d.org/2010/04/cuda-volatile-trick.html&#34;&gt;volatile trick&lt;/a&gt;:
if you declare some often used variables as &lt;code&gt;volatile&lt;/code&gt;, you force them
to stick to the same registers and not be inlined. Yet I don&amp;rsquo;t feel
that I have squeezed everything from that microoptimization, for example,
Yinyang local filter is eating 40 registers whatever I try to alter.&lt;/p&gt;

&lt;h3 id=&#34;spherical-k-means:0f383f0988f980083ee61048001e3e6d&#34;&gt;Spherical K-Means&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;/post/kmcuda4/sphere.png&#34; alt=&#34;sphere&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Sometimes, the L2 distance metric is not the best one in which to do
clustering. L2, or simply Euclidean, is the square root of the sum of squares:
$$
\Delta_ 2(\vec{x}, \vec{y}) = \sqrt{\sum_ i\limits x_ i^2}
$$
It takes into account the angle between \(\vec{x}\) and \(\vec{y}\),
as well as their magnitude. Angular distance equals to the
angle between two vectors and effectively discards the
information about the magnitude which may be useful for NLP datasets.
It is often referred to as the &amp;ldquo;cosine distance&amp;rdquo;: given the formula for
the scalar product between two vectors \(\vec{x}\cdot\vec{y}=|\vec{x}||\vec{y}|\cos\alpha\),
the angular distance can be easily calculated:
$$
\Delta_ {angle}(\vec{x}, \vec{y}) = \arccos{\frac{\vec{x}\cdot\vec{y}}{|\vec{x}||\vec{y}|}}
$$
If we fix the lengths of all the vectors to 1, it becomes even shorter:
$$
\Delta_ {angle}(\vec{x}, \vec{y}) = \arccos{\vec{x}\cdot\vec{y}}
$$&lt;/p&gt;

&lt;p&gt;Using this distance metric in K-Means leads us to the variant of
Spherical K-Means. There are two modifications relative to the
conventional Lloyd algorithm:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Distance is \(\Delta_ {angle}\).&lt;/li&gt;
&lt;li&gt;Centroids must be renormed to 1 after each iteration (hence &amp;ldquo;spherical&amp;rdquo;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both of these modification do not contradict with Yinyang refinement since
it is based solely on the triangle inequality.&lt;/p&gt;

&lt;p&gt;The implementation of the angular distance leveraged templates support in
CUDA code again. I added the second template parameter (well, actually
made it the first) and extracted the common routines into &lt;code&gt;__device__ __forceinline__&lt;/code&gt;
functions. I had to use &amp;ldquo;traits&amp;rdquo;-like structures because C++ does not
support partial template function specialization. Besides, I hit
the overflow issue with fp16 during the renorming procedure: it involves
the summation of the squares and the result quickly goes beyond the
maximum limit for 16-bit floats (\(2^{16}\)). I had to rollback
to converting from fp16 to fp32 and doing all the operations with
increased precision in that case. I didn&amp;rsquo;t have such issues with L2
because the sum of the squared sample elements is always much smaller;
e.g. 256-dimension vector&amp;rsquo;s squared L2 norm with the average element magnitude
of 10 is \(256 * 10^2 = 25600 &amp;lt; 2^{16}\). Yet still I would recommend
to norm the dataset by subtracting the mean and dividing by the dispersion
when clustering with fp16 and L2.&lt;/p&gt;

&lt;p&gt;The kernel invocation code becomes pure
hell because I had to give birth to this dreaded template switch:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;#define KERNEL_SWITCH(f, ...) do { switch (metric) { \
  case kmcudaDistanceMetricL2: \
    if (!fp16x2) { \
        using F = float; \
        f&amp;lt;kmcudaDistanceMetricL2, float&amp;gt;__VA_ARGS__; \
    } else { \
        using F = half2; \
        f&amp;lt;kmcudaDistanceMetricL2, half2&amp;gt;__VA_ARGS__; \
    } \
    break; \
  case kmcudaDistanceMetricCosine: \
    if (!fp16x2) { \
        using F = float; \
        f&amp;lt;kmcudaDistanceMetricCosine, float&amp;gt;__VA_ARGS__; \
    } else { \
        using F = half2; \
        f&amp;lt;kmcudaDistanceMetricCosine, half2&amp;gt;__VA_ARGS__; \
    } \
    break; \
} } while(false)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;KERNEL_SWITCH(kmeans_assign_lloyd, &amp;lt;&amp;lt;&amp;lt;sgrid, sblock, shmem_size&amp;gt;&amp;gt;&amp;gt;(
    length,
    reinterpret_cast&amp;lt;const F*&amp;gt;(samples[devi].get() + offset * h_features_size),
    reinterpret_cast&amp;lt;const F*&amp;gt;((*centroids)[devi].get()),
    (*assignments_prev)[devi].get() + offset,
    (*assignments)[devi].get() + offset));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From a user&amp;rsquo;s perspective, the C API adds &lt;code&gt;metric&lt;/code&gt; enumerated parameters
and the Python API adds &lt;code&gt;metric&lt;/code&gt; string parameters.&lt;/p&gt;

&lt;h3 id=&#34;kahan-summation:0f383f0988f980083ee61048001e3e6d&#34;&gt;Kahan summation&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;/post/kmcuda4/kahan.png&#34; alt=&#34;kahan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;K-Means (Lloyd) algorithm includes the calculation of the distances
between two points. Whichever metric is used, it includes the summation
of some values across all the dimensions. While the number of dimenions
is low, everything&amp;rsquo;s fine, however, the precision of the summation
quickly drops as it increases. The cause is the classical loss of
floating point precision in the addition operation: if you try
to sum 32-bit float \(2^{20}\) with \(2^{-20}\), the result will be still
\(2^{10}\) since the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Floating_point#Internal_representation&#34;&gt;mantissa&lt;/a&gt;
is saturated. At the time I started the project it wasn&amp;rsquo;t much of an issue
with 32-bit floats, but became obvious when I added 16-bit floats.&lt;/p&gt;

&lt;p&gt;Practically, the loss of precision leads to worse clustering and more
iterations. To deal with that problem, where possible I decided to use
Kahan summation with both 32- and 16-bit floats. While it may have slightly degraded
the performance, the results became more stable and mathematically correct.&lt;/p&gt;

&lt;p&gt;Kahan summation is well described on
&lt;a href=&#34;https://en.wikipedia.org/wiki/Kahan_summation_algorithm&#34;&gt;Wikipedia&lt;/a&gt;. It
is awesome because it requires only \(O(1)\) space, particularly,
one additional variable to store the current error correction value.
Besides, it didn&amp;rsquo;t increase the register pressure in the kernels at all.&lt;/p&gt;

&lt;h3 id=&#34;zero-copy:0f383f0988f980083ee61048001e3e6d&#34;&gt;Zero-copy&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;/post/kmcuda4/zero.png&#34; alt=&#34;zero&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The input samples can now be taken from the GPU memory. In that case,
resulting centroids and cluster are supposed to be allocated on the same GPU
and written using CUDA memcpy. This feature is activated by &lt;code&gt;device_ptrs&lt;/code&gt;
parameter in C API. If it is negative (the default), the usual behavior
is retained. Otherwise, it specifies the device number on which samples
array is allocated. I had a special kind of fun debugging &lt;code&gt;device_ptrs&lt;/code&gt;
with multiple GPUs, but everything should work fine now.&lt;/p&gt;

&lt;p&gt;In the case of the Python API, you can pass a tuple with the CUDA pointer,
the device number and the shape instead of the normal numpy array to
&lt;code&gt;samples&lt;/code&gt; argument. Optionally, that tuple may be extended with
preallocated centroids and assignments pointers. Normally, Python users
do not work with the CUDA API directly (see how the tests extract raw pointers
from pyCUDA or cuda4py arrays).&lt;/p&gt;

&lt;h3 id=&#34;build:0f383f0988f980083ee61048001e3e6d&#34;&gt;Build&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;/post/kmcuda4/travis.png&#34; alt=&#34;travis&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Some time ago, the library was compiled for only the hardcoded CUDA device
architecture 5.2 (Titan X, Maxwell). However, 16-bit float pairs / half2 type are
not supported by 5.2, they first appeared in 6.0. So I had to add the
ability to choose the target architecture by defining &lt;code&gt;CUDA_ARCH&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cmake -DCUDA_ARCH=52 ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It should match the set of possible values of &lt;code&gt;nvcc&lt;/code&gt;&amp;rsquo;s argument &lt;code&gt;-arch sm_*&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next, I made the compilation of the Python wrapper optional, since I believe
that not everybody needs it. It is still compiled by default, but can be
turned off by defining &lt;code&gt;DISABLE_PYTHON&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;kmcuda extensively uses &lt;a href=&#34;https://en.wikipedia.org/wiki/C%2B%2B11&#34;&gt;C++11&lt;/a&gt;
either in the host or the device code, so &lt;code&gt;nvcc&lt;/code&gt; should be passed the
corresponding flag. &lt;code&gt;cmake&lt;/code&gt; propagates the host compiler&amp;rsquo;s options to &lt;code&gt;nvcc&lt;/code&gt;,
but C++11 activation used to be discarded until cmake version 3.3.
Thanks to NVIDIA&amp;rsquo;s &lt;a href=&#34;https://github.com/Kitware/CMake/commit/99abebdea01b9ef73e091db5594553f7b1694a1b&#34;&gt;contribution to cmake&lt;/a&gt;,
it&amp;rsquo;s been repaired since then. I had to apply some workaround for older cmake-s
because TravisCI features outdated Ubuntu 14.04 LTS with an ancient cmake.&lt;/p&gt;

&lt;p&gt;Speaking about Travis, yes, I added continuous integration which checks
whether the library is successfully built. There is no possibility to
run tests because they require a CUDA device.&lt;/p&gt;

&lt;p&gt;Finally, I hit the problem with uploading Python &lt;a href=&#34;http://pythonwheels.com/&#34;&gt;wheels&lt;/a&gt;
aimed at Linux to the &lt;a href=&#34;https://wiki.python.org/moin/CheeseShop&#34;&gt;cheese shop&lt;/a&gt;.
Linux wheels are simply not allowed to upload because they are usually
very sensitive to the environment. Thankfully, there is a nice
project &lt;a href=&#34;https://github.com/pypa/auditwheel&#34;&gt;auditwheel&lt;/a&gt; which can patch
the binaries to be less demanding, it works great and produces &amp;ldquo;manylinux&amp;rdquo;
wheels. Those patched wheels may be successfully uploaded using
&lt;a href=&#34;https://pypi.python.org/pypi/twine&#34;&gt;twine&lt;/a&gt;. btw. I opened an
&lt;a href=&#34;https://github.com/tensorflow/tensorflow/issues/5033&#34;&gt;issue in Tensorflow&lt;/a&gt;
with a similar improvement suggestion.&lt;/p&gt;

&lt;h3 id=&#34;tests:0f383f0988f980083ee61048001e3e6d&#34;&gt;Tests&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;/post/kmcuda4/tests.png&#34; alt=&#34;tests&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Since the very beginning, kmcuda has had the Python3 wrapper. The tests
have been written in Python, which gives several advantages:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Python wrapper code is automatically tested, too.&lt;/li&gt;
&lt;li&gt;No need to compile tests during the build.&lt;/li&gt;
&lt;li&gt;Tests development is much more flexible and easier.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are 18 tests at the moment. 5 of them are devoted to fp16 and thus
are skipped if the library is compiled for the 5.2 architecture or older. This is
provided by the addition of &lt;code&gt;libKMCUDA.supports_fp16&lt;/code&gt; Bool variable.&lt;/p&gt;

&lt;p&gt;Sometimes tiny changes in the source code lead to a slight divergence
in the clustering results, which is not always good. The divergence may
occur on, say, 10-th iteration and lead to 16 iterations instead of 15 overall.
There must be a reliable way to validate the clustering process. Since
the C API or Python API do not provide any introspection into it, the only
solution is to record logs, that is, standard output on the biggest
verbosity level, and parse them.&lt;/p&gt;

&lt;p&gt;Intercepting stdout in Python is usually easy, one monkey-patches
&lt;code&gt;sys.stdout&lt;/code&gt;. However, that works with normal Python scripts only - it
has nothing to with the real system streams. I had to write
&lt;code&gt;StdoutListener&lt;/code&gt; which temporarily redirects the real stdout file stream:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class StdoutListener(object):
    def __init__(self):
        self._file = None
        self._stdout = &amp;quot;&amp;quot;
        self._stdout_fd_backup = None

    def __enter__(self):
        self._file = tempfile.TemporaryFile()
        self._stdout_fd_backup = os.dup(sys.stdout.fileno())
        os.dup2(self._file.fileno(), sys.stdout.fileno())

    def __exit__(self, exc_type, exc_val, exc_tb):
        os.dup2(self._stdout_fd_backup, sys.stdout.fileno())
        self._file.seek(0)
        self._stdout = self._file.read().decode(&amp;quot;utf-8&amp;quot;)
        self._file.close()
        self._file = None
        os.close(self._stdout_fd_backup)
        self._stdout_fd_backup = None
        print(self._stdout)

    def __str__(self):
        return self._stdout
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The intended usage of this class is as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;stdout = StdoutListener()
with stdout:
    # do some stuff
captured = str(stdout)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Internally, it makes the classic dup/dup2 redirection:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open a temporary file.&lt;/li&gt;
&lt;li&gt;Clone stdout to some backup file descriptor.&lt;/li&gt;
&lt;li&gt;Redirect stdout to the opened temporary file.&lt;/li&gt;
&lt;li&gt;Do some work which prints to stdout, all output goes to the temporary file.&lt;/li&gt;
&lt;li&gt;Restore stdout from the backup so that the subsequent output goes to the terminal again.&lt;/li&gt;
&lt;li&gt;Read the contents of the temporary file and close it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The second cause of the divergence in test results is the random generator.
That was foreseen from the very beginning, so I always set the random
generator&amp;rsquo;s seed before running every test to achieve 100% reproducibility.&lt;/p&gt;

&lt;h3 id=&#34;summary:0f383f0988f980083ee61048001e3e6d&#34;&gt;Summary&lt;/h3&gt;

&lt;p&gt;As you see, the new kmcuda has a lot of cool features which have already
been tested in our production environment. Try it out!
It&amp;rsquo;s only been tested on Linux but feel free to port it to other platforms.
Besides, it only supports Python3 and I have no plans to port it to Python2,
sorry.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;ve got a new Pascal GPU like Titan X 2016, installing the library
is as simple as &lt;code&gt;pip3 install libKMCUDA&lt;/code&gt;. If your GPU&amp;rsquo;s architecture is older,
you have to build it from source - please refer to
&lt;a href=&#34;https://github.com/src-d/kmcuda/blob/develop/README.md&#34;&gt;README.md&lt;/a&gt;.&lt;/p&gt;

&lt;script async src=&#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_CHTML&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Native GNU nano text editor in CoreOS.</title>
      <link>/post/coreos_nano/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/coreos_nano/</guid>
      <description>

&lt;p&gt;Sometimes, you want to edit text files inside CoreOS. Either you have to use the Vim
editor which is shipped by default or use a container, e.g. Toolbox. I am not a fan
Vim and feel that using a container to launch a text editor for temporal edits
is overkill. I am used to &lt;a href=&#34;https://www.nano-editor.org/&#34;&gt;GNU nano&lt;/a&gt; and I would like
to use it instead of Vim. Since there is no package manager in CoreOS (and it
shouldn&amp;rsquo;t have one of course), one has to either copy the &lt;code&gt;nano&lt;/code&gt; binary from a donor container
or compile it from scratch. The binary is linked dynamically in all Linux distributions,
so launching it in CoreOS fails with &amp;ldquo;library not found&amp;rdquo; errors. Let&amp;rsquo;s face it:
&lt;code&gt;nano&lt;/code&gt; must be compiled in order to work with all the features.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/coreos_nano/nano.png&#34; alt=&#34;nano&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I am used to Ubuntu, so I will cook &lt;code&gt;nano&lt;/code&gt; in it&amp;rsquo;s environment. The following supposes
that you have access to the CoreOS command line prompt.&lt;/p&gt;

&lt;h4 id=&#34;prepare-the-system:4c09a45dcc65e194fab65d0b8616f5c5&#34;&gt;Prepare the system&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# Override toolbox from Fedora to Ubuntu
echo &amp;quot;TOOLBOX_DOCKER_IMAGE=ubuntu&amp;quot; &amp;gt; ~/.toolboxrc
toolbox

# The next commands are issued inside the container
apt build-dep nano
apt install libmagic-dev libgpm-dev wget
wget https://www.nano-editor.org/dist/v2.7/nano-2.7.1.tar.gz
tar -xf nano-2.7.1.tar.gz
cd nano-2.7.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;build-dep&lt;/code&gt; should install the C compiler and all the build dependencies, however,
two extra libraries must be installed: &lt;a href=&#34;https://github.com/file/file&#34;&gt;libmagic&lt;/a&gt;
enables &lt;code&gt;nano&lt;/code&gt; to select the syntax highlight scheme based on the edited file&amp;rsquo;s
contents (by the way, &lt;code&gt;file&lt;/code&gt; command in Linux is based on the same library) and
libgpm is one of the opaque dependencies of &lt;a href=&#34;https://www.gnu.org/software/ncurses/&#34;&gt;libncurses&lt;/a&gt;.
libncurses in turn is the library to create console user interfaces. Basically, every program
which has a console UI uses it: &lt;code&gt;vim&lt;/code&gt;, &lt;code&gt;mc&lt;/code&gt;, &lt;code&gt;less&lt;/code&gt; and &lt;code&gt;more&lt;/code&gt; and even web browsers like &lt;code&gt;w3m&lt;/code&gt;.
Usually it is accompanied with &lt;a href=&#34;https://cnswww.cns.cwru.edu/php/chet/readline/rltop.html&#34;&gt;libreadline&lt;/a&gt;,
an essential abstraction layer to work with the terminal prompt, it is used by
Bash, Vim, Python REPL, etc. By the way, every time you press Ctrl-R in the terminal, you use libreadline.&lt;/p&gt;

&lt;h4 id=&#34;building:4c09a45dcc65e194fab65d0b8616f5c5&#34;&gt;Building&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;mkdir build &amp;amp;&amp;amp; cd build
# The tricky part
../configure --enable-utf8 --prefix=/opt CFLAGS=&amp;quot;-flto -O2 -march=native&amp;quot; LDFLAGS=&amp;quot;-static&amp;quot; LIBS=&amp;quot;-ltinfo -lgpm -lz&amp;quot;
make -j$(getconf _NPROCESSORS_ONLN)
mkdir install &amp;amp;&amp;amp; make install DESTDIR=$(pwd)/install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The point is, we &lt;strong&gt;must&lt;/strong&gt; compile &lt;code&gt;nano&lt;/code&gt; statically linked, because CoreOS&amp;rsquo;s &lt;code&gt;/etc/ldconfig&lt;/code&gt;
library paths are all readonly (e.g., /opt/lib could be a
good candidate but is not listed). &lt;code&gt;nano&lt;/code&gt;&amp;rsquo;s dependency libraries are indeed not
present in CoreOS and there is no way to add them nicely (&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;,
&lt;code&gt;LD_PRELOAD&lt;/code&gt; are hacks which should be avoided). If &lt;code&gt;nano&lt;/code&gt; was written in Go,
there would be no problem since the Go compiler always links programs statically.
Unfortunately, we have to deal with C.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;nano&lt;/code&gt; is traditional GNU software which is built using
&lt;a href=&#34;https://en.wikipedia.org/wiki/GNU_Build_System&#34;&gt;autotools&lt;/a&gt; and
&lt;a href=&#34;https://en.wikipedia.org/wiki/Make_(software&#34;&gt;make&lt;/a&gt;). The build is performed
in three steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Generate the &lt;code&gt;configure&lt;/code&gt; script. Usually, maintainers ship it inside the source tarball.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;configure&lt;/code&gt; script to create the makefiles, check the environment, etc.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;make&lt;/code&gt; - compile everything.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;make install&lt;/code&gt; to put the built files into the desired location. Sometimes, libraries get relinked to match the destination directory.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;GCC offers a &lt;code&gt;-static&lt;/code&gt; flag which we can inject via LDFLAGS during the configuration step.
However, it will fail then. The problem is in dependencies: for example,
ncurses depends on libtinfo and it is not linked automatically. The described
situation is total hell in case of large programs with plenty of dependencies.
We are lucky that we&amp;rsquo;ve got the tiny &lt;code&gt;nano&lt;/code&gt;!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ldd $(which nano)
    linux-vdso.so.1 (0x00007ffdc091c000)
    libmagic.so.1 =&amp;gt; /lib64/libmagic.so.1 (0x00007f6ebe62a000)
    libncursesw.so.6 =&amp;gt; /lib64/libncursesw.so.6 (0x00007f6ebe3f1000)
    libtinfo.so.6 =&amp;gt; /lib64/libtinfo.so.6 (0x00007f6ebe1c4000)
    libc.so.6 =&amp;gt; /lib64/libc.so.6 (0x00007f6ebde01000)
    libz.so.1 =&amp;gt; /lib64/libz.so.1 (0x00007f6ebdbeb000)
    libdl.so.2 =&amp;gt; /lib64/libdl.so.2 (0x00007f6ebd9e6000)
    /lib64/ld-linux-x86-64.so.2 (0x00005597ae3f0000)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The dependencies can be added manually and this is what I did with setting LIBS.
libc and libdl are not needed to append - they are system stuff.&lt;/p&gt;

&lt;p&gt;Finally, CFLAGS activates &lt;a href=&#34;https://en.wikipedia.org/wiki/Interprocedural_optimization&#34;&gt;link time optimization&lt;/a&gt;
which is a must-have if you link statically, sets optimization level and allows
the compiler to optimize for the current hardware.&lt;/p&gt;

&lt;h4 id=&#34;installing:4c09a45dcc65e194fab65d0b8616f5c5&#34;&gt;Installing&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;mkdir /media/root/opt/{bin,share,etc}
cp install/opt/bin/nano /media/root/opt/bin
cp -r install/opt/share/nano /media/root/opt/share
echo &amp;quot;include /opt/share/nano/*.nanorc&amp;quot; &amp;gt; /media/root/opt/etc/nanorc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here we are using the fact that CoreOS lists &lt;code&gt;/opt/bin&lt;/code&gt; in &lt;code&gt;PATH&lt;/code&gt; and effectively
allows adding your custom binaries. Additionally, we write the nanorc configuration
to activate syntax highlight rules.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s it!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nano --version
 GNU nano, version 2.7.1
 (C) 1999..2016 Free Software Foundation, Inc.
 (C) 2014..2016 the contributors to nano
 Email: nano@nano-editor.org	Web: https://nano-editor.org/
 Compiled options: --enable-utf8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://drive.google.com/open?id=0B-w8jGUJto0iNzVBakZ3UUxLZGs&#34;&gt;Binary download link.&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;now-seriously:4c09a45dcc65e194fab65d0b8616f5c5&#34;&gt;Now seriously&lt;/h4&gt;

&lt;p&gt;As we saw, it is possible to statically link C/C++ programs in pretty much the
same way Go does it. In Go, you execute &lt;code&gt;go get&lt;/code&gt; and you are done. In C, you
have to be a good system programmer and to spend an hour struggling with the compiler.
My next text editor will be written in Go for sure&amp;hellip; or Vim.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hands on with the most starred GitHub repositories.</title>
      <link>/post/github_stars/</link>
      <pubDate>Mon, 14 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/github_stars/</guid>
      <description>

&lt;p&gt;Recently I started to collect all the available metadata (name,
number of stars, forks, watchers, etc.) from the most popular GitHub repositories.
I chose the &amp;ldquo;number of stargazers&amp;rdquo; as a measure of popularity. This metric
is by no means perfect, but at least should have a strong positive correlation.
&lt;details&gt;
&lt;summary style=&#34;cursor: pointer;&#34;&gt;How I quickly grabbed all repositories with ≥50 stars (over 120k) using a &lt;span style=&#34;text-decoration: line-through;&#34;&gt;crappy&lt;/span&gt; script.&lt;/summary&gt;&lt;/p&gt;

&lt;p&gt;Seems easy, but the GitHub API limits make it nontrivial. Let me remind you:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Registered users may not issue more than 30 API requests per minute,
5,000 per hour. This is unpleasant but we can live with this, since only the
retrieval speed is reduced.&lt;/li&gt;
&lt;li&gt;Search API is limited to 1000 results. This is much worse than (1), because
it limits the volume of data we can fetch even we have infinite time.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If we go to the GitHub web search and set the query to
&lt;a href=&#34;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=stars%3A%3E%3D50&amp;amp;ref=simplesearch&#34;&gt;stars:&amp;gt;=50&lt;/a&gt;,
we will get more than 124,000 results. Apparently, we cannot fetch
all of them in a single step and have to hack this. I&amp;rsquo;ve always loved to hack,
so I created &lt;a href=&#34;https://github.com/vmarkovtsev/GitHubStars&#34;&gt;vmarkovtsev/GitHubStars&lt;/a&gt;.
It is a quick and dirty Python script which fetches Search API results
in batches. It works in two stages:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Probe GitHub Search API results for specific star intervals.&lt;/li&gt;
&lt;li&gt;Fetch those intervals one by one.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For example, we probe the number of repositories returned from the query
&lt;code&gt;stars:50..60&lt;/code&gt; and get 17,870 results. Too much (we&amp;rsquo;ve have a 1k limit, remember).
OK, then we probe &lt;code&gt;stars:50..55&lt;/code&gt; and get 10,566. Still too much. We continue
to bisect the interval until we eventually converge to &lt;code&gt;stars:50..50&lt;/code&gt;
with 1,885. That number is bigger than 1000; does it mean we are unable
to fetch all repositories rated with 50 stars? The answer is no, if we
apply a trick which I call &amp;ldquo;updated dual-order&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;The idea is to sort the response by the last updated date of the repository
(Search API allows setting different sort keys). We make 2 requests,
the first with ascending order and the second with descending. We take
1000 from the first and the last 885 from the second. Thus we extend the
maximum number of query results to 2k.&lt;/p&gt;

&lt;p&gt;The outcome of the first stage is the list of the star intervals we are
able to consume as a whole, each yielding less than 2000 items.
Probes are made with the page size equal to 1 and are very fast. The second
stage alters the page size to 100 (the maximum allowed) and extracts the data.
Here is how to launch the script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python3 github_stars.py -i &amp;lt;api token&amp;gt; -o repos.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It takes about 2 hours to finish with my somewhat slow home internet connection.
We scheduled to record the stars snapshots every week in our production environment.
&lt;/details&gt;&lt;/p&gt;

&lt;p&gt;This is the log log histogram of the repository-star relation:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stars/hist.png&#34; alt=&#34;hist.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;X axis is the logarithm of the number of stars \(\log S\), Y axis is the logarithm
of the repositories density \(\log\frac{dR}{dS}\). If we want
to answer the question, how many repositories are starred between \(S_ {min}\)
ans \(S_ {max}\), the answer will be \(\int_ {S_ {min}}^{S_ {max}} \limits \frac{dR}{dS} dS\).
Logarithms are used because the derivative vanishes very quickly as \(S\) grows.
It is clearly seen that the repositories density drops exponentially as the
number of stargazers increases. Let&amp;rsquo;s prove the distribution is actually
&lt;a href=&#34;https://en.wikipedia.org/wiki/Log-normal_distribution&#34;&gt;log-normal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stars/stats_time.png&#34; alt=&#34;statistics time&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We will use the awesome &lt;a href=&#34;https://github.com/jeffalstott/powerlaw&#34;&gt;powerlaw&lt;/a&gt;
package to plot the estimated &lt;a href=&#34;https://en.wikipedia.org/wiki/Probability_density_function&#34;&gt;PDF&lt;/a&gt;
and the log-normal fit.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pickle, numpy, powerlaw
# Load the repositories metadata from GitHubStars
with open(&amp;quot;repos.pickle&amp;quot;, &amp;quot;rb&amp;quot;) as fin:
    repos = pickle.load(fin)
# Extract the series of star numbers
stars = numpy.array([r.stargazers_count for r in repos])
# Fit into all possible discrete distributions with a single awesome line
# There is no data before 50; the distribution becomes unstable after 1000
fit = powerlaw.Fit(stars, xmin=50, xmax=1000, discrete=True)
# Plot the projected and fitted probability distributions
fit.plot_pdf()
fit.power_law.plot_pdf(linestyle=&amp;quot;--&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stars/fit.png&#34; alt=&#34;fit&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We see that the fit is good. It&amp;rsquo;s parameters are: μ=-15.31, σ=5.23.
We crop the observed interval by 1000,
it contains 93% of all the analysed repositories and does not include very high rated
noisy samples (as seen on the histogram or on full PDF). Those noisy samples
are unstably, randomly distributed and are not fittable.
Let&amp;rsquo;s compare the log-normal hypothesis with the
&lt;a href=&#34;https://en.wikipedia.org/wiki/Power_law#Power-law_probability_distributions&#34;&gt;power-law&lt;/a&gt;
and &lt;a href=&#34;https://en.wikipedia.org/wiki/Exponential_distribution&#34;&gt;exponential&lt;/a&gt; ones.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt;&amp;gt;&amp;gt; fit.distribution_compare(&amp;quot;lognormal&amp;quot;, &amp;quot;exponential&amp;quot;, normalized_ratio=True)
(74.347790532408624, 0.0)
&amp;gt;&amp;gt;&amp;gt; fit.distribution_compare(&amp;quot;lognormal&amp;quot;, &amp;quot;power_law&amp;quot;, normalized_ratio=True)
(1.8897939959930001, 0.058785516870108641)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These are the handy loglikelihood trials built into powerlaw,
&lt;a href=&#34;http://pythonhosted.org/powerlaw/index.html?highlight=distribution_compare#powerlaw.Fit.distribution_compare&#34;&gt;link to the documentation&lt;/a&gt;.
It can be seen that with a 100% confidence the log-normal fit is better than exponential
and with 94% confidence better than the power-law.&lt;/p&gt;

&lt;p&gt;All right, what about the number of forks? Every registered GitHub user can fork
a repository to his or her personal account, incrementing the corresponding counter of the origin,
and GitHub API reports those counters&amp;rsquo; values.
Their distribution appears quite different:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stars/forks_hist.png&#34; alt=&#34;forks_hist&#34; /&gt;&lt;/p&gt;

&lt;p&gt;However, it fits well to log-normal within the interval [30, 5000] forks:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stars/forks_fit.png&#34; alt=&#34;forks_fit&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Please note: we are plotting in the log-log domain, so the imaginary plateau
on the histogram is not the &amp;ldquo;real&amp;rdquo; one.&lt;/p&gt;

&lt;p&gt;What about the number of open issues?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stars/issues_hist.png&#34; alt=&#34;issues_hist&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Fit in [10, 600]:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stars/issues_fit.png&#34; alt=&#34;issues_fit&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Thus the majority of the top rated repositories has a small number of open
issues, particularly 80% have less than 18.&lt;/p&gt;

&lt;p&gt;The three mentioned metrics appear to have the same distribution kind.
Are they actually correlated? A quick shot with
&lt;a href=&#34;http://pandas.pydata.org/pandas-docs/version/0.18.1/visualization.html#scatter-matrix-plot&#34;&gt;pandas&lt;/a&gt;
reveals it:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dataset = numpy.empty((len(repos), 3), dtype=float32)
dataset[:, 0] = [log(r.stargazers_count) for r in repos]
dataset[:, 1] = [log(r.forks_count + 1) for r in repos]
dataset[:, 2] = [log(r.open_issues_count + 1) for r in repos]
import pandas
df = pandas.DataFrame(dataset, columns=[&amp;quot;Stars&amp;quot;, &amp;quot;Forks&amp;quot;, &amp;quot;Open issues&amp;quot;])
axes = pandas.tools.plotting.scatter_matrix(df, alpha=0.2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stars/scatter.png&#34; alt=&#34;scatter&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So the answer is yes, all three are positively correlated. To be precise, here is
the correlation matrix:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1.00&lt;/td&gt;
&lt;td&gt;0.72&lt;/td&gt;
&lt;td&gt;0.45&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0.72&lt;/td&gt;
&lt;td&gt;1.00&lt;/td&gt;
&lt;td&gt;0.50&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0.45&lt;/td&gt;
&lt;td&gt;0.50&lt;/td&gt;
&lt;td&gt;1.00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;bonus:ef66b4a263852d8d1ae3996bb12d8d1b&#34;&gt;Bonus&lt;/h2&gt;

&lt;p&gt;It appeared that some highly rated repositories became ghosts, that is, are empty.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/openrasta/openrasta&#34;&gt;openrasta/openrasta&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Habraruby/Ruby-Problems&#34;&gt;Habraruby/Ruby-Problems&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/flyth/ts3soundbot&#34;&gt;flyth/ts3soundbot&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/StephanSchmidt/SimpleKanban&#34;&gt;StephanSchmidt/SimpleKanban&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/blend2d/b2d&#34;&gt;blend2d/b2d&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/core/wsgicore&#34;&gt;core/wsgicore&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/mlpoll/machinematch&#34;&gt;mlpoll/machinematch&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/paulirish/devtools-addons&#34;&gt;paulirish/devtools-addons&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/lukelove/AppceleratorRecord&#34;&gt;lukelove/AppceleratorRecord&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/TheKnightsWhoSayNi/info&#34;&gt;TheKnightsWhoSayNi/info&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/MozOpenHard/CHIRIMEN&#34;&gt;MozOpenHard/CHIRIMEN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/go-gitea/gitea_old&#34;&gt;go-gitea/gitea_old&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/realworldocaml/book&#34;&gt;realworldocaml/book&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/core/httpcore&#34;&gt;core/httpcore&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/DNS-P2P/DNS-P2P&#34;&gt;DNS-P2P/DNS-P2P&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/leoluk/thinkpad-stuff&#34;&gt;leoluk/thinkpad-stuff&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/lipeiwei-szu/ONE-API&#34;&gt;lipeiwei-szu/ONE-API&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/Tencent/behaviac&#34;&gt;Tencent/behaviac&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;And there are at least two repositories which are empty by design, either serving
as a wiki or as an issue tracker: &lt;a href=&#34;https://github.com/koush/support-wiki&#34;&gt;koush/support-wiki&lt;/a&gt;
and &lt;a href=&#34;https://github.com/WarEmu/WarBugs&#34;&gt;WarEmu/WarBugs&lt;/a&gt;.&lt;/p&gt;

&lt;script async src=&#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_CHTML&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Reading PySpark pickles locally</title>
      <link>/post/reading_pyspark_pickles_locally/</link>
      <pubDate>Tue, 08 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/reading_pyspark_pickles_locally/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve recently had a task to merge all the output from Spark in the Pickle format,
that is, obtained via &lt;code&gt;spark.rdd.RDD.saveAsPickleFile()&lt;/code&gt;, in my personal environment
and conduct some work with it. Surprisingly, no tools exist to read those files,
however it is relatively easy to do. I started &lt;a href=&#34;https://github.com/src-d/sparkpickle&#34;&gt;src-d/sparkpickle&lt;/a&gt;
project and this article is about how I created it, with some deep insight into
the binary format of Hadoop&amp;rsquo;s SequenceFile.&lt;/p&gt;

&lt;p&gt;First of all, some explanation of the relevant technologies. PySpark has the ability
to store the results in HDFS or any other data persistence backend in the efficient
Python-friendly binary format, &lt;a href=&#34;https://docs.python.org/3/library/pickle.html&#34;&gt;pickle&lt;/a&gt;.
It is the quick and dirty way to store Python objects, without having to define
any schema, do custom serialization and messing with general-purpose formats like
&lt;a href=&#34;http://spark.apache.org/docs/latest/sql-programming-guide.html#parquet-files&#34;&gt;Parquet&lt;/a&gt;.
Hadoop defines the binary format named &lt;a href=&#34;https://wiki.apache.org/hadoop/SequenceFile&#34;&gt;SequenceFile&lt;/a&gt;.
It is the stream of key-value pairs, where keys and values must have the uniform
types, and their class names are stored in the stream header. So basically,
PySpark writes SequenceFile-s with null keys and blob values.&lt;/p&gt;

&lt;p&gt;If you want to read those files on your personal computer and not in the Spark
cluster environment, you are in trouble: there is simply no way of doing it. You
have to install Spark, PySpark, connect it to your storage backend, process
the files and finally pickle the result of &lt;code&gt;collect()&lt;/code&gt;.
That&amp;rsquo;s why I had to write &lt;a href=&#34;https://github.com/src-d/sparkpickle&#34;&gt;src-d/sparkpickle&lt;/a&gt;:
it is a tiny Python package without &lt;em&gt;any&lt;/em&gt; dependencies which allows you to load
Python objects serialized by PySpark.&lt;/p&gt;

&lt;h2 id=&#34;saveaspicklefile-internals:70d834cd7a232165ca2fb2dcad051745&#34;&gt;saveAsPickleFile() internals&lt;/h2&gt;

&lt;p&gt;It appeared that PySpark&amp;rsquo;s &lt;a href=&#34;http://spark.apache.org/docs/latest/api/python/pyspark.html#pyspark.RDD.saveAsPickleFile&#34;&gt;saveAsPickleFile()&lt;/a&gt;
function works rather complicated. You can refer to it&amp;rsquo;s &lt;a href=&#34;https://github.com/apache/spark/blob/branch-2.1/python/pyspark/rdd.py#L1450&#34;&gt;source code&lt;/a&gt;.
It works in multiple steps.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Accumulate items in batches. The batch size is configured with the &lt;code&gt;batchSize&lt;/code&gt; argument.
Each batch is the list of Python objects you return or yield in your PySpark RDD pipeline.
Performed on Python side by &lt;a href=&#34;https://github.com/apache/spark/blob/branch-2.1/python/pyspark/serializers.py#L180&#34;&gt;BatchedSerializer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Each batch is pickled on Python side by &lt;a href=&#34;https://github.com/apache/spark/blob/branch-2.1/python/pyspark/serializers.py#L403&#34;&gt;PickleSerializer&lt;/a&gt;.
It writes data in frames, each frame is the size of the subsequent data chunk and the chunk itself.
All integers here and later are written in &lt;a href=&#34;https://en.wikipedia.org/wiki/Endianness#Big-endian&#34;&gt;big-endian&lt;/a&gt; byte order.&lt;/li&gt;
&lt;li&gt;The resulting byte stream is passed into &lt;a href=&#34;https://github.com/apache/spark/blob/branch-2.1/core/src/main/scala/org/apache/spark/rdd/RDD.scala#L1497&#34;&gt;saveAsObjectFile&lt;/a&gt;
on Scala/JVM side. The frame lengths are discarded so that the next step proceeds with the original data chunks.
JVM needs prepended lengths because it interoperates with Python workers via sockets and
needs to know the exact amount of data to read beforehand (&lt;a href=&#34;https://github.com/apache/spark/blob/branch-2.1/python/pyspark/worker.py#L167&#34;&gt;see the code&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Each bytes object received from Python is serialized again using &lt;a href=&#34;https://docs.oracle.com/javase/7/docs/platform/serialization/spec/protocol.html#10258&#34;&gt;Java standard serialization&lt;/a&gt;.
Thus we have serialization inside serialization! &lt;img src=&#34;/post/reading_pyspark_pickles_locally/deeper.jpg&#34; alt=&#34;deeper.jpg&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;saveAsObjectFile()&lt;/code&gt; writes &lt;a href=&#34;http://grepcode.com/file/repo1.maven.org/maven2/org.apache.hadoop/hadoop-common/2.7.1/org/apache/hadoop/io/SequenceFile.java#SequenceFile&#34;&gt;SequenceFile&lt;/a&gt;
with keys of type &lt;a href=&#34;https://www.safaribooksonline.com/library/view/hadoop-the-definitive/9781449328917/ch04.html#id3961179&#34;&gt;NullWritable&lt;/a&gt;
and values of type &lt;a href=&#34;https://www.safaribooksonline.com/library/view/hadoop-the-definitive/9781449328917/ch04.html#id3960971&#34;&gt;BytesWritable&lt;/a&gt;
(the result of the second serialization).&lt;/li&gt;
&lt;li&gt;The Hadoop disk backend (HDFS, S3, GCS, local file system, etc.) actually stores the result.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;sequencefile-pickle-format:70d834cd7a232165ca2fb2dcad051745&#34;&gt;SequenceFile+pickle format&lt;/h2&gt;

&lt;p&gt;Here is what it looks inside:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/reading_pyspark_pickles_locally/bin.png&#34; alt=&#34;bin&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The left column is the offsets for the rows. The actual pickle data always starts
from offset 158. The whole file is divided into &amp;ldquo;records&amp;rdquo;, each record has a header.
There can be &lt;em&gt;sync marks&lt;/em&gt; inserted between records, 16 byte each. The first sync mark goes after
the top level header which contains the class names for keys and values. All subsequent
sync marks are prepended with &lt;code&gt;0xffffffff&lt;/code&gt; (-1 reinterpreted as unsigned).&lt;/p&gt;

&lt;h2 id=&#34;sparkpickle:70d834cd7a232165ca2fb2dcad051745&#34;&gt;sparkpickle&lt;/h2&gt;

&lt;p&gt;So to read the format described above, we don&amp;rsquo;t really need any Spark or Java interop
in general. The only non-trivial block is the
&lt;a href=&#34;http://www.javaworld.com/article/2072752/the-java-serialization-algorithm-revealed.html&#34;&gt;Java standard serialization&lt;/a&gt;
for byte arrays. In theory, we could use fixed offsets and do not care about the serialization at all.
In practice, Java serialization may use variable length integer encoding, so it&amp;rsquo;s not always a good idea.
I decided to handle it properly so that I could catch possible corruption errors earlier, before unpickling.
While unpickling is robust, in some cases it may perform unexpected operations if started from the wrong offset.
There is a nice project named &lt;a href=&#34;https://github.com/tcalmant/python-javaobj&#34;&gt;javaobj&lt;/a&gt; which is
a pure Python implementation for Java standard serialization, it worked out of the box
and matched perfectly.&lt;/p&gt;

&lt;p&gt;The usage of the resulting package is very easy and feels the same as working
with &lt;code&gt;pickle&lt;/code&gt; package directly. E.g.,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;with open(&amp;quot;/path/to/sequence/file&amp;quot;, &amp;quot;rb&amp;quot;) as f:
    print(sparkpickle.load(f))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To quickly dump the contents of the file in terminal, execute&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python -m sparkpickle /path/to/sequence/file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The package was uploaded to the &lt;a href=&#34;https://wiki.python.org/moin/CheeseShop&#34;&gt;cheese shop&lt;/a&gt;,
so is easily installable via &lt;code&gt;pip install sparkpickle&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;summary:70d834cd7a232165ca2fb2dcad051745&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Saving Python objects in pickle format on Spark appeared to be not very efficient
because of the double serialization and several copies of the same data. Nevertheless,
it is pretty possible to read those files (fast) without having to install Spark thanks to
&lt;a href=&#34;https://github.com/src-d/sparkpickle&#34;&gt;sparkpickle&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adding LZO support to Dataproc</title>
      <link>/post/dataproc_lzo/</link>
      <pubDate>Fri, 21 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/dataproc_lzo/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Oberhumer&#34;&gt;LZO&lt;/a&gt; is a nice
general-purpose data compression algorithm which provides blazing fast decompression.
It is especially good because LZO archives can be indexed and become
&lt;a href=&#34;http://stackoverflow.com/questions/34208051/when-are-files-splittable&#34;&gt;splittable&lt;/a&gt;.
source{d} uses LZO to store the dataset of &lt;a href=&#34;http://blog.sourced.tech/post/github_topic_modeling/&#34;&gt;names occurring in the source code&lt;/a&gt;
in GitHub repositories, reducing the amount of data by a factor of 2.&lt;/p&gt;

&lt;p&gt;Spark does not support LZO codec out of the box because its implementation
is GPL licensed and conflicts with Apache. Google&amp;rsquo;s &lt;a href=&#34;https://cloud.google.com/dataproc/&#34;&gt;Dataproc&lt;/a&gt;,
being the managed Spark cluster cloud solution, &lt;span style=&#34;text-decoration: line-through;&#34;&gt;obviously neither supports LZO out of the box&lt;/span&gt;
see the update, finally it does. However, Twitter has developed
&lt;a href=&#34;https://github.com/twitter/hadoop-lzo&#34;&gt;hadoop-lzo&lt;/a&gt;, the pluggable LZO support
for the Hadoop and Spark ecosystems, and it can be very easily added to Dataproc thanks
to &lt;a href=&#34;https://cloud.google.com/dataproc/docs/concepts/init-actions&#34;&gt;custom initialization scripts&lt;/a&gt;.
Let me quickly describe how.&lt;/p&gt;

&lt;p&gt;The initialization script should contain the following actions for the master node:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Install CLI LZO archiver
apt-get install -y lzop

# Download hadoop-lzo jar from Twitter&#39;s Maven repository
wget http://maven.twttr.com/com/hadoop/gplcompression/hadoop-lzo/0.4.20/hadoop-lzo-0.4.20.jar -O /usr/lib/hadoop/lib/hadoop-lzo-0.4.20.jar

# Prepare core-site.xml for appending
sed -ie &#39;s/&amp;lt;\/configuration&amp;gt;//&#39; /etc/hadoop/conf/core-site.xml

# Register LZO codec; we have to enumerate all the standard ones as well
echo &amp;quot;  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;io.compression.codecs&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;org.apache.hadoop.io.compress.GzipCodec, org.apache.hadoop.io.compress.DefaultCodec, org.apache.hadoop.io.compress.BZip2Codec, com.hadoop.compression.lzo.LzoCodec, com.hadoop.compression.lzo.LzopCodec
    &amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;io.compression.codec.lzo.class&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;com.hadoop.compression.lzo.LzoCodec&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&amp;quot; &amp;gt;&amp;gt; /etc/hadoop/conf/core-site.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that&amp;rsquo;s it! Existing LZO files in Google Cloud Storage can be indexed with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hadoop jar /usr/lib/hadoop/lib/hadoop-lzo-0.4.20.jar com.hadoop.compression.lzo.LzoIndexer gs://bucket/subpath_or_file
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;update:db79af1260eeee14a5dfd542e85d35bf&#34;&gt;Update&lt;/h2&gt;

&lt;p&gt;Dataproc actually added the support for LZO on &lt;a href=&#34;https://cloud.google.com/dataproc/docs/release-notes/service#september_1_2016&#34;&gt;01.09.2016&lt;/a&gt;.
It ships hadoop-lzo 0.4.19 in /usr/lib/hadoop/lib/, but &lt;em&gt;there is still the need to edit the
configuration file&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Topic Modeling of GitHub Repositories</title>
      <link>/post/github_topic_modeling/</link>
      <pubDate>Mon, 26 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/github_topic_modeling/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Topic_model&#34;&gt;Topic modeling&lt;/a&gt; is the machine learning
subdomain which is devoted to extracting abstract &amp;ldquo;topics&amp;rdquo; from a collection of &amp;ldquo;documents&amp;rdquo;.
Each &amp;ldquo;document&amp;rdquo; is represented by a bag-of-words model, that is, a set of
occurring words and their frequencies. Since I am Russian, I had the introduction
to topic modeling through the awesome lectures by &lt;a href=&#34;http://www.machinelearning.ru/wiki/index.php?title=%D0%A3%D1%87%D0%B0%D1%81%D1%82%D0%BD%D0%B8%D0%BA:Vokov&#34;&gt;Dr. Vorontsov&lt;/a&gt;
at Yandex&amp;rsquo;s School for Data Analysis &lt;a href=&#34;http://www.machinelearning.ru/wiki/images/e/e6/Voron-ML-TopicModeling-slides.pdf&#34;&gt;PDF&lt;/a&gt;.
There exist different models to do topic modeling, the most famous (but not the best) being
&lt;a href=&#34;https://en.wikipedia.org/wiki/Latent_Dirichlet_allocation&#34;&gt;Latent Dirichlet Allocation&lt;/a&gt; (LDA).
Dr. Vorontsov managed to generalize all possible bag-of-words-based topic models
into &lt;a href=&#34;http://link.springer.com/article/10.1007/s10994-014-5476-6&#34;&gt;Additive Regularization of Topic Models methodology&lt;/a&gt; (ARTM).
Thus LDA becomes a subset of possible ARTMs. The really cool thing about ARTM is
that Dr. Vorontsov&amp;rsquo;s PHd students developed the proof-of-concept software and it
is open source: &lt;a href=&#34;https://github.com/bigartm/bigartm&#34;&gt;bigartm/bigartm&lt;/a&gt;
[&lt;a href=&#34;https://s3-eu-west-1.amazonaws.com/artm/Voron15aist.pdf&#34;&gt;1&lt;/a&gt;,
&lt;a href=&#34;https://s3-eu-west-1.amazonaws.com/artm/Voron15cikm-tm.pdf&#34;&gt;2&lt;/a&gt;].&lt;/p&gt;

&lt;p&gt;Normally, topic modeling is applied to ordinary text documents. We at source{d}
struggle with huge amount of data originated from GitHub repositories (and soon
  we&amp;rsquo;ll handle every open source repository in the world). A natural idea is
to treat every repository as a bag-of-words and apply Dr. Vorontsov&amp;rsquo;s powerful engine for
topic modeling. For example, we could extract names from the
source code and consider them &amp;ldquo;words&amp;rdquo;. This article elaborates in this direction,
presents the results and explains how to repeat them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;wordcloud.png&#34; alt=&#34;topic cloud&#34; /&gt;&lt;/p&gt;

&lt;p&gt;TL;DR:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run srcd/github_topics apache/spark
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(replace &lt;code&gt;apache/spark&lt;/code&gt; with any GitHub repository you wish to analyze).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://storage.googleapis.com/github-repositories-topic-modeling/topics.ods&#34;&gt;OpenDocument spreadsheet with the extracted topics&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://storage.googleapis.com/github-repositories-topic-modeling/topics.json&#34;&gt;JSON with the extracted topics&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://storage.googleapis.com/github-repositories-topic-modeling/repo_topic_modeling.pickle.gz&#34;&gt;Trained model&lt;/a&gt; - 40M, gzipped pickle for Python 3.4+, Pandas 1.18+.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://data.world/vmarkovtsev/github-source-code-names&#34;&gt;Dataset on data.world&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;theory:f03bd3adfac336b4fd4ddbd922c68e1a&#34;&gt;Theory&lt;/h2&gt;

&lt;p&gt;Suppose that we have a topic probabilistic model of the collection of documents
\(D\) which describes the occurrence of terms \(w\) in document \(d\) with topics \(t\):
$$
p(w|d) = \sum_{t\in T} p(w|t) p(t|d)
$$
Here \(p(w|t)\) is the probability of the term \(w\) to belong to the topic \(t\),
\(p(t|d)\) is the probability of the topic \(t\) to belong to the document \(d\),
thus the whole formula is just the expression of &lt;a href=&#34;https://en.wikipedia.org/wiki/Law_of_total_probability&#34;&gt;total probability&lt;/a&gt;,
accepting the hypothesis of conditional independence: \(p(w|d,t) = p(w|t)\).
Terms belong to the vocabulary \(W\), topics are taken from the set \(T\) which is simply the series of indices \([1, 2, \dots n_ t]\).&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;d like to solve the problem of recovering \(p(w|t)\) and \(p(t|d)\) from
the given set of documents \(\left\{d\in D: d = \left\{w_ 1 \dots w_ {n_ d}\right\}\right\}\).
We usually assume \(\hat{p}(w|d) = \frac{n_ {dw}}{n_ d}\), \(n_ {dw}\)
being the number of times term \(w\) occurred in document \(d\),
but this implies that all the terms are equally important which is not always true.
&amp;ldquo;Importance&amp;rdquo; here means some measure which negatively correlates with the overall frequency of the term.
Let us denote the recovered probabilities as \(\hat{p}(w|t) = \phi_ {wt}\) and \(\hat{p}(t|d) = \theta_ {td}\).
Thus our problem is the stochastic matrix decomposition which is not correctly stated:
$$
\frac{n_ {dw}}{n_ d} ≈ \Phi \cdot \Theta = (\Phi S)(S^{-1}\Theta) = \Phi&amp;rsquo; \cdot \Theta&amp;rsquo;
$$
It is said that &lt;a href=&#34;https://en.wikipedia.org/wiki/Regularization_(mathematics&#34;&gt;regularization&lt;/a&gt;
is desirable for stating machine learning problems; in our case,
this is &lt;em&gt;obligatory&lt;/em&gt;. In other words, if we don&amp;rsquo;t add any additional constraints,
we are going to end up bad.&lt;/p&gt;

&lt;p&gt;The problems like the one from above can be solved by applying
&lt;a href=&#34;https://en.wikipedia.org/wiki/Maximum_likelihood_estimation&#34;&gt;maximum likelihood estimation&lt;/a&gt;:
$$
\sum_ {d\in D}\sum_ {w\in d}n_ {dw}\ln \sum_ {t}\phi_ {wt} \theta_ {td} \to \max_{\Phi,\Theta}
$$&lt;/p&gt;

&lt;p&gt;with the conditions&lt;/p&gt;

&lt;p&gt;$$
\phi_ {wt} &amp;gt; 0; \sum_ {w\in W}\phi_{wt} = 1;
\theta_ {td} &amp;gt; 0; \sum_ {t\in T}\theta_ {td} = 1.
$$&lt;/p&gt;

&lt;p&gt;The idea of ARTM is to naturally introduce regularization as an extra additive member:
$$
\sum_ {d\in D}\sum_ {w\in d}n_ {dw}\ln \sum_ {t}\phi_ {wt} \theta_ {td} + R(\Phi,\Theta) \to \max_{\Phi,\Theta}
$$&lt;/p&gt;

&lt;p&gt;Since this is a simple summation, one can combine any specific regularizers in the same statement,
for example, increasing the sparsity and making topics uncorrelated. Well-known LDA
can also be formulated in ARTM terms:
$$
R(\Phi,\Theta)_ {Dirichlet} = \sum_ {t,w} (\beta_ w - 1)\ln \phi_ {wt} + \sum_ {d,t} (\alpha_ t - 1)\ln \theta_ {t,d}
$$&lt;/p&gt;

&lt;p&gt;The variables \(\Phi\) and \(\Theta\) can be effectively calculated with iterative
&lt;a href=&#34;https://en.wikipedia.org/wiki/Expectation%E2%80%93maximization_algorithm&#34;&gt;EM algorithm&lt;/a&gt;.
Tens of ready to use ARTM regularizers are here thanks to &lt;a href=&#34;https://github.com/bigartm/bigartm&#34;&gt;bigartm/bigartm&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;practice:f03bd3adfac336b4fd4ddbd922c68e1a&#34;&gt;Practice&lt;/h2&gt;

&lt;p&gt;So we&amp;rsquo;ve got 18M GitHub repositories. Let&amp;rsquo;s assume that each repository is \(d\),
and each name used in the source code belonging to that repository is \(w\).
Source code is analyzed pretty much the same as we do with deep source code learning
(see the related presentations from &lt;a href=&#34;https://www.re-work.co/&#34;&gt;RE·WORK&lt;/a&gt; conferences:
&lt;a href=&#34;https://goo.gl/4zq8g9&#34;&gt;Berlin&lt;/a&gt; and &lt;a href=&#34;https://goo.gl/wRQCLS&#34;&gt;London&lt;/a&gt;): classified with
&lt;a href=&#34;https://github.com/github/linguist&#34;&gt;github/linguist&lt;/a&gt; and parsed with &lt;a href=&#34;http://pygments.org/&#34;&gt;Pygments&lt;/a&gt;.
All general textual data is discarded, e.g. README.md.&lt;/p&gt;

&lt;p&gt;The names should be extracted with care, for example, &lt;code&gt;class FooBarBaz&lt;/code&gt; adds three words to the bag: &lt;code&gt;foo&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt; and &lt;code&gt;baz&lt;/code&gt;, or
&lt;code&gt;int wdSize&lt;/code&gt; should add two: &lt;code&gt;wdsize&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt;. Besides, names should be stemmed, though I didn&amp;rsquo;t research on
whether the results are better without stemming. The particular stemming algorithm used was
&lt;a href=&#34;http://snowballstem.org/&#34;&gt;Snowball&lt;/a&gt; from &lt;a href=&#34;http://www.nltk.org/&#34;&gt;NLTK&lt;/a&gt;. The last preprocessing step is to
apply the logarithmic flavor of &lt;a href=&#34;https://en.wikipedia.org/wiki/Tf%E2%80%93idf&#34;&gt;TF-IDF&lt;/a&gt; weighting
(again, not researched much on this, just did what&amp;rsquo;s
&lt;a href=&#34;https://www.quora.com/Why-is-the-performance-improved-by-using-TFIDF-instead-of-bag-of-words-in-LDA-clustering&#34;&gt;good&lt;/a&gt;
for generic NLP) and filter too rare and too widespread names, in our case, 50 and 100000 respectively.&lt;/p&gt;

&lt;p&gt;After getting the ARTM result, I had to manually label the topics according to the
key words and the related repositories. I set the number of topics to 200 but it turned out
that I should have set a greater number as the variance of topics on GitHub is really big.&lt;/p&gt;

&lt;p&gt;I did the initial preprocessing on &lt;a href=&#34;https://cloud.google.com/dataproc/&#34;&gt;Dataproc&lt;/a&gt; and the final steps
locally on a powerful workstation. The resulting sparse matrix size was around 20 GB and had to be
converted into simple text-based Vowpal Wabbit format so that BigARTM CLI program could work with it.
The dataset was crunched rather fast, in less than 2 hours on a single computer:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bigartm -c dataset_vowpal_wabbit.txt -t 200 -p 10 --threads 10 --write-model-readable bigartm.txt --regularizer &amp;quot;0.05 SparsePhi&amp;quot; &amp;quot;0.05 SparseTheta&amp;quot;
Parsing text collection... OK.  
Gathering dictionary from batches... OK.  
Initializing random model from dictionary... OK.  
Number of tokens in the model: 604989
================= Processing started.
Perplexity      = 586350
SparsityPhi     = 0.00214434
SparsityTheta   = 0.422496
================= Iteration 1 took 00:11:57.116
Perplexity      = 107901
SparsityPhi     = 0.00613982
SparsityTheta   = 0.552418
================= Iteration 2 took 00:12:03.001
Perplexity      = 60701.5
SparsityPhi     = 0.102947
SparsityTheta   = 0.768934
================= Iteration 3 took 00:11:55.172
Perplexity      = 20993.5
SparsityPhi     = 0.458439
SparsityTheta   = 0.902972
================= Iteration 4 took 00:11:56.804
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-p&lt;/code&gt; sets the number of iterations. I wasn&amp;rsquo;t clear enough about what regularizers I should use so I activated only &amp;ldquo;sparsity&amp;rdquo;.
I hope the project will improve the documentation and add examples about them. It is
important to notice that the amount of RAM needed for the operation was rather low,
no more than 30 gigs and this is a huge success on &lt;a href=&#34;https://radimrehurek.com/gensim/&#34;&gt;gensim&lt;/a&gt; and, oh god please no,
&lt;a href=&#34;http://scikit-learn.org/stable/&#34;&gt;sklearn&lt;/a&gt; background.&lt;/p&gt;

&lt;h2 id=&#34;topics:f03bd3adfac336b4fd4ddbd922c68e1a&#34;&gt;Topics&lt;/h2&gt;

&lt;p&gt;The resulting 200 topics can be divided into the following groups:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Concepts&lt;/strong&gt; - general, broad and abstract.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Human languages&lt;/strong&gt; - it appeared that one can determine
programmer&amp;rsquo;s approximate native language looking at his code, thanks to the stem bias.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Programming languages&lt;/strong&gt; - not so exciting since this is the information we already have.
Programming languages usually have a standard library of classes and functions which is
imported/included into most of the programs, and the corresponding names are revealed
by our topic modeling. Some topics are more narrow than a programming language.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;General IT&lt;/strong&gt; - the topics which could appear in Concepts if had an expressive list
of key words but do not. The repositories are associated by the unique set of names in the code
without any special meaning.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Communities&lt;/strong&gt; - devoted to some specific, potentially narrow technology or product.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Games&lt;/strong&gt; - video games.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bullshit&lt;/strong&gt; - 2 topics which I really don&amp;rsquo;t know what they mean.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;concepts:f03bd3adfac336b4fd4ddbd922c68e1a&#34;&gt;Concepts&lt;/h3&gt;

&lt;p&gt;The most interesting group in my opinion is Concepts, since we mined much useful information:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pizza contains cheese and there are GitHub repositories about it.&lt;/li&gt;
&lt;li&gt;Mathematics, linear algebra, cryptography, machine learning, digital signal processing, genomics, particle physics terminology.&lt;/li&gt;
&lt;li&gt;Weekdays. Monday, Tuesday and so on.&lt;/li&gt;
&lt;li&gt;All possible facts and characters in RPG and other fantasy games.&lt;/li&gt;
&lt;li&gt;IRC has nicknames.&lt;/li&gt;
&lt;li&gt;A lot of design patterns (thanks to Java and PHP for them).&lt;/li&gt;
&lt;li&gt;Colors. Including some exotic ones.&lt;/li&gt;
&lt;li&gt;Emails have CC, BCC and are sent through SMTP and received through POP/IMAP.&lt;/li&gt;
&lt;li&gt;How to make a good datetime picker. Seems to be a pretty common GitHub project, eh.&lt;/li&gt;
&lt;li&gt;People work for money and spend them on houses and driving (apparently, from houses to the work and back).&lt;/li&gt;
&lt;li&gt;All sorts of computer hardware.&lt;/li&gt;
&lt;li&gt;Exhaustive list of HTTP, SSL, Internet, Bluetooth and WiFi terms.&lt;/li&gt;
&lt;li&gt;Everything you want to know about memory management.&lt;/li&gt;
&lt;li&gt;What to google if you want to create a custom Android firmware.&lt;/li&gt;
&lt;li&gt;Barcodes. Plenty of different types.&lt;/li&gt;
&lt;li&gt;Humans. There are men and women, they live and they have sex.&lt;/li&gt;
&lt;li&gt;Good list of text editors.&lt;/li&gt;
&lt;li&gt;Weather. Tons of common words.&lt;/li&gt;
&lt;li&gt;Free licenses. This was not supposed to happen because source code names and licenses do not intersect. From my experience with Pygments, some languages are supported much worse than the others and I guess some of the texts were recognized as sequences of names.&lt;/li&gt;
&lt;li&gt;Commerce. Shops have discounts and sell goods to customers.&lt;/li&gt;
&lt;li&gt;Bitcoins and blockchain.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;human-languages:f03bd3adfac336b4fd4ddbd922c68e1a&#34;&gt;Human languages&lt;/h3&gt;

&lt;p&gt;Human languages contain Spanish, Portuguese, French and Chinese.&lt;/p&gt;

&lt;h3 id=&#34;programming-languages:f03bd3adfac336b4fd4ddbd922c68e1a&#34;&gt;Programming languages&lt;/h3&gt;

&lt;p&gt;An interesting find in Programming languages is the topic &amp;ldquo;Non-native English PHP&amp;rdquo;
which associates with PHP projects written by non-native English speakers (or not speakers at all).
Besides, now we know that Java has JNI and bytecode.&lt;/p&gt;

&lt;h3 id=&#34;general-it:f03bd3adfac336b4fd4ddbd922c68e1a&#34;&gt;General IT&lt;/h3&gt;

&lt;p&gt;General IT is not so fun. There are a lot of OS kernel repositories which
are large and make the topics noisy, but still we&amp;rsquo;ve got some worth mentioning:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Comprehensive information about drones. They use Linux.&lt;/li&gt;
&lt;li&gt;There are a lot of Ruby implementations. Some are hard forks (that is, not marked as fork by GitHub)
and some are extreme forks (that is, uploaded codebase without any history).&lt;/li&gt;
&lt;li&gt;onmouseup, onmousedown and onmousemove - these are the three giants holding the UI.&lt;/li&gt;
&lt;li&gt;Plenty of Javascript buzz words and technologies.&lt;/li&gt;
&lt;li&gt;Online education platforms. Especially &lt;a href=&#34;https://moodle.org/&#34;&gt;Moodle&lt;/a&gt;. Tons, tons of Moodle.&lt;/li&gt;
&lt;li&gt;All sorts of CMS.&lt;/li&gt;
&lt;li&gt;Coursera Machine Learning gives a great list of repositories with homeworks for
Coursera&amp;rsquo;s popular ML courses.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;communities:f03bd3adfac336b4fd4ddbd922c68e1a&#34;&gt;Communities&lt;/h3&gt;

&lt;p&gt;Communities is the largest group which is almost half of the size of the whole.
We&amp;rsquo;ve got all the web engines written in Python, Ruby, PHP, Java, Javascript, etc.
A lot of repositories are actually private storages of text editor configurations,
namely Vim and Emacs. Since there is only one topic for Vim and Emacs has two, I hope
that this will be the ultimate end in the holy war.&lt;/p&gt;

&lt;p&gt;PHP engines which were discovered are Wordpress, Joomla, Yii, VTiger, Drupal, Zend, Cake and Symphony with Doctrine.
Python: Django, Flask, Google AppEngine. Ruby: Rails and only Rails. Raaails. All Java web engines
collapsed into the single topic. And of course there is a topic belonging to Node.js.&lt;/p&gt;

&lt;p&gt;Many projects appeared to use &lt;a href=&#34;https://github.com/tesseract-ocr/tesseract&#34;&gt;Tesseract&lt;/a&gt;,
which is an open source OCR engine. Besides, many seem to use &lt;a href=&#34;https://github.com/BVLC/caffe&#34;&gt;Caffe&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Quake 3 / idTech 3 engine is so popular that formed a separate topic. Unity3D has
two, the one being the umbrella under numerous student homeworks and pet projects.
Cocos2D seems popular too and has 2 topics as well. Finally, I got 3 OpenGL topics + WebGL.
I guess that the difference is in the way API is used and in the satellite libraries.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s no surprise that &lt;a href=&#34;https://github.com/chef/chef&#34;&gt;Chef&lt;/a&gt; configuration management tool
appeared in the &amp;ldquo;cooking&amp;rdquo; topic with it&amp;rsquo;s recipes, kitchen, etc.
However, I was surprised to see the dual topic about WinAPI and Pokemons. I think this is
because stemming made the typical names from WinAPI look like Pokemon names&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;games:f03bd3adfac336b4fd4ddbd922c68e1a&#34;&gt;Games&lt;/h3&gt;

&lt;p&gt;There is a topic devoted to &lt;a href=&#34;http://www.libsdl.org/&#34;&gt;SDL&lt;/a&gt; and another to Minecraft and RPG.&lt;/p&gt;

&lt;h2 id=&#34;released-swagger:f03bd3adfac336b4fd4ddbd922c68e1a&#34;&gt;Released swagger&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve prepared the Docker image so that everybody can apply the trained topic model
to any GitHub repo. Just execute&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run srcd/github_topics apache/spark
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and see the top 5. There is the serialized matrix of topics and terms inside, you
can download it separately: &lt;a href=&#34;https://storage.googleapis.com/github-repositories-topic-modeling/repo_topic_modeling.pickle.gz&#34;&gt;link&lt;/a&gt;.
The format is &lt;a href=&#34;https://docs.python.org/3/library/pickle.html#pickle-protocols&#34;&gt;pickle version 4&lt;/a&gt;
with the tuple of length 2, first element is Pandas 1.8+ &lt;a href=&#34;http://pandas.pydata.org/pandas-docs/stable/sparse.html?highlight=sparsedataframe&#34;&gt;SparseDataFrame&lt;/a&gt;
object and the second is the IDF array. Besides, there is the
&lt;a href=&#34;https://storage.googleapis.com/github-repositories-topic-modeling/topics.ods&#34;&gt;OpenDocument spreadsheet with the topics&lt;/a&gt; and the
&lt;a href=&#34;https://storage.googleapis.com/github-repositories-topic-modeling/topics.json&#34;&gt;JSON file with the topics&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;conclusions:f03bd3adfac336b4fd4ddbd922c68e1a&#34;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;As already noted before, 200 topics are too few, since many appeared to be dual or not expressed well.
If I set the number to 500 or 1000, I would get better results, but never complete
the manual labelling. Understanding numerous PHP ecosystems is a challenge if you
are not in the topic (he-he). Nevertheless, we&amp;rsquo;ve still got something fun.
Most of the communities formed a separate topic because they were able to compose
the unique vocabulary for the related narratives. An exciting discovery is that
we could extract general topics about humans, nature, sciences and even design patterns.&lt;/p&gt;

&lt;p&gt;The next step would be to mine the readme files and other textual data contained in the repositories.
They are expected to enrich &amp;ldquo;Concepts&amp;rdquo; group.
&lt;script async src=&#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_CHTML&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>397 Languages, 18,000,000 GitHub repositories, 1.2 billion files, 20 terabytes of code: Spaces or Tabs</title>
      <link>/post/tab_vs_spaces/</link>
      <pubDate>Tue, 13 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/tab_vs_spaces/</guid>
      <description>

&lt;p&gt;Tabs or spaces. We are going to parse every file among all programming languages known by GitHub to decide which one is on top.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://content.blog.sourced.tech/tabs_spaces/index.html&#34;&gt;&lt;img src=&#34;/post/tab_vs_spaces/intro.png&#34; alt=&#34;image&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This was inspired by Felipe Hoffa&amp;rsquo;s analysis of 400k repositories and 14 programming languages (&lt;a href=&#34;https://medium.com/@hoffa/400-000-github-repositories-1-billion-files-14-terabytes-of-code-spaces-or-tabs-7cfe0b5dd7fd&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://content.blog.sourced.tech/tabs_spaces/index.html&#34;&gt;Interactive results presentation.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/src-d/tab-vs-spaces&#34;&gt;GitHub repository with the data.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-rules:9edd4be61dc387ef67022a23b3bf6f4c&#34;&gt;The rules&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Data source: GitHub files stored in source{d}&amp;rsquo;s own GitHub mirror as of July 2016.&lt;/li&gt;
&lt;li&gt;Stars don&amp;rsquo;t matter: we’ll consider every repository. Everybody votes disregarding elitism. It appears that the 80-20 principle holds for GitHub, so unpopular repos do not constitute a substantial bias after all.&lt;/li&gt;
&lt;li&gt;Every file is analyzed: there are a lot of small files in some languages; &amp;ldquo;hello, world&amp;rdquo; counts.&lt;/li&gt;
&lt;li&gt;No duplicates: forks are not taken into account. Hard forks (those not marked as a fork by GitHub but really are, the number is about 800k) are not counted as well. From one side, this does not guarantee uniqueness of each file in particular; from the other side, slightly different files from hard forks are excluded from the analysis. Since a typical GitHub hard fork is something like Linux kernel, it makes sense.&lt;/li&gt;
&lt;li&gt;One vote per line: we consider the sum of line votes. Some lines are indented with a mix of spaces with tabs. We’ll place such into the third category, &amp;ldquo;mixed&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;All languages: we’ll look into all files and determine the language using &lt;code&gt;simple-linguist&lt;/code&gt; which is
source{d}&amp;rsquo;s super fast reimplementation of &lt;a href=&#34;https://github.com/github/linguist&#34;&gt;github/linguist&lt;/a&gt; in Go.
It&amp;rsquo;s way more reliable than simply using file extensions. E.g. .cs files can be either C# or Smalltalk,
.h files belong to C, C++ and Obj-C.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;numbers:9edd4be61dc387ef67022a23b3bf6f4c&#34;&gt;Numbers&lt;/h2&gt;

&lt;p&gt;The raw numbers are stored in JSON on &lt;a href=&#34;https://github.com/src-d/tab-vs-spaces/blob/master/tabs_spaces.json&#34;&gt;GitHub&lt;/a&gt;.
The total number of languages processed is 397. The following table reflects the statistics for some randomly picked ones:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;language&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;bytes,GB&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;files,M&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;lines,M&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mixed,M&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;spaces,M&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;tabs,M&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;JavaScript&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2,341&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;253.62&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;58,906&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1,174&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;37,690&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7,595&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;XML&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2,479&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;56.93&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;41,546&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;158&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;35,423&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2,794&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;PHP&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1,069&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;163.01&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;31,515&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1,464&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15,795&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7,712&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;HTML&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1,309&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;81.07&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21,698&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;256&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7,122&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3,545&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;JSON&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1,125&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51.94&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14,421&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12,115&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;998&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;C&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;505&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;38.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14,118&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;331&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5,632&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2,279&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Java&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;352&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;72.36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10,285&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;390&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5,483&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2,251&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;C++&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;326&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;34.62&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9,440&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;89&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4,397&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1,553&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Python&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;241&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;34.23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6,140&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4,126&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;178&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;C#&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;137&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;29.71&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3,675&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2,248&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;665&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Ruby&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;98&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.49&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2,965&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2,141&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;77&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Go&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.87&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;642&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;434&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;style&gt;th { padding-left: 0.5em; padding-right: 0.5em; }&lt;/style&gt;

&lt;h2 id=&#34;how-to:9edd4be61dc387ef67022a23b3bf6f4c&#34;&gt;How-to&lt;/h2&gt;

&lt;p&gt;Well, I have to admit that this is not something that one can do in his or her garage.
I used 32-node &lt;a href=&#34;https://cloud.google.com/dataproc/&#34;&gt;Dataproc&lt;/a&gt; Spark cluster in n1-highmem-4 configuration
(that is, 4 cores and 26 GB RAM). Normally I use preemptible nodes which are 3 times cheaper though can be
restarted at any time. Not at this time: Spark stores the reduction&amp;rsquo;s intermediate results
in memory and I didn&amp;rsquo;t have time to mess with the persistence option. I guess I could use
preemptible nodes if I was a Spark guru after all.&lt;/p&gt;

&lt;p&gt;The job took about 2 days (left it running for the weekend). I had to find the best cluster parameters so
I recreated the cluster several times and this is where &lt;a href=&#34;https://github.com/src-d/jgscm&#34;&gt;source{d}&amp;rsquo;s Jupyter Cloud Storage backend&lt;/a&gt;
shined. Read more about how I use Dataproc with Jupyter in the &lt;a href=&#34;http://blog.sourced.tech/post/dataproc_jupyter/&#34;&gt;previous article&lt;/a&gt;.
Doing everything in the same Python environment from your web browser with unlimited computing resources?
That&amp;rsquo;s why I like Jupyter+Dataproc.&lt;/p&gt;

&lt;p&gt;Here is the most important source code part which does the line indentation analysis:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def extract_stats(name, session=requests):
    with tmpdir(name) as outdir:
        if not fetch_repo(name, outdir, session):
            return {}
        clusters = json.loads(subprocess.check_output([&amp;quot;slinguist&amp;quot;], cwd=outdir).decode(&amp;quot;utf-8&amp;quot;))
        result = {}
        for lang, files in clusters.items():
            if lang == &amp;quot;Other&amp;quot;:
                continue
            result[lang] = lr = {}
            tabs = spaces = mixed = srcbytes = srclines = 0
            for file in files:
                try:
                    with open(os.path.join(outdir, file), &amp;quot;rb&amp;quot;) as fobj:
                        for line in fobj:
                            srclines += 1
                            if not line:
                                continue
                            p = 1
                            c = line[0]
                            if c == ord(b&#39; &#39;):
                                spaces += 1
                                while p &amp;lt; len(line):
                                    c = line[p]
                                    if c == ord(b&#39;\t&#39;):
                                        mixed += 1
                                        spaces -= 1
                                        break
                                    elif c != ord(b&#39; &#39;):
                                        break
                                    p += 1
                            elif c == ord(b&#39;\t&#39;):
                                tabs += 1
                                while p &amp;lt; len(line):                                
                                    c = line[p]
                                    if c == ord(b&#39; &#39;):
                                        mixed += 1
                                        tabs -= 1
                                        break
                                    elif c != ord(b&#39;\t&#39;):
                                        break
                                    p += 1
                        srcbytes += fobj.tell()
                except:
                    continue
            lr.update({
                &amp;quot;spaces&amp;quot;: spaces,
                &amp;quot;tabs&amp;quot;: tabs,
                &amp;quot;mixed&amp;quot;: mixed,
                &amp;quot;bytes&amp;quot;: srcbytes,
                &amp;quot;lines&amp;quot;: srclines,
                &amp;quot;files&amp;quot;: len(files)
            })
        return result
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This approach feels better than counting single votes from files. E.g., read
&lt;a href=&#34;https://habrahabr.ru/post/308974/#comment_9784722&#34;&gt;here&lt;/a&gt; why (sorry, the discussion is in Russian).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d like to notice that the sum of lines indented with spaces, tabs and mix of them is
less than the overall number of lines since there are empty and unindented lines
as well.&lt;/p&gt;

&lt;p&gt;As for the &lt;a href=&#34;http://content.blog.sourced.tech/tabs_spaces/index.html&#34;&gt;interactive demo app&lt;/a&gt;,
I used good ol&amp;rsquo; &lt;a href=&#34;http://matplotlib.org/&#34;&gt;matplotlib&lt;/a&gt; to draw the initial SVG and the awesome
&lt;a href=&#34;https://d3js.org/&#34;&gt;d3.js&lt;/a&gt; for the rest. I applied &lt;a href=&#34;https://lvdmaaten.github.io/tsne/&#34;&gt;t-SNE&lt;/a&gt;
clustering to the language vectors so that similar ones appear near each other.
The radius of each pie chart is proportional to the square root
of the number of lines written in the corresponding language.
Special thanks goes to &lt;a href=&#34;https://github.com/mvader&#34;&gt;Miguel&lt;/a&gt; for turning my pathetic HTML into an eye-candy.&lt;/p&gt;

&lt;h2 id=&#34;which-one-is-on-top:9edd4be61dc387ef67022a23b3bf6f4c&#34;&gt;Which one is on top?&lt;/h2&gt;

&lt;p&gt;Spaces are used for indentation in the majority of the languages. The exclusions
in the lower-left cluster are: Go, ActionScript, PostScript, Assembly (GAS),
Makefile, Mathematica and JSP.&lt;/p&gt;

&lt;h2 id=&#34;more:9edd4be61dc387ef67022a23b3bf6f4c&#34;&gt;More?&lt;/h2&gt;

&lt;p&gt;Want more stories? How about writing them yourself? &lt;a href=&#34;mailto:talent@sourced.tech&#34;&gt;Join us.&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting up Google Cloud Dataproc with Jupyter and Python 3 stack</title>
      <link>/post/dataproc_jupyter/</link>
      <pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/dataproc_jupyter/</guid>
      <description>

&lt;p&gt;Modern big data world is hard to imagine without &lt;a href=&#34;http://hadoop.apache.org/&#34;&gt;Hadoop&lt;/a&gt;.
It made a small revolution in how analysts deal with large amount of emerging data
(before Hadoop, it used to be a torture). &lt;a href=&#34;https://spark.apache.org/&#34;&gt;Spark&lt;/a&gt; is
&amp;ldquo;Hadoop 2.0&amp;rdquo;, it much improves on the original MapReduce engine.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/dataproc/&#34;&gt;Google Cloud Dataproc&lt;/a&gt; is a nice solution
to work with managed Spark stack. Inside, it is a set of VMs one of which is master
node and the rest are workers. You can SSH to any VM in the cluster if you
want to fix/try/change something. There are two things which make Dataproc
different from the usual Compute Engine:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Each node runs a set of Google&amp;rsquo;s systemd services to manage Hadoop/Spark.&lt;/li&gt;
&lt;li&gt;Cloud Console shows nice UI where you can inspect or launch the jobs.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Data scientists which use Python as the primary language like Spark because it has
&lt;a href=&#34;https://spark.apache.org/docs/latest/programming-guide.html&#34;&gt;PySpark&lt;/a&gt;. PySpark
allows running Spark jobs written in Python using
&lt;a href=&#34;http://spark.apache.org/docs/latest/api/python/pyspark.html&#34;&gt;sensible API&lt;/a&gt;.
Technically, it is a Python package which talks to the Spark&amp;rsquo;s master node.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jupyter.org/&#34;&gt;Jupyter&lt;/a&gt; is a widely known language-agnostic project
which allows almost WYSIWUG coding in web browser or terminal. Traditional
scientists and engineers would say that it was inspired by
&lt;a href=&#34;http://www.mathworks.com/products/matlab/?requestedDomain=www.mathworks.com&#34;&gt;Matlab&lt;/a&gt;
and alike. While this is true, Matlab inspired the whole scientific Python stack,
notably &lt;a href=&#34;https://docs.scipy.org/doc/numpy-dev/user/numpy-for-matlab-users.html&#34;&gt;numpy&lt;/a&gt;
and &lt;a href=&#34;http://matplotlib.org/&#34;&gt;matplotlib&lt;/a&gt;. Jupyter is relatively young; it grew
from &lt;a href=&#34;https://ipython.org/&#34;&gt;IPython&lt;/a&gt; and originally was tied to Python language.
Actually, some people still mess Jupyter with IPython and the official website
has the special clarification about the statuses of those two projects.&lt;/p&gt;

&lt;p&gt;So a natural idea about how to use Dataproc for a pythonista is to
run Jupyter Notebook and work with Spark using PySpark. This longread
elaborates on how to deploy modern Jupyter over Python 3 to Dataproc and efficiently
use it. Particularly, we present &lt;a href=&#34;https://github.com/src-d/jgscm&#34;&gt;JGSCM&lt;/a&gt;, an adapter
between Jupyter virtual file system and Google Cloud Storage. And before you ask:
this is kind of trickier than in the
&lt;a href=&#34;https://cloud.google.com/dataproc/tutorials/jupyter-notebook&#34;&gt;official how-to&lt;/a&gt;
and not the same as &lt;a href=&#34;https://cloud.google.com/datalab&#34;&gt;Cloud Datalab&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;jupyter-python-3-dataproc-take-any-two:971cbc9cc6767562e5cebc6401bc5555&#34;&gt;Jupyter, Python 3, Dataproc: take any two&lt;/h2&gt;

&lt;p&gt;There is no need to introduce anybody to Python. The fun is to write about
the battle between Python 2 and Python 3. A long time ago (in 2008) there was
&lt;a href=&#34;https://www.python.org/download/releases/2.6/&#34;&gt;Python 2.6&lt;/a&gt;. In the same year,
core developers released the next, not backward-compatible version which they named
&lt;a href=&#34;https://www.python.org/download/releases/3.0/&#34;&gt;Python 3k&lt;/a&gt;. Basically, it threw
away some legacy constraints, unified API, did brilliant job with refactoring strings
(&lt;a href=&#34;http://lucumr.pocoo.org/2014/1/5/unicode-in-2-and-3/&#34;&gt;some argue&lt;/a&gt;) and did other
useful and cool things which would be impossible to do otherwise. Due to it&amp;rsquo;s
backward-incompatible nature, Python 3 could not be adopted fast, and the two
versions continued to exist and develop together. Finally, 2.x branch stopped
at 2.7 bugfixes (latest is &lt;a href=&#34;https://www.python.org/downloads/release/python-2712/&#34;&gt;2.7.12&lt;/a&gt;)
and 3.x branch won. Yet still many developers use 2.x for various reasons and
their number gradually decrease.&lt;/p&gt;

&lt;p&gt;Of course, starting a new project in Python 2.7 in 2016 is a mistake (if
you do not have special &lt;a href=&#34;https://caniusepython3.com/&#34;&gt;requirements&lt;/a&gt;). Yet still
we sometimes read modern articles about doing something in language which is 8
years old by it&amp;rsquo;s nature. One example is the &lt;a href=&#34;https://cloud.google.com/dataproc/tutorials/jupyter-notebook&#34;&gt;official Jupyter in Dataproc&lt;/a&gt;
how-to from Google. Since there is no better option, let&amp;rsquo;s use that as a baseline
and try to replace Python 2 with Python 3.&lt;/p&gt;

&lt;h2 id=&#34;creating-dataproc-cluster:971cbc9cc6767562e5cebc6401bc5555&#34;&gt;Creating Dataproc cluster&lt;/h2&gt;

&lt;p&gt;While it is possible to create Dataproc clusters through command line, web UI
feels more comfortable for a new user. You should go to Google Cloud Platform Console,
then enter Dataproc in Products &amp;amp; services (top-left ≡). There is a button to
create a new cluster on the top.&lt;/p&gt;

&lt;p&gt;The interesting part is specifying the custom cluster initialization script.
It is an ordinary Bash script which is run under root user on master and each of
the workers during cluster creation. To supply it, click &amp;ldquo;Preemptible workers,
bucket, network, version, initialization, &amp;amp; access options&amp;rdquo;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/dataproc_jupyter/dataproc1.png&#34; alt=&#34;Dataproc1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;and then enter the path to the initialization script in Google Cloud Storage
(yes, it must be uploaded to GCS, to web links):&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/dataproc_jupyter/dataproc2.png&#34; alt=&#34;Dataproc2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;d like to deploy Jupyter and Python 3 stack (numpy, sklearn, etc.) use
source{d}&amp;rsquo;s own script which is publicly available as gs://srcd-dataproc/jupyter.sh
(duplicated in GitHub &lt;a href=&#34;https://gist.github.com/vmarkovtsev/e56fe77562037460585d4de690040da8&#34;&gt;gist&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&#34;jupyter-sh:971cbc9cc6767562e5cebc6401bc5555&#34;&gt;jupyter.sh&lt;/h2&gt;

&lt;p&gt;The first thing we must figure out in the initialization script is who we are:
a master or a worker. This is done by calling&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/share/google/get_metadata_value attributes/dataproc-role
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;/usr/share/google/get_metadata_value&lt;/code&gt; is actually a shell script which executes&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl &amp;quot;http://metadata.google.internal/computeMetadata/v1/instance/attributes/dataproc-role&amp;quot; -H &amp;quot;Metadata-Flavor: Google&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The header is important; without it you&amp;rsquo;ll get 403 Forbidden.&lt;/p&gt;

&lt;p&gt;Dataproc currently runs on Debian 8.4, which is similar to Ubuntu 16.04 (well,
actually we should say the opposite). We have &lt;code&gt;apt-get&lt;/code&gt; to install system packages
and we have &lt;code&gt;systemd&lt;/code&gt; to manage system services.&lt;/p&gt;

&lt;h3 id=&#34;workers:971cbc9cc6767562e5cebc6401bc5555&#34;&gt;Workers&lt;/h3&gt;

&lt;p&gt;Setting up workers is easy: we install Python 3 and the related packages,
then upgrade pip to the latest version available and install &lt;a href=&#34;http://scikit-learn.org/stable/&#34;&gt;sklearn&lt;/a&gt;,
&lt;a href=&#34;http://pandas.pydata.org/&#34;&gt;pandas&lt;/a&gt; and friends. One can install them from system
packages, but they develop rapidly and the latest version is usually the greatest.
Additionally, we install &lt;a href=&#34;https://github.com/GoogleCloudPlatform/gcloud-python&#34;&gt;gcloud-python&lt;/a&gt; -
Google Cloud API high level (there also exists a low level) wrapper for Python.&lt;/p&gt;

&lt;p&gt;Either master or workers must be prepared for Python 3. We add needed environment
variables into various Spark configuration files:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;export PYSPARK_PYTHON=python3&amp;quot; | tee -a  /etc/profile.d/spark_config.sh  /etc/*bashrc /usr/lib/spark/conf/spark-env.sh
echo &amp;quot;export PYTHONHASHSEED=0&amp;quot; | tee -a /etc/profile.d/spark_config.sh /etc/*bashrc /usr/lib/spark/conf/spark-env.sh
echo &amp;quot;spark.executorEnv.PYTHONHASHSEED=0&amp;quot; &amp;gt;&amp;gt; /etc/spark/conf/spark-defaults.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Those mostly do with Python 3&amp;rsquo;s &lt;a href=&#34;https://docs.python.org/3.3/using/cmdline.html#cmdoption-R&#34;&gt;hash randomization&lt;/a&gt;,
which is good for security but bad for computation repeatability and stability.&lt;/p&gt;

&lt;h3 id=&#34;master:971cbc9cc6767562e5cebc6401bc5555&#34;&gt;Master&lt;/h3&gt;

&lt;p&gt;Master node requires quite a few extra steps. First, we must configure Spark
to use &lt;code&gt;python3&lt;/code&gt; instead of the default &lt;code&gt;python&lt;/code&gt; executable which is 2.7.
There exists a GitHub &lt;a href=&#34;https://gist.github.com/cerisier/118c06d1a0147d1fb898218b57ba82a3/&#34;&gt;gist&lt;/a&gt;
which does all the work for us. Looks like it closes the discussion at
&lt;a href=&#34;https://github.com/GoogleCloudPlatform/dataproc-initialization-actions/issues/25&#34;&gt;GoogleCloudPlatform/dataproc-initialization-actions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next, we install the latest IPython and Jupyter with pip. Those two evolve pretty
fast. IPython 5 for example adds autocompletion with dropdown lists to command
line Python sessions as well as dynamic coloring:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/dataproc_jupyter/ipython.png&#34; alt=&#34;IPython&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Technically, Jupyter is an umbrella package which depends on &lt;code&gt;notebook&lt;/code&gt; and many
others. Some common packages are shared between IPython and Jupyter. It uses
&lt;a href=&#34;https://github.com/tornadoweb/tornado&#34;&gt;Tornado&lt;/a&gt; as the web server engine.&lt;/p&gt;

&lt;p&gt;Next, we create an additional IPython profile codename &amp;ldquo;pyspark&amp;rdquo; with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ipython profile create pyspark
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;IPython has &amp;ldquo;profiles&amp;rdquo; which are sets of various session settings. One can execute
arbitrary Python code on notebook startup, for example. The latter is exactly our
case: we need to initialize PySpark&amp;rsquo;s context. Thus we create the file
&lt;code&gt;~/.ipython/profile_pyspark/startup/00-pyspark-setup.py&lt;/code&gt; with the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os
import sys

spark_home = &amp;quot;/usr/lib/spark/&amp;quot;
os.environ[&amp;quot;SPARK_HOME&amp;quot;] = spark_home
os.environ[&amp;quot;PYSPARK_PYTHON&amp;quot;] = &amp;quot;python3&amp;quot;
sys.path.insert(0, os.path.join(spark_home, &amp;quot;python&amp;quot;))
with open(os.path.join(spark_home, &amp;quot;python/pyspark/shell.py&amp;quot;)) as src:
    exec(src.read())
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is similar to what &lt;code&gt;source&lt;/code&gt; does in Bash: we read Python code from
Spark distribution and execute it inplace. The file contents from above
are inserted using &lt;a href=&#34;https://en.wikipedia.org/wiki/Here_document&#34;&gt;heredoc&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then we must link the created IPython profile to new Jupyter kernel type.
Jupyter kernel is an instance of notebook which is running. Notebooks may
be in different languages, environments, etc. When you launch a new kernel,
you choose the desired kernel type from the list:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/dataproc_jupyter/new_kernel.png&#34; alt=&#34;new kernel&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The list can be printed in terminal using &lt;code&gt;jupyter nbextension list&lt;/code&gt;.
Kernel types are registered with JSON files in special kernelspec format.
We create &lt;code&gt;/usr/local/share/jupyter/kernels/pyspark/kernel.json&lt;/code&gt; with&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
 &amp;quot;display_name&amp;quot;: &amp;quot;PySpark 3&amp;quot;,
 &amp;quot;language&amp;quot;: &amp;quot;python3&amp;quot;,
 &amp;quot;env&amp;quot;: {&amp;quot;PYTHONHASHSEED&amp;quot;: &amp;quot;0&amp;quot;},
 &amp;quot;argv&amp;quot;: [
  &amp;quot;/usr/bin/python3&amp;quot;,
  &amp;quot;-m&amp;quot;,
  &amp;quot;IPython.kernel&amp;quot;,
  &amp;quot;--profile=pyspark&amp;quot;,
  &amp;quot;-f&amp;quot;,
  &amp;quot;{connection_file}&amp;quot;
 ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;IPython profile is changed from &amp;ldquo;default&amp;rdquo; to &amp;ldquo;pyspark&amp;rdquo; for that kernel type.
PYTHONHASHSEED is set to 0 to disable &lt;a href=&#34;https://docs.python.org/3.3/using/cmdline.html#cmdoption-R&#34;&gt;hash randomization&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The last step we seem to miss is running Jupyter as a system service. We create
&lt;a href=&#34;https://www.freedesktop.org/software/systemd/man/systemd.service.html&#34;&gt;systemd&lt;/a&gt;
service file at &lt;code&gt;/lib/systemd/system&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[Unit]
Description=Jupyter Notebook
After=hadoop-yarn-resourcemanager.service

[Service]
Type=simple
User=root
Group=root
WorkingDirectory=/root
StandardOutput=/var/log/jupyter.log
StandardError=/var/log/jupyter.log
ExecStart=/usr/bin/python3 /usr/local/bin/jupyter notebook --no-browser --ip=* --port=8123
Restart=always
RestartSec=1

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We launch Jupyter after YARN service starts (Hadoop resource manager) so that
there will be no boot race conditions. Logs are written to &lt;code&gt;/var/log/jupyter.log&lt;/code&gt;.
If Jupyter process dies, it will be automatically restarted in 1 second (the
number of restart attempts is constrained). Jupyter listens on all network
interfaces on port 8123. You can change it 80 for convenience so that you will
not have to specify port number in web browser.&lt;/p&gt;

&lt;p&gt;Finally, we add Jupyter service to autorun and start it&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;systemctl daemon-reload
systemctl enable jupyter
service jupyter start
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;accessing-jupyter-at-dataproc:971cbc9cc6767562e5cebc6401bc5555&#34;&gt;Accessing Jupyter at Dataproc&lt;/h2&gt;

&lt;p&gt;Now we are going to open Jupyter in our web browser to see it in action.
The problem is, Dataproc is not exposed to the outer Internet (and shouldn&amp;rsquo;t)
so we are unable to access our master node at port 8123. The solution is to
open SSH session with &lt;a href=&#34;https://en.wikipedia.org/wiki/SOCKS&#34;&gt;SOCKS proxy&lt;/a&gt; port
forwarding using &lt;a href=&#34;https://cloud.google.com/sdk/&#34;&gt;Google Cloud SDK&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gcloud init
gcloud compute ssh --ssh-flag=&amp;quot;-D&amp;quot; --ssh-flag=&amp;quot;10000&amp;quot; &amp;quot;&amp;lt;your Dataproc cluster name&amp;gt;-m&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Option -D activates proxy mode in &lt;a href=&#34;http://www.openssh.com/&#34;&gt;OpenSSH&lt;/a&gt; which is likely
your SSH client. 10000 sets the proxy port. &amp;ldquo;-m&amp;rdquo; suffix to host name is necessary
because master node host name is formed from the whole cluster name by adding &amp;ldquo;-m&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;To open the Jupyter UI through the proxy in a Chromium-based browser, execute&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chromium-browser &amp;quot;http://&amp;lt;your Dataproc cluster name&amp;gt;-m:8123&amp;quot; --proxy-server=&amp;quot;socks5://localhost:10000&amp;quot; --host-resolver-rules=&amp;quot;MAP * 0.0.0.0 , EXCLUDE localhost&amp;quot; --user-data-dir=/tmp/ --incognito
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(replace chromium-browser with chrome, etc.)
If you are using Firefox you can set the proxy address and profile in any of
it&amp;rsquo;s proxy management extensions, e.g. &lt;a href=&#34;https://getfoxyproxy.org/&#34;&gt;FoxyProxy&lt;/a&gt;.
When the author of this article tried to setup Chromium with any proxy
management extension, he hit several issues. The first is that Chromium
prefetches DNS lookups off the proxy so one has to disable this optimization&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/dataproc_jupyter/chromium.png&#34; alt=&#34;chromium&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The second is &lt;a href=&#34;https://github.com/jupyter/notebook/issues/297&#34;&gt;the problem with uBlock&lt;/a&gt;.
Disabling uBlock selectively on &amp;lt;your Dataproc cluster name&amp;gt;-m does not help,
you have to disable it completely. Thus in the snippet above we launch the browser
in incognito mode so that extensions are ignored by default. Similar extensions
like AdBlock work fine.&lt;/p&gt;

&lt;p&gt;The third is that the proxy management extension&amp;rsquo;s auto-switch rule must include
either http or ws (&lt;a href=&#34;https://en.wikipedia.org/wiki/WebSocket&#34;&gt;WebSocket&lt;/a&gt;) templates.
The resulting rule was &lt;code&gt;(http|ws)://&amp;lt;your Dataproc cluster name&amp;gt;-m.*&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If these problems are fixed, Jupyter can be used in the normal Chromium/Chrome
session, without the need to run a separate window.&lt;/p&gt;

&lt;h2 id=&#34;persistent-notebooks:971cbc9cc6767562e5cebc6401bc5555&#34;&gt;Persistent notebooks&lt;/h2&gt;

&lt;p&gt;This is where the aforementioned how-to stops. Unfortunately, it forgets to mention
one very critical thing. Jupyter stores notebooks in the master node&amp;rsquo;s file system.
Master&amp;rsquo;s disk is not persistent in the way that if it&amp;rsquo;s VM is reset or shut down,
the file systems loses all the changes. This means that your notebooks will be
lost as soon as you reset or shutdown the master node. The author of this article
realized it very quickly, having left some kernel getting the listing from a
GCS bucket with 10M files for several hours and then having tried to return back
after the connection teardown. Either because of the lack of free memory (listing
takes about 1GB and master had 16GB so this seems unlikely) or something else,
master node stopped responding over SSH and hanged, so it had to be reset.&lt;/p&gt;

&lt;p&gt;A natural way to make Jupyter notebooks persistent is to store them in GCS together
with the data. As a bonus, they become very easy to share. Unfortunately,
no ready to use solutions exist. Datalab puts focus on visuals and &lt;a href=&#34;https://cloud.google.com/datalab/docs/how-to/manage-notebooks&#34;&gt;leaves
notebooks in the local file system&lt;/a&gt;.
There exists a &lt;a href=&#34;https://github.com/jupyter/jupyter-drive&#34;&gt;project&lt;/a&gt;
which keeps notebooks in Google Drive but it&amp;rsquo;s not quite what we want. With
a brave spirit, source{d} started to work on GCS adapter for Jupyter on our own.&lt;/p&gt;

&lt;p&gt;It appeared much easier than expected at first. Modern versions of Jupyter
provide a neat way to write backends for the virtual file system. One has
to derive from &lt;a href=&#34;http://jupyter-notebook.readthedocs.io/en/latest/extending/contents.html&#34;&gt;ContentsManager&lt;/a&gt;,
implement it&amp;rsquo;s abstract methods, and derive from Checkpoints with
GenericCheckpointsMixin and implement their abstract methods. Besides, we had to
write our own test suite because tests for ContentsManager implicitly
expect FileContentsManager. The result is &lt;a href=&#34;https://github.com/src-d/jgscm&#34;&gt;src-d/jgscm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/dataproc_jupyter/jupyter.png&#34; alt=&#34;jupyter&#34; /&gt;&lt;/p&gt;

&lt;p&gt;JGSCM is already included in &lt;code&gt;jupyter.sh&lt;/code&gt; The tricky part is to fake the timestamp
at &lt;code&gt;~/.jupyter/migrated&lt;/code&gt; before Jupyter&amp;rsquo;s first run so that it does not completely
remove the configuration directory.&lt;/p&gt;

&lt;h2 id=&#34;google-cloud-storage-challenges:971cbc9cc6767562e5cebc6401bc5555&#34;&gt;Google Cloud Storage Challenges&lt;/h2&gt;

&lt;p&gt;From one side, GCS is superior to HDFS, e.g. it allows &amp;ldquo;any&amp;rdquo; number of files
in the same bucket in contrast to &lt;a href=&#34;http://stackoverflow.com/a/34516904/69708&#34;&gt;6.4M in HDFS&lt;/a&gt;.
We&amp;rsquo;ve tested it with 10M so far. Of course, this constraint is easily bypassed
by making a prefix tree file structure, but not having to do it is pretty convenient.
Another goody is automatic MIME type reporting.&lt;/p&gt;

&lt;p&gt;From the other side, there are only files (&amp;ldquo;blobs&amp;rdquo;), no directories. If the name
of the blob contains slashes &amp;ldquo;/&amp;rdquo;, each segment is treated as a directory
in Storage Browser. If the name ends with a slash, the blob considered to be
an empty directory, but it&amp;rsquo;s not really. To prove it, you may create a blob
with trailing slash and then upload some data to it. You&amp;rsquo;ll succeed and you&amp;rsquo;ll
fail to download this data in Storage Browser because it displays such blobs
as directories!&lt;/p&gt;

&lt;p&gt;As with HDFS, you cannot easily mount GCS bucket.
&lt;a href=&#34;https://cloud.google.com/storage/docs/gcs-fuse&#34;&gt;gcsfuse&lt;/a&gt; works (exotically) but
not backed up officially.&lt;/p&gt;

&lt;h2 id=&#34;summary:971cbc9cc6767562e5cebc6401bc5555&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Jupyter, Python 3 and Dataproc can rock together. We created the &lt;a href=&#34;https://gist.github.com/vmarkovtsev/e56fe77562037460585d4de690040da8&#34;&gt;custom
initialization script&lt;/a&gt;
and improved the integration with Google Cloud with our &lt;a href=&#34;https://github.com/src-d/jgscm&#34;&gt;JGSCM&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Towards Yinyang K-means on GPU</title>
      <link>/post/towards_kmeans_on_gpu/</link>
      <pubDate>Tue, 26 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/towards_kmeans_on_gpu/</guid>
      <description>

&lt;p&gt;The codez: &lt;a href=&#34;https://github.com/src-d/kmcuda&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.sourced.tech/post/kmcuda4/&#34;&gt;Next article about kmcuda v4.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We developed an efficient K-means implementation using &lt;a href=&#34;...&#34;&gt;NVIDIA CUDA&lt;/a&gt;
technology and this article is devoted to the internals of that project.
The motivation is simple: we need to cluster a big number of entities
in high-dimensional space into many clusters as an attempt to simplify
the data and prepare it for other, more sophisticaed clustering algorithms
such as &lt;a href=&#34;https://lvdmaaten.github.io/tsne/&#34;&gt;t-SNE&lt;/a&gt;. We named this project kmcuda,
it offers C and Python3 APIs. kmcuda was successfully applied to problems
with 4M samples, 40k clusters and 480 dimensions.&lt;/p&gt;

&lt;h2 id=&#34;theory:79f652027d607e9f286dd0153c47d871&#34;&gt;Theory&lt;/h2&gt;

&lt;p&gt;Machine learning includes different subfields, one of which is called unsupervised
learning. This subject focuses on organizing the data without any
hints from the outside, e.g. labels. It takes some common criteria of
what is a good data organization based on mathematical assumptions.
Usually, data is organized into finite amount of clusters, that is, groups.
So a clustering algorithm takes data and quality metrics on input and
produces the mapping between each data sample and the corresponding suggested
cluster identifier.&lt;/p&gt;

&lt;p&gt;There are quite a few clustering concepts out there, see &lt;a href=&#34;http://scikit-learn.org/stable/modules/clustering.html&#34;&gt;sklearn&lt;/a&gt;
for example. Perhaps the most simple and thus widespread concept
is &lt;a href=&#34;https://en.wikipedia.org/wiki/K-means_clustering&#34;&gt;K-means&lt;/a&gt;. The idea is as
follows: we fix the desired number of clusters and search for the best
centroids (cluster centers). &amp;ldquo;Best&amp;rdquo; means that the sum of the distances
from each cluster member to the corresponding centroid is minimal. There
exists an easy to implement algorithm named by it&amp;rsquo;s inventor,
Lloyd, which is guaranteed to converge in L2 metric - when
the distance is calculated as the square root of the sum of squared differences
between each dimension coordinate, in other words, Euclidian. Lloyd&amp;rsquo;s approach is often
confused with K-means problem statement itself, but really it is just one
of the ways to solve it, the first historically appeared.&lt;/p&gt;

&lt;p&gt;Lloyd algorithm is iterative and is made of the repetition of these two
steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Assign each data sample to the cluster to which the distance in minimal among others.&lt;/li&gt;
&lt;li&gt;Calculate each cluster&amp;rsquo;s centroid by averaging all the samples assigned to it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Though as was written before this algorithm is guaranteed to finish,
usually we set the tolerance value as the maximum ratio of reassignments
upon reaching which we can early stop. The ratio of reassignments is the
number of samples which changed the owning cluster on step 1 divided by
the overall number of samples. The tolerance is introduced because a
typical dependency of reassignments ratio from passed iterations number looks
like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/towards_kmeans_on_gpu/kmeans.png&#34; alt=&#34;kmeans iterations&#34; /&gt;&lt;/p&gt;

&lt;p&gt;It would take a looong time to wait until the algorithm converges to 0
and such flawless clustering is usually not needed in real life. The
tolerance should be set according to the amount of noise in the data,
though no specific formula exist.&lt;/p&gt;

&lt;p&gt;Another important consideration of Lloyd&amp;rsquo;s algorithm is the choice of
initial centroids. Indeed, we have to know the proto-clusters at the very
beginning on step 1 in order to assign samples. A naive way to solve this
problem is to randomly choose samples to be centroids, but it does not
work well in practice. For example, imagine that we have to put 100 points into 2 groups,
99 are near (0, 0) and the last one is (1, 1). The K-means solution is,
of course, clusters with centers (0, 0) and (1, 1), but Lloyd&amp;rsquo;s algorithm
will never converge to it if we choose initial centroids in the cloud
of points near (0, 0). The probability of randomly choosing the point (1, 1)
as the initial cluster center is &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;100&lt;/sub&gt; + &lt;sup&gt;99&lt;/sup&gt;&amp;frasl;&lt;sub&gt;100&lt;/sub&gt; * &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;99&lt;/sub&gt; ~ &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;50&lt;/sub&gt;, a pretty low
chance.&lt;/p&gt;

&lt;p&gt;An other way to pick initial centroids is &lt;a href=&#34;https://en.wikipedia.org/wiki/K-means%2B%2B&#34;&gt;K-means++&lt;/a&gt;.
The idea is to still randomly choose samples, but with the probability which is not uniform:
it is proportional to the distance from each sample to the nearest centroid.
Thus, in our previous case, the probability of picking (1, 1) becomes
&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;100&lt;/sub&gt; + &lt;sup&gt;99&lt;/sup&gt;&amp;frasl;&lt;sub&gt;100&lt;/sub&gt; * √&lt;span style=&#34;text-decoration: overline;&#34;&gt;2&lt;/span&gt; / (√&lt;span style=&#34;text-decoration: overline;&#34;&gt;2&lt;/span&gt; + N*ε), where ε is
the average distance from the other 99 points to (0, 0). We see that
if ε is very small, the second summand becomes close to 1 and
we almost always get the right initial centroids. From the theoretical side,
K-means++ refinement is proven to make Lloyd&amp;rsquo;s process to reach the solution
not worse than O(log k).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/towards_kmeans_on_gpu/pp.png&#34; alt=&#34;kmeans++&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The problem with Lloyd&amp;rsquo;s algorithm, however, is that when the reassignments
ratio drops, we start to do a lot of redundant work recalculating distances
corresponding to samples which are not going to change the cluster.
Since step 1 is much more time consuming than step 2, it becomes critical.&lt;/p&gt;

&lt;p&gt;Several solutions have been proposed, and &lt;a href=&#34;https://www.microsoft.com/en-us/research/publication/yinyang-k-means-a-drop-in-replacement-of-the-classic-k-means-with-consistent-speedup/&#34;&gt;Yinyang&lt;/a&gt;
algorithm is one of them. It was developed at Microsoft Research. The authors compared
it to the other algorithms and observed a substantial performance boost.
There are several ideas incorporated into Yinyang; basically, we
introduce metaclusters and track centroid drifts in each. An exciting
property of Yinyang is that it yields exactly the same results that
would be achieved by ordinary Lloyd. The price of the shown performance
increase is the memory overhead. The overhead size vs. performance is a
tradeoff, and in real world scenarios if you allow too little extra memory,
Yinyang becomes slower than Lloyd.&lt;/p&gt;

&lt;h2 id=&#34;practice:79f652027d607e9f286dd0153c47d871&#34;&gt;Practice&lt;/h2&gt;

&lt;p&gt;NVIDIA CUDA is an architecture sometimes called SIMT: it involves
a huge number of concurrently executing hardware threads (say, 3000),
but with the important constraint: each group of threads (say, 32) must
execute the same instruction at the same time. In other words, it&amp;rsquo;s
like running multiple threads each executing SIMD operations. Of course,
this is a simplification but it should give the general idea.&lt;/p&gt;

&lt;p&gt;The power exposed by GPU hardware is impressive: the performance is 10
times higher compared to CPU and the memory bandwidth is 5 times thicker.
These are the graphs taken from &lt;a href=&#34;http://docs.nvidia.com/cuda/cuda-c-programming-guide&#34;&gt;CUDA C Programming Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/towards_kmeans_on_gpu/flops.png&#34; alt=&#34;flops&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/towards_kmeans_on_gpu/mem.png&#34; alt=&#34;memory&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A typical engineering problem is to be able to cleverly ride that beast
and allow it to show it&amp;rsquo;s incredible glory. SIMT is not suited for many
algorithms out there, so if you apply them in a brute-force manner,
you will get a slowdown compared to a CPU, not a speedup. One would notice
that 10x boost in memory speed is not proportional to 100x boost in the
number of threads, so you are likely to end up with a performance bottleneck
in the memory access.&lt;/p&gt;

&lt;p&gt;So, let&amp;rsquo;s concern Lloyd&amp;rsquo;s algorithm first. It maps to CUDA pretty well:
each thread maps to a data sample and calculates the distances to each
of the centroids. Since step 2 is not so time consuming, we omit it&amp;rsquo;s
description for now.&lt;/p&gt;

&lt;p&gt;Here is the pseudocode:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sample = thread_logical_index()
min_distance = FLT_MAX
owner = None
for cluster in clusters:
  distance = calculate_distance(sample, cluster)
  if distance &amp;lt; min_distance:
    min_distance = distance
    owner = cluster
assign(sample, owner)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s define the benchmark which we will use to evaluate the performance.
We take 300000 points in 408 dimensions and try to group them into
5000 clusters with 1% tolerance. We set the initialization method
to naive random and fix the pseudorandom generator&amp;rsquo;s seed.
Given Titan X card, the implementation described above finishes in about
48 minutes. State-of-the-art CPU implementation &amp;ldquo;tyrand lizard king&amp;rdquo;
(see the comparison &lt;a href=&#34;#comparison&#34;&gt;below&lt;/a&gt;) finishes in 31 minutes.&lt;/p&gt;

&lt;p&gt;We can do better. The key to boosting CUDA performance is, of course,
leveraging the software memory cache called &amp;ldquo;shared memory&amp;rdquo;. Every block
of CUDA threads (can be adjusted, from 32 to 1024 by step 32) may have
up to 48 KiB of shared memory, which is accessible by every thread in that
block (but not the others). The speed of that cache is huge, by several orders
faster than accessing the ordinary GPU memory (called &amp;ldquo;global memory&amp;rdquo;).
Let&amp;rsquo;s think of how we can use shared memory here. One consideration that
we must take into account is that we don&amp;rsquo;t want to impose any severe
constraints on the number of clusters or the number of dimensions, like
others do in prior works. Turns out that the only way is to load several
clusters into the shared memory, calculate the distances to them and
synchronize threads.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sample = thread_logical_index()
min_distance = FLT_MAX
owner = None
for cluster_offset in range(0, clusters_number, chunk_size):
  clusters_buffer = load_clusters(cluster_offset, chunk_size)
  for cluster in clusters_buffer:
    distance = calculate_distance(sample, cluster)
    if distance &amp;lt; min_distance:
      min_distance = distance
      owner = cluster
assign(sample, owner)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This optimization works really good, dropping the run time to 20 minutes.&lt;/p&gt;

&lt;p&gt;We still can do better. Every person who tried hard to optimize a native
function knows about the standard technique called loop unrolling.
Loop unrolling increases the compiled code size but avoids branching
which badly influences the performance because of the pipeline stall.
We are not going to go deep with the details since it
requires understanding the superscalar CPU architecture, so anyway, this is
what happens:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# before
for i in range(0, 100500):
  do_work(i)

# after
for i in range(0, 100500, 4):
  do_work(i)
  do_work(i + 1)
  do_work(i + 2)
  do_work(i + 3)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thus we streamline the control flow and reduce the number of comparisons,
given that the loop is long enough.&lt;/p&gt;

&lt;p&gt;The optimization from above is very easy to apply in CUDA code: we just have to
write &lt;code&gt;#pragma unroll(xxx)&lt;/code&gt; above the cycle and the magic happens during the
compilation. It is cool because we don&amp;rsquo;t have to write the ugly code ourselves!
The tricky part is to pick up the best &amp;ldquo;xxx&amp;rdquo;. Too small values do not impact that much
and too big values increase &lt;a href=&#34;https://en.wikipedia.org/wiki/Instruction_set#REGISTER-PRESSURE&#34;&gt;register pressure&lt;/a&gt;.
In our case, 4 appeared to be optimal. Now the run time drops to 17 minutes.&lt;/p&gt;

&lt;p&gt;We can do better! The thing is that there are different memory access patterns
supported by NVIDIA GPU. If we optimize the memory access for readonly,
constant and sequential transactions, we can gain in speed, because in our case
much depends on the memory. There is a way to do it: we must declare
each hardware pointer as &lt;code&gt;const __restrict__&lt;/code&gt;. This will allow the compiler
to do more aggressive optimizations since we guarantee no [pointer coalescing]
and actually sets memory transactions to go through the constant access channel,
which is normally used by GPU textures. And now we finish in 13 minutes.&lt;/p&gt;

&lt;p&gt;We can do better! Though the following should be logically done before loop unrolling,
historically it was done later. The idea is to decompose the L2 distance
calculation: ∥a - b∥&lt;sub&gt;2&lt;/sub&gt; = √&lt;span style=&#34;text-decoration: overline;&#34;&gt;a&lt;/span&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;span style=&#34;text-decoration: overline;&#34;&gt; + b&lt;/span&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;span style=&#34;text-decoration: overline;&#34;&gt; - 2ab&lt;/span&gt;.
We can calculate the scalar product between sample and itself and between
centroid and itself beforehand, thus leaving only one operation in the loop
instead of two.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;ssqr = dot(sample, sample)
for centroid in centroids:
    csqr = dot(centroid, centroid)  # done only once during shared loading
    dist = 0
    for f in range(number_of_dimensions):
        dist += sample[i] * centroid[i]
    dist = sqrt(ssqr + csqr - 2 * dist)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What&amp;rsquo;s good is that multiplication and addition is compiled to a single
&lt;a href=&#34;https://en.wikipedia.org/wiki/Multiply%E2%80%93accumulate_operation&#34;&gt;fused multiply-add operation&lt;/a&gt;.
Finally, we finish in 12 minutes. Not 7 as one might expect because our
bottleneck is the memory throughput.&lt;/p&gt;

&lt;p&gt;We still can do better! There is one last powerful optimization: tuning the
block sizes, that is, the topology of the calculations. The maximum block
size is 1024 and it is optimal in case of zero shared memory usage and
no internal thread synchronization. All the previous run times were given with
that block size. But our most time consuming kernels
(that is, functions which run on GPU in CUDA terminology) use shared memory
and thus need to synchronize. Setting smaller block size for them allows
for better hardware load balancing: while some threads wait on the synchronization
barrier in one warp, they may do useful work in the other.
The best block size is normally found by experiment and equals to either
256 or 512. This brings dramatic performance improvement: down to
7 minutes and 16 seconds.&lt;/p&gt;

&lt;p&gt;Can we do better?.. Yes we can, but not with vanilla Lloyd at this time.
Yinyang code uses much of Lloyd tweaks we suggested before, and finally
we reach the run time of 4:38. The difference between
the promised 10x improvement in the paper and the observed 1.5x has to be explained.
Because of the SIMT nature, if different threads in the same group (warp)
go by different code paths after a conditional clause, the overall run time
of the warp will be the sum of the run times of each different path.
Thus, the extensive branching inside Yinyang does not result in much
performance boost. The other reason is that we still have to run Lloyd-like
iterations from time to time in order to make Yinyang iterations perform well
and the former are slow because of extensive memory writes.&lt;/p&gt;

&lt;p&gt;There is a way to further speed up Lloyd a little though, if we properly
align the lanes in our samples and centroids arrays. It is best to make
the number of dimensions to be dividable by 32 (512 alignment) as it
optimizes the memory bandwidth usage. Since it can be done by
padding sample coordinate vectors with zeros, we omit this optimization.
Besides, we want to fit as much data as possible because GPU memory
size is limited, and the alignment can increase it considerably.&lt;/p&gt;

&lt;p&gt;An important notice about Yinyang is that if you have much more data than in
the benchmark, you will not be able to use it at all and have to fallback
to Lloyd unconditionally.&lt;/p&gt;

&lt;p&gt;Final note: some of the code should run on host and OpenMP 4 (SIMD and multithreading)
is used in the corresponding places.&lt;/p&gt;

&lt;h2 id=&#34;development:79f652027d607e9f286dd0153c47d871&#34;&gt;Development&lt;/h2&gt;

&lt;p&gt;The project is being developed in &lt;a href=&#34;https://www.jetbrains.com/clion/&#34;&gt;CLion IDE&lt;/a&gt;.
Although it does not directly support CUDA, it is still very nice, offering
very good CMake build system integration. CMake has
&lt;a href=&#34;https://cmake.org/cmake/help/v3.0/module/FindCUDA.html&#34;&gt;FindCUDA&lt;/a&gt; tools
so that making a CUDA-powered project is easy.&lt;/p&gt;

&lt;p&gt;We used good-ol&amp;rsquo; &lt;a href=&#34;http://valgrind.org/&#34;&gt;valgrind&lt;/a&gt; to validate host code
and &lt;code&gt;cuda-memcheck&lt;/code&gt; for the GPU code. Debugging CUDA programs has become
convenient these days with the help of &lt;code&gt;cuda-gdb&lt;/code&gt;. It is basically
a custom build of &lt;a href=&#34;https://www.gnu.org/software/gdb/&#34;&gt;gdb&lt;/a&gt; which allows
for all the usual debugging stuff as if GPU was CPU with the corresponding
number of threads. Profiling is done with &lt;code&gt;nvvp&lt;/code&gt; - NVIDIA Visual Profiler.&lt;/p&gt;

&lt;p&gt;The tests are implemented in Python and currently run manually and not included
into the project. One of the test images is shown in this article&amp;rsquo;s header.&lt;/p&gt;

&lt;h2 id=&#34;comparison:79f652027d607e9f286dd0153c47d871&#34;&gt;Comparison&lt;/h2&gt;

&lt;p&gt;CPU: Intel Xeon E5-1650 v3 (supports AVX2, 6+6 threads).&lt;/p&gt;

&lt;p&gt;GPU: NVIDIA Titan X (12GB, 3000 cores).&lt;/p&gt;

&lt;p&gt;MEM: Samsung M393A2G40DB0-CPB (DDR4, 128GB).&lt;/p&gt;

&lt;p&gt;OS: Ubuntu 16.04 x86-64.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;name&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;time&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;memory&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html&#34;&gt;sklearn KMeans&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&amp;gt;3h&lt;sup&gt;*&lt;/sup&gt;&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4GB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://github.com/michaelchughes/KMeansRex&#34;&gt;KMeansRex&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;31m&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;25GB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;kmcuda Lloyd&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7m16s&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1GB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;kmcuda Yinyang&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4m38s&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6GB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;sup&gt;*&lt;/sup&gt;We didn&amp;rsquo;t wait more and stopped.&lt;/p&gt;

&lt;h2 id=&#34;points-of-improvement:79f652027d607e9f286dd0153c47d871&#34;&gt;Points of improvement&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Further Yinyang optimization (e.g., clever sorting).&lt;/li&gt;
&lt;li&gt;&lt;s&gt;fp16&lt;/s&gt; - done.&lt;/li&gt;
&lt;li&gt;&lt;s&gt;Multi-GPU&lt;/s&gt; - done.&lt;/li&gt;
&lt;li&gt;&lt;s&gt;Angular distance metric (aka Spherical K-Means)&lt;/s&gt; - done.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;conclusion:79f652027d607e9f286dd0153c47d871&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The developed K-means implementation is very fast on moderate data sizes
and fast on bigger sizes. Besides, it is memory efficient.
Optimizing CUDA programs is hard but fun, and
the used techniques are common and not so complicated. Yinyang algorithm is cool,
though seems to not perfectly fit into the GPU architecture. We hope that Yinyang
can be further optimized to fully demonstrate it&amp;rsquo;s potential.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fun with GitHub repositories statistics.</title>
      <link>/post/github_stats/</link>
      <pubDate>Wed, 06 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/github_stats/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s always fun to play with a dataset few people have ever played with.
source{d} knows much about each GitHub developer, including the number of
bytes written in each programming language, all commits metadata, etc.
So a trivial takeoff will be to use this information to have a better
understanding of the industry.&lt;/p&gt;

&lt;p&gt;First of all, software developers are humans (yet), and some of them
make open source contributions, which is a natural process. Therefore one
may expect the distribution of the overall number of bytes written by
each GitHub user to be &lt;a href=&#34;https://en.wikipedia.org/wiki/Log-normal_distribution&#34;&gt;log-normal&lt;/a&gt;.
Well it&amp;rsquo;s not:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/overall.png&#34; alt=&#34;overall&#34; /&gt;&lt;/p&gt;

&lt;p&gt;There are much more developers who wrote less code than average than
those who wrote more code than average.
Yet if we look at each language individually, the picture becomes log-normal:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/c.png&#34; alt=&#34;C&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/java.png&#34; alt=&#34;Java&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/python.png&#34; alt=&#34;Python&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The more code is written in the language, apparently the more the peak
shifts to the right. For example, Go&amp;rsquo;s peak is 9.22 while C&amp;rsquo;s is 9.81.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/go.png&#34; alt=&#34;Go&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If a language goes out of the mainstream, the left slope becomes steep and
the right one flat:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/cobol.png&#34; alt=&#34;Cobol&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/pascal.png&#34; alt=&#34;Pascal&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Interestingly, some common languages are irregular:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/js.png&#34; alt=&#34;Javascript&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/ruby.png&#34; alt=&#34;Ruby&#34; /&gt;&lt;/p&gt;

&lt;p&gt;It turns out that Javascript developer density stays the same in a broad interval
400 - 400000 bytes. The gap between the numbers of casual and productive
rubyists is as high as 2x.&lt;/p&gt;

&lt;p&gt;If we look at repository sizes, they are log-normal too:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/repo_java.png&#34; alt=&#34;Java&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/repo_python.png&#34; alt=&#34;Python&#34; /&gt;&lt;/p&gt;

&lt;p&gt;These distributions demonstrate the fact that Python is less verbose than
Java: linear mean repository size is 30% smaller for the former.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s look at the number of contributors per repository:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/contrib_number.png&#34; alt=&#34;Contributors - log(number of repos)&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Clearly most of GitHub repos are used solely by their owners. But the
picture changes if we consider the overall sum of bytes instead of
repositories number:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/contrib_bytes.png&#34; alt=&#34;Contributors - log(bytes)&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Thus, most of the code is written in repositories with 2 contributors.&lt;/p&gt;

&lt;p&gt;Finally, let&amp;rsquo;s look at commit stats. The distribution of the number of commits
made by each developer is not log-normal, it decreases polynomially.
Here are the first 10:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/commits_10.png&#34; alt=&#34;Commits - 10&#34; /&gt;&lt;/p&gt;

&lt;p&gt;And the rest in the log scale:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/github_stats/commits_log.png&#34; alt=&#34;Commits - log&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So there is no such thing as the most common commits number, apart from 0 and 1.
Besides, it appears that the number of commits poorly correlates with the
amount of code written, otherwise we would get a log-normal distribution.&lt;/p&gt;

&lt;p&gt;While all this analysis is fun, it&amp;rsquo;s even more fun to repeat it after
some time, e.g. in a year. Watching how the state evolves will allow to
predict trends in software development and open source community.&lt;/p&gt;

&lt;p&gt;The data for this post was obtained in April, 2016. We used
&lt;a href=&#34;https://github.com/src-d/go-git&#34;&gt;src-d/go-git&lt;/a&gt; to fetch all GitHub
repositories.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Never mess with LD_LIBRARY_PATH to run your CUDA app again</title>
      <link>/post/cuda_ldconfig/</link>
      <pubDate>Fri, 03 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/cuda_ldconfig/</guid>
      <description>&lt;p&gt;If you are using &lt;a href=&#34;https://en.wikipedia.org/wiki/CUDA&#34;&gt;CUDA&lt;/a&gt; on Linux then
the following must be familiar:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~/.bashrc

...

export LD_LIBRARY_PATH=/usr/local/cuda-7.5/lib64

# or even smarter

export LD_LIBRARY_PATH=/usr/local/cuda-7.5/lib64:$LD_LIBRARY_PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This solves the problem with CUDA libraries search path and allows to
actually run CUDA-powered programs. Every time you execute a program, the
dynamic linker (GNU ld) reads the imported symbols table from the
executable container (ELF) and has a hard time trying to load them from
shared libraries available in the system (*.so). If it fails then the program
will not start running. ELF carries the list of library names which should
contain the imports, so that the loader does not end up with probing
&lt;em&gt;every&lt;/em&gt; library out there. You can view that dependency list using &lt;code&gt;ldd&lt;/code&gt;
command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ldd /bin/ls
	linux-vdso.so.1 =&amp;gt;  (0x00007ffd27ffb000)
	libselinux.so.1 =&amp;gt; /lib/x86_64-linux-gnu/libselinux.so.1 (0x00007f4823fa8000)
	libacl.so.1 =&amp;gt; /lib/x86_64-linux-gnu/libacl.so.1 (0x00007f4823da0000)
	libc.so.6 =&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f48239db000)
	libpcre.so.3 =&amp;gt; /lib/x86_64-linux-gnu/libpcre.so.3 (0x00007f482379d000)
	libdl.so.2 =&amp;gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f4823599000)
	/lib64/ld-linux-x86-64.so.2 (0x00007f48241cb000)
	libattr.so.1 =&amp;gt; /lib/x86_64-linux-gnu/libattr.so.1 (0x00007f4823394000)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Shared libraries are searched in several paths. Some of them are stored
in ELF itself, some of them are not. In the latter case, common library
search paths are scanned. They usually include &amp;ldquo;/lib&amp;rdquo;, &amp;ldquo;/usr/lib&amp;rdquo;, etc.
The current list of library search paths can be printed with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ld --verbose | grep SEARCH_DIR | sed -E &#39;s/(&amp;quot;\); |&amp;quot;\);|)(SEARCH_DIR\(&amp;quot;=?|$)/\n/g&#39; | head -n -1 | tail -n +2
/usr/x86_64-linux-gnu/lib64
/usr/local/lib/x86_64-linux-gnu
/usr/local/lib64
/lib/x86_64-linux-gnu
/lib64
/usr/lib/x86_64-linux-gnu
/usr/lib64
/usr/local/lib
/lib
/usr/lib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;GNU dynamic loader supports hacking into library loading and searching
procedures. LD_PRELOAD, for example, forces &lt;code&gt;ld&lt;/code&gt; to load the given libraries
before normally loading any others. LD_LIBRARY_PATH extends the list
of library search paths.&lt;/p&gt;

&lt;p&gt;Sometimes, libraries are installed into some non-standard directories,
as with CUDA. If the target binaries were not built with explicit
mentioning those directories so that they crawl into ELF library search
paths (-L option of gcc), then you are in trouble. Every time you attempt
to run such program, the dependent libraries are not found and you fail.
That is why usually people apply hacks with LD_LIBRARY_PATH then.&lt;/p&gt;

&lt;p&gt;Is there any other solution? Yes.&lt;/p&gt;

&lt;p&gt;An interesting question is, how &lt;code&gt;ld&lt;/code&gt; knows about the list of common library
search paths. It shouldn&amp;rsquo;t be hardcoded, right? Sure. This is when
&lt;code&gt;ldconfig&lt;/code&gt; comes out. It builds the special configuration file, usually
&lt;code&gt;/etc/ld.so.cache&lt;/code&gt;, which is picked up by the dynamic loader every time
a program needs to start. &lt;code&gt;ldconfig&lt;/code&gt; reads the paths from the configuration
file, &lt;code&gt;/etc/ld.so.conf&lt;/code&gt;, which usually includes files from &lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls /etc/ld.so.conf.d
fakeroot-x86_64-linux-gnu.conf  libc.conf              x86_64-linux-gnu_EGL.conf  zz_i386-biarch-compat.conf
i386-linux-gnu_GL.conf          x86_64-linux-gnu.conf  x86_64-linux-gnu_GL.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now the solution is clear: let&amp;rsquo;s create a new configuration file for
&lt;code&gt;ldconfig&lt;/code&gt;, say, &lt;code&gt;/etc/ld.so.conf.d/cuda.conf&lt;/code&gt;, with the path from LD_LIBRARY_PATH:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/local/cuda-7.5/targets/x86_64-linux/lib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then run &lt;code&gt;sudo ldconfig&lt;/code&gt; and voila!&lt;/p&gt;

&lt;p&gt;Amazingly few people know about this, and even
&lt;a href=&#34;http://www.cs.colostate.edu/~info/cuda-faq.html&#34;&gt;CUDA FAQ&lt;/a&gt;
suggest augmenting LD_LIBRARY_PATH instead - bummer. Of course,
CUDA users should not experience troubles at all and CUDA maintainers
should definitely include &lt;code&gt;/etc/ld.so.conf.d/cuda.conf&lt;/code&gt; into the
distribution package. Alternatively, end-user CUDA applications should be
compiled with &lt;code&gt;-L /usr/local/cuda-7.5/lib64&lt;/code&gt; since 99% folks do not
change the default installation root (hey, Tensorflow!).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>100 Awesome Women In The Open-Source Community You Should Know</title>
      <link>/post/100-awesome-women-in-the-open-source-community-you-should-know/</link>
      <pubDate>Wed, 25 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/100-awesome-women-in-the-open-source-community-you-should-know/</guid>
      <description>&lt;p&gt;&lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/post-style.css&#34;&gt;&lt;/p&gt;

&lt;p&gt;To give you a bit of background, at source{d} we analyse every GitHub repository
and run our own version of &lt;code&gt;git blame&lt;/code&gt; (&lt;a href=&#34;http://github.com/src-d/go-git&#34;&gt;go-git&lt;/a&gt;) across 900 million
commits. This gives us unique insight into the code published by over 6 million
developers. It&amp;rsquo;s important to note that this post is only based on GitHub repositories,
 over time we hope to expand to all Git projects hosted on the web.&lt;/p&gt;

&lt;p&gt;There have been a lot of posts about gender in the development community, we
realised  that we were in a great position to contribute with data. It started
with the question, how will we determine gender across 6 million developers. We
took the approach of classifying names based on their statistically likelihood
to be either male or female. We started with cleaning up the names used in
commits: separating first names, last names and usernames. Secondly, we went to
look for data sources for name genderization. Which led us to several census
database (UK &amp;amp; USA) and several API&amp;rsquo;s (primarily to cover non-latin names).
After a lot of cleaning, we had compiled a database of over 144,000 names with their:
gender, # of occurrences and our statistical likelihood of being correct. We are still
improving and adding on different methods to determine gender to make our study
more accurate before we release it.&lt;/p&gt;

&lt;p&gt;From the 6 million developers who have publicly contributed to GitHub we were able to
determine gender based on name for approx. 2 million. In the coming month, we&amp;rsquo;ll be releasing
different posts and analysis on this data set.&lt;/p&gt;

&lt;p&gt;Before we post about percentages, country specific differences and trends over
time, we wanted to take a moment and highlight some of the women who have been
active in the open-source community. This list in no way is exhaustive, and we
have tried our best to keep it as objective as possible. To do this, we decided
to first slice our data set on two variables:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Total # of commits&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Our own version of PageRank*&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;*We look at every developer as a node in a graph and every project they
contributed to as an edge, we then weight each edge based on the ratio of # of
bytes contributed to that project. Once we have this graph, we apply the
PageRank algorithm. Please note that this is a reputation metric and is
hence greatly influenced by the co-contributors across repositories.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We identified every developer whose name we had classified as female, whose total #
of commits was above 1,000, and ordered based on PageRank. We then manually reviewed
over +1000 GitHub profiles to ensure that the contributions were open-source
projects. We decided to allow projects from any field (besides computer science
you&amp;rsquo;ll find bioinformatics and astrophysics represented here) and if there was no license but it
was clearly open-source we allowed it (it&amp;rsquo;s debatable if we should be more strict here).&lt;/p&gt;

&lt;p&gt;The data set used to get to the commit count, is an analysis of the raw pack files
of every public Git repository on GitHub until 21st April 2016. Often the counts of
commits will differ from the GitHub profiles which seem to use a different method.&lt;/p&gt;

&lt;p&gt;We would like to make it very clear that metrics such as PageRank, stars and followers
on GitHub are pure vanity metrics. We used PageRank because we like that it shows the
community aspect of whom you&amp;rsquo;ve worked with and on what projects but over time we&amp;rsquo;ll
be releasing better metrics that focus on quality &amp;amp; impact. As a developer today you should
not be coding to get stars on GitHub.&lt;/p&gt;

&lt;p&gt;We have tried to reached out to every person on this list to ask if they had any objection to
being included or if they wanted any of their information changed (we&amp;rsquo;ve heard back from 72
and unfortunately had some emails bounce). If you&amp;rsquo;d still like to be excluded or have your
information updated, please contact me (&lt;a href=&#34;mailto:eiso@sourced.tech&#34;&gt;eiso@sourced.tech&lt;/a&gt;). We are certain that we
have missed some amazing developers and hope that it&amp;rsquo;s clear that this list is to highlight just a
small sample of incredible developers.&lt;/p&gt;

&lt;p&gt;Any suggestions or improvements for posts can be requested on &lt;a href=&#34;https://github.com/src-d/blog/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We would like the discussion for this post to happen at &lt;a href=&#34;https://news.ycombinator.com/item?id=11771235&#34;&gt;YC HN&lt;/a&gt; because we
believe the community is great at self-moderating (I&amp;rsquo;ve personally been a user since 2008).&lt;/p&gt;

&lt;p&gt;You can also follow the tweets of this incredible list of developers here: &lt;a href=&#34;https://twitter.com/srcd_/lists/awesome-women-in-oss&#34;&gt;Twitter list&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;1. Misty De Meo&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/mistydemeo&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Misty De Meo&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/695096215927521280/Gyl1TuMi_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Vancouver  working at GitHub&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=mistydemeo&#34; target=&#34;_blank&#34; alt=&#34;Follow mistydemeo&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/mistydemeo&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3728&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1873.4&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Makes tools for devs at @github.
Sometime-archivist!!
@machomebrew, @mactigerbrew.
Opinions: mine, &amp;c.
Follow reqs okay!
Avatar by @repoghost!
(see also; @ticky)&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/Homebrew/homebrew-core&#34;&gt;homebrew-core&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Ruby&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;732&lt;/strong&gt;&lt;span&gt; Commits by @mistydemeo&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;351&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;26&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;582&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;:beers: Core formulae for the Homebrew package manager&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;2. Katrina Owen&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/kytrinyx&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Katrina Owen&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/651150543927185408/xq5Dy6Z5_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=kytrinyx&#34; target=&#34;_blank&#34; alt=&#34;Follow kytrinyx&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/kytrinyx&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;9137&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;499.6&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;I make exercism.io&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/exercism/exercism.io&#34;&gt;exercism.io&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Ruby&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3314&lt;/strong&gt;&lt;span&gt; Commits by @kytrinyx&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2109&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;121&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;627&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Level up your programming skills.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;3. Jess Frazelle&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/jfrazelle&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Jess Frazelle&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/635287771570114560/ALpwsifs_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Falken&#39;s Maze&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=jessfraz&#34; target=&#34;_blank&#34; alt=&#34;Follow jessfraz&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/jfrazelle&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3910&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;438.7&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;has been called the Keyser Söze of containers, security @mesosphere, the band formerly known as a @docker maintainer&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/docker/engine-api&#34;&gt;engine-api&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Go&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;810&lt;/strong&gt;&lt;span&gt; Commits by @jfrazelle&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;156&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;43&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;89&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Go libraries providing client and server components compatible with the Docker engine&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;4. Natalie Weizenbaum&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/nex3&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Natalie Weizenbaum&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/709190819236880384/xV2PUtsb_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Seattle working at Google&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=nex3&#34; target=&#34;_blank&#34; alt=&#34;Follow nex3&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/nex3&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;10833&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;369.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Lesbian code gardener. Basically a dryad. Lead designer and developer of @SassCSS, working for @google on @dart_lang. Avatar by @roozuhime.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/sass/sass&#34;&gt;sass&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Ruby&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;4340&lt;/strong&gt;&lt;span&gt; Commits by @nex3&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;8010&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;601&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1572&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Sass makes CSS fun again.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;5. Aria Stewart&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/aredridel&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Aria Stewart&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/651825569735290880/JRbMsOV2_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Somerville, MA&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=aredridel&#34; target=&#34;_blank&#34; alt=&#34;Follow aredridel&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/aredridel&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;9589&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;341.7&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Random internet positive commenter &amp; foul weather friend.

Admin.

Unschooler. www at npmjs.

♥︎ node.js.

nb &amp; woman.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/aredridel/html5&#34;&gt;html5&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;752&lt;/strong&gt;&lt;span&gt; Commits by @aredridel&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;524&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;32&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;115&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Event-driven HTML5 Parser in Javascript&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;6. Caitlin Potter&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/caitp&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Caitlin Potter&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/720445010546700288/4Zu8o3WY_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Working at Igalia&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=caitp88&#34; target=&#34;_blank&#34; alt=&#34;Follow caitp88&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/caitp&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2479&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;318.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Ballerina by day, ninja chemist by night&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/v8/v8&#34;&gt;v8&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;C++&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;97&lt;/strong&gt;&lt;span&gt; Commits by @caitp&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2351&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;293&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;594&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;The official mirror of the V8 git repository&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;7. Rebecca Turner&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/iarna&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Rebecca Turner&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/724367190061780993/VJ6elhjl_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in East Bay, CA working at NPM&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=rebeccaorg&#34; target=&#34;_blank&#34; alt=&#34;Follow rebeccaorg&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/iarna&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3597&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;260.6&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;open DMs. iarna on github &amp; irc, etc 
–––
Biases: cynically optimistic intersectional feminist pragmatic poly queer trans femininity
–––
work for npm on the cli&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/npm/npm&#34;&gt;npm&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;576&lt;/strong&gt;&lt;span&gt; Commits by @iarna&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9354&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;543&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1929&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;a package manager for javascript&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;8. Julie Ralph&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/juliemr&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Julie Ralph&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/378800000758804318/868f250839f64926e2ac0ea6d5bb8214_normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Seattle, WA working at Google&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=SomeJulie&#34; target=&#34;_blank&#34; alt=&#34;Follow SomeJulie&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/juliemr&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1095&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;246.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Protractor for AngularJS, works at Google&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/angular/protractor&#34;&gt;protractor&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;683&lt;/strong&gt;&lt;span&gt; Commits by @juliemr&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;5421&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;389&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1210&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;E2E test framework for Angular apps&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;9. Nicole Thomas&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/rallytime&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Nicole Thomas&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/446703175416807424/5BuB4usQ_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Salt Lake City, Utah working at SaltStack&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=rallytime_nt&#34; target=&#34;_blank&#34; alt=&#34;Follow rallytime_nt&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/rallytime&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3038&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;229.5&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/saltstack/salt&#34;&gt;salt&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2792&lt;/strong&gt;&lt;span&gt; Commits by @rallytime&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;6536&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;528&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2899&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Software to automate the management and configuration of any infrastructure or application at scale. Get access to the Salt Open software package repository here: &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;10. Lauren McCarthy&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/lmccart&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Lauren McCarthy&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/378800000565460833/706acfad0a02e4377702aaa2cb1882aa_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in brooklyn, ny&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=laurmccarthy&#34; target=&#34;_blank&#34; alt=&#34;Follow laurmccarthy&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/lmccart&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;5521&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;181.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;artist, programmer, person. @ITP_NYU faculty, @BerkmanCenter affiliate, @datasociety affiliate, making @p5xjs&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/processing/p5.js&#34;&gt;p5.js&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1646&lt;/strong&gt;&lt;span&gt; Commits by @lmccart&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;3846&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;286&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;514&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;p5.js is a JS client-side library for creating graphic and interactive experiences, based on the core principles of Processing.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;11. Coraline Ada Ehmke&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/CoralineAda&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Coraline Ada Ehmke&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;https://pbs.twimg.com/profile_images/734228526946213888/DPUXM2e4_200x200.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Chicago working at GitHub&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=CoralineAda&#34; target=&#34;_blank&#34; alt=&#34;Follow CoralineAda&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/CoralineAda&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3174&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;169.5&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Code witch. Ruby Hero. Speaker, writer, mentor, Ruby Rogues panelist. &#39;Notorious Social Justice Warrior&#39; --Breitbart. https://t.co/w5rw8bPZXX&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/coralineada/society&#34;&gt;society&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Ruby&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;195&lt;/strong&gt;&lt;span&gt; Commits by @CoralineAda&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;36&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A social graph for Ruby objects.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;12. Julia Lawall&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/JuliaLawall&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Julia Lawall&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/no-avatar.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in France&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button hide&#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=&#34; target=&#34;_blank&#34; alt=&#34;Follow &#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/JuliaLawall&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2838&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;156.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;My current research focuses on the design and implementation of domain-specific languages, mostly targetting problems in operating systems. I have also worked on partial evaluation, optimal reduction of the lambda calculus and continuations.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/coccinelle/coccinelle&#34;&gt;coccinelle&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;OCaml&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2838&lt;/strong&gt;&lt;span&gt; Commits by @JuliaLawall&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;127&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;24&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;31&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Source code of the Coccinelle project&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;13. Gina Trapani&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/ginatrapani&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Gina Trapani&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/550825678673682432/YRqb4FJE_normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Brooklyn, New York, USA working at Postlight&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=ginatrapani&#34; target=&#34;_blank&#34; alt=&#34;Follow ginatrapani&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/ginatrapani&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2903&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;135.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;I build software at @PostlightAgency. I also made @makerbase @thinkup @todotxt &amp; http://narrowthegapp.com. Once upon a time, I started @Lifehacker. #2Q2BSTR8 ‍‍&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/ThinkUpLLC/ThinkUp&#34;&gt;ThinkUp&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;PHP&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1941&lt;/strong&gt;&lt;span&gt; Commits by @ginatrapani&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;3388&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;210&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;773&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;ThinkUp gives you insights into your social networking activity on Twitter, Facebook, Instagram, and beyond.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;14. Sara Golemon&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/sgolemon&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Sara Golemon&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/563453422779645952/JVgsjmNx_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Silicon Valley&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=SaraMG&#34; target=&#34;_blank&#34; alt=&#34;Follow SaraMG&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/sgolemon&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3339&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;131.4&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;lvl63 Gnomish Compiler Nerd - Working on my dual-runtime specialization.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/facebook/hhvm&#34;&gt;hhvm&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;C++&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;713&lt;/strong&gt;&lt;span&gt; Commits by @sgolemon&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;13602&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1161&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2500&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A virtual machine designed for executing programs written in Hack and PHP. &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;15. Camilla Berglund&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/elmindreda&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Camilla Berglund&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/494234179018575876/o0ZVTUsH_normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Sweden working at GLFW&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=elmindreda&#34; target=&#34;_blank&#34; alt=&#34;Follow elmindreda&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/elmindreda&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;6555&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;125.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;GLFW, OpenGL, Vulkan, rendering, 囲碁, ייִדישקייט, copyfight, etc.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/glfw/glfw&#34;&gt;glfw&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;C&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2654&lt;/strong&gt;&lt;span&gt; Commits by @elmindreda&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1935&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;245&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;523&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A multi-platform library for OpenGL, window and input&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;16. Jo Liss&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/joliss&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Jo Liss&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/2400062801/kwvv3onjs6z6bg57i0en_normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=jo_liss&#34; target=&#34;_blank&#34; alt=&#34;Follow jo_liss&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/joliss&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2404&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;116.2&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Serial entrepreneur. Creator of Broccoli and other open source libraries. Feminist.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/broccolijs/broccoli&#34;&gt;broccoli&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;538&lt;/strong&gt;&lt;span&gt; Commits by @joliss&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2758&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;104&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;165&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Browser compilation library – an asset pipeline for applications that run in the browser&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;17. Jaana Burcu Dogan&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/rakyll&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Jaana Burcu Dogan&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/732669098287497216/XjY2dvBB_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in San Francisco, CA working at Google&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=rakyll&#34; target=&#34;_blank&#34; alt=&#34;Follow rakyll&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/rakyll&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2323&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;106.9&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Hacker at Google. Mostly #golang and occasionally hardware hacking. (Please don&#39;t DM, I use telegram and email.)&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/golang/mobile&#34;&gt;mobile&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Go&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;125&lt;/strong&gt;&lt;span&gt; Commits by @rakyll&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1665&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;249&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;196&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;[mirror] Go on Mobile&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;18. Lea Verou&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/leaverou&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Lea Verou&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/584963092120899586/TxkxQ7Y5_normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Boston, MA working at MIT&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=leaverou&#34; target=&#34;_blank&#34; alt=&#34;Follow leaverou&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/leaverou&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1817&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;106.0&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;HCI researcher @MIT_CSAIL, @CSSWG IE, @CSSSecretsBook author, Ex @W3C staff. Made @prismjs @dabblet @prefixfree. I ♥ standards, code, design, UX, life!&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/PrismJS/prism&#34;&gt;prism&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;376&lt;/strong&gt;&lt;span&gt; Commits by @leaverou&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;3029&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;86&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;426&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Lightweight, robust, elegant syntax highlighting.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;19. Monica Dinculescu&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/notwaldorf&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Monica Dinculescu&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/643781313665695745/R4-XNNS2_normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Montreal ✈︎ Sun Funcisco ☀️ working at Google&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=notwaldorf&#34; target=&#34;_blank&#34; alt=&#34;Follow notwaldorf&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/notwaldorf&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2821&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;100.2&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;✨Emojineer✨ on @polymer &amp; @googlechrome. Looks like she will bite; usually doesn&#39;t. Unless you&#39;re pizza. Taiwan #1&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/PolymerElements/paper-input&#34;&gt;paper-input&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;HTML&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;129&lt;/strong&gt;&lt;span&gt; Commits by @notwaldorf&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;30&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;33&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;62&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A Material Design text field&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;20. Audrey Tang&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/audreyt&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Audrey Tang&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/712752441293295616/FLPx8w0H_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Taipei, Taiwan working at Apple &amp; SocialText&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=audreyt&#34; target=&#34;_blank&#34; alt=&#34;Follow audreyt&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/audreyt&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;8691&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;95.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Civic hacker @g0vtw. Grew up among Tiananmen exiles. “Conservative Anarchist.”
Consultant @ Apple, OUP and Socialtext.
⛏ #Perl6 #Haskell #EtherCalc #MoeDict&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/audreyt/ethercalc&#34;&gt;ethercalc&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;612&lt;/strong&gt;&lt;span&gt; Commits by @audreyt&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1327&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;96&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;243&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Node.js port of Multi-user SocialCalc&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;21. Jeanine Adkisson&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/jneen&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Jeanine Adkisson&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/644948567065407488/89jFclLW_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Berkeley, CA working at GoodGuide&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=jneen_&#34; target=&#34;_blank&#34; alt=&#34;Follow jneen_&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/jneen&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3030&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;95.7&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Gayer than you can possibly imagine. I design languages. ask me about my cool new language @tuliplang. &lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/jneen/tulip&#34;&gt;tulip&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Lua&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;141&lt;/strong&gt;&lt;span&gt; Commits by @jneen&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;100&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;21&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Tulip, an untyped functional language which is going to be pretty cool&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;22. Ola Sitarska&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/olasitarska&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Ola Sitarska&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/702193549945622529/0do9Fuh__normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in London, UK working at Potato&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=olasitarska&#34; target=&#34;_blank&#34; alt=&#34;Follow olasitarska&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/olasitarska&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1805&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;95.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;miss radiating enthusiasm. ✨ senior developer @potatolondon, co-founder @djangogirls, organizer @djangoconeurope &amp; @djangounderhood&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/DjangoGirls/djangogirls&#34;&gt;djangogirls&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;451&lt;/strong&gt;&lt;span&gt; Commits by @olasitarska&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;105&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;31&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;106&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Website for DjangoGirls.org&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;23. Emily Stark&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/estark37&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Emily Stark&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/378800000153418066/78f6a61d2dc4437687fd12eccfac3d1d_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in San Francisco working at Google&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=estark37&#34; target=&#34;_blank&#34; alt=&#34;Follow estark37&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/estark37&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1970&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;93.9&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Security engineer working on @GoogleChrome and Blink, trying to make the web a less scary place. Formerly @meteorjs.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/meteor/meteor&#34;&gt;meteor&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1254&lt;/strong&gt;&lt;span&gt; Commits by @estark37&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;33882&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1931&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4162&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Meteor, the JavaScript App Platform&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;24. Elizabeth Mattijsen&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/lizmat&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Elizabeth Mattijsen&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/elizabeth-mattijsen.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in The Netherlands&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button hide&#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=&#34; target=&#34;_blank&#34; alt=&#34;Follow &#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/lizmat&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;5867&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;87.9&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Since her retirement, she has been busy supporting the world-wide Perl community in general, and the development of Rakudo Perl 6 in particular.  You may have seen her at events like FOSDEM, OSCON and many more Perl oriented events like the YAPC’s (Yet Another Perl Conference) in the US, in Europe and in Japan.  She also writes the Perl 6 Weekly blog.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/rakudo/rakudo&#34;&gt;rakudo&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Perl6&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3377&lt;/strong&gt;&lt;span&gt; Commits by @lizmat&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;769&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;134&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;254&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Rakudo Perl -- Perl 6 on MoarVM and the JVM&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;25. Lindsey Kuper&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/lkuper&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Lindsey Kuper&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/539312697225932800/OGwFuF0u_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Santa Clara, CA working at Intel Labs&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=lindsey&#34; target=&#34;_blank&#34; alt=&#34;Follow lindsey&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/lkuper&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2798&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;87.0&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;A little bit “Permit yourself to open a book and start reading from anywhere”; a little bit “I HAVE NO TOOLS BECAUSE I&#39;VE DESTROYED MY TOOLS WITH MY TOOLS”.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/iu-parfunc/lvars&#34;&gt;lvars&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Haskell&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;346&lt;/strong&gt;&lt;span&gt; Commits by @lkuper&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;52&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;32&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;6&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;The LVish Haskell library &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;26. Colleen Murphy&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/cmurphy&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Colleen Murphy&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/472945105641291776/_dJTFflB_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Portland, Oregon working at Hewlett-Packard&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=pdx_krinkle&#34; target=&#34;_blank&#34; alt=&#34;Follow pdx_krinkle&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/cmurphy&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1752&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;85.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Core reviewer on the OpenStack Puppet Modules team, on the puppet modules subteam on the OpenStack Infrastructure team and chief shepherd for the Infra Cloud project.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/puppetlabs/modulesync&#34;&gt;modulesync&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Ruby&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;125&lt;/strong&gt;&lt;span&gt; Commits by @cmurphy&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;48&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;109&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;22&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Synchronize common files between github module repositories.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;27. Eileen McNaughton&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/eileenmcnaughton&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Eileen McNaughton&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/eileen-mcnaughton.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Working at Fuzion&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=eileentnaughton&#34; target=&#34;_blank&#34; alt=&#34;Follow eileentnaughton&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/eileenmcnaughton&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;4827&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;80.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Key contributor within the CiviCRM community.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/civicrm/civicrm-core&#34;&gt;civicrm-core&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;PHP&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2614&lt;/strong&gt;&lt;span&gt; Commits by @eileenmcnaughton&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;150&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;38&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;416&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;CiviCRM (Core Application and Framework)&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;28. Heather Miller&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/heathermiller&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Heather Miller&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/1452273043/profilepic_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Lausanne, Switzerland working at LAMP lab @ EPFL&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=heathercmiller&#34; target=&#34;_blank&#34; alt=&#34;Follow heathercmiller&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/heathermiller&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2762&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;80.5&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Research Scientist, Executive Director of the Scala Center at EPFL. Past life: artist @ Cooper Union&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/scala/scala&#34;&gt;scala&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Scala&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;86&lt;/strong&gt;&lt;span&gt; Commits by @heathermiller&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;6195&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;649&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1564&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;The Scala programming language&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;29. Linda&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/rhysd&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Linda&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/3626384430/3a64cf406665c1940d68ab737003605c_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Tokyo, Japan&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=Linda_pp&#34; target=&#34;_blank&#34; alt=&#34;Follow Linda_pp&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/rhysd&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;7376&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;77.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;ソフトウェアエンジニア (Developer + QA)．趣味で C++，Ruby，TypeScript，Dachs をVimったりする．計算機言語などのプログラミングツールが好き．あと写真も楽しい．犬．&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/rhysd/Dachs&#34;&gt;Dachs&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;C++&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1419&lt;/strong&gt;&lt;span&gt; Commits by @rhysd&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;34&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Dachs; A Doggy :dog: Programming Language written in C++14.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;30. Raquel Vélez&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/rockbot&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Raquel Vélez&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/657044546430177280/47ES_A2x_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Bay Area, CA working at NPM&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=rockbot&#34; target=&#34;_blank&#34; alt=&#34;Follow rockbot&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/rockbot&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1477&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;76.6&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;purveyor of flan ∙ web wombat at @npmjs ∙ polyglot ∙ co-host of @reactivepod&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/npm/newww&#34;&gt;newww&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;927&lt;/strong&gt;&lt;span&gt; Commits by @rockbot&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;61&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;19&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;30&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;The npm website&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;31. Emily Stolfo&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/estolfo&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Emily Stolfo&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/643443749893316608/m9LIo18J_normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Berlin working at MongoDB&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=EmStolfo&#34; target=&#34;_blank&#34; alt=&#34;Follow EmStolfo&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/estolfo&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1283&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;74.0&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;gem install mongo; gem install mongoid&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/mongodb/mongo-ruby-driver&#34;&gt;mongo-ruby-driver&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Ruby&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;894&lt;/strong&gt;&lt;span&gt; Commits by @estolfo&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1254&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;47&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;408&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Ruby driver for MongoDB&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;32. Gina Häußge&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/foosel&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Gina Häußge&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/729310895940079617/lLvat2_M_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Obertshausen, Germany&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=foosel&#34; target=&#34;_blank&#34; alt=&#34;Follow foosel&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/foosel&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3234&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;64.0&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Passionate code monkey, creator of OctoPrint&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/foosel/OctoPrint&#34;&gt;OctoPrint&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1754&lt;/strong&gt;&lt;span&gt; Commits by @foosel&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1333&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;252&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;582&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;OctoPrint is the snappy web interface for your 3D printer!&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;33. Margaret Leibovic&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/leibovic&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Margaret Leibovic&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/601058260406247424/WOn9q0rC_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Toronto, Ontario working at Mozilla&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=mleibovic&#34; target=&#34;_blank&#34; alt=&#34;Follow mleibovic&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/leibovic&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1330&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;61.2&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Firefox for Android engineering manager at Mozilla. I like the web, running, and food.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/mozilla/gecko-dev&#34;&gt;gecko-dev&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Java&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;297&lt;/strong&gt;&lt;span&gt; Commits by @leibovic&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;658&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;105&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;806&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Git mirror of the Mercurial gecko repository&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;34. Siri Hansen&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/sirihansen&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Siri Hansen&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/no-avatar.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Stockholm, Sweden working at Ericsson&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button hide&#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=&#34; target=&#34;_blank&#34; alt=&#34;Follow &#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/sirihansen&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1397&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;57.4&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/erlang/otp&#34;&gt;otp&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Erlang&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;766&lt;/strong&gt;&lt;span&gt; Commits by @sirihansen&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4546&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;481&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1312&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Erlang/OTP&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;35. Varya Stepanova&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/varya&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Varya Stepanova&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/443865798793117696/AEOrym9F_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Helsinki working at SC5&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=varya_en&#34; target=&#34;_blank&#34; alt=&#34;Follow varya_en&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/varya&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3834&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;56.6&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Frontend dev for SC5 (Helsinki). Before was TMG (Amsterdam) and Yandex (Moscow). Truly BEM #b_ adept and a cat fan. For tweets in Russian follow @toivonens.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/SC5/sc5-styleguide&#34;&gt;sc5-styleguide&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;635&lt;/strong&gt;&lt;span&gt; Commits by @varya&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;915&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;58&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;119&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Styleguide generator is a handy little tool that helps you generate good looking styleguides from stylesheets using KSS notation&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;36. Soledad Penadés&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/sole&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Soledad Penadés&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/1536057871/digger_normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in London, UK working at Mozilla&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=supersole&#34; target=&#34;_blank&#34; alt=&#34;Follow supersole&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/sole&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3614&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;55.2&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;DEVANGENEERING AT @MOZILLA, GIF curator, emoji practitioner, likes music &amp; quiet places&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/sole/rtcamera&#34;&gt;rtcamera&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;266&lt;/strong&gt;&lt;span&gt; Commits by @sole&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;26&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;12&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A fun camera app to process images in real time, using Web technologies.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;37. Ashley Williams&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/ashleygwilliams&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Ashley Williams&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/717057207754428421/CDqYM8eg_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in NYC, USA working at NPM&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=ag_dubs&#34; target=&#34;_blank&#34; alt=&#34;Follow ag_dubs&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/ashleygwilliams&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2558&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;52.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;a mess like this is easily five to ten years ahead of its time. human, @npmjs. @nodejs board of directors. founder, @node_together.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/bocoup/open-web-fundamentals&#34;&gt;open-web-fundamentals&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;CSS&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;78&lt;/strong&gt;&lt;span&gt; Commits by @ashleygwilliams&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;20&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;22&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;a celebration and exploration of the open web, for and by those interested in becoming responsible and informed web- makers and consumers&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;38. Jennifer Bryan&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/jennybc&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Jennifer Bryan&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/660978605606875137/s3YrJetD_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Vancouver, BC working at University of British Columbia&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=JennyBryan&#34; target=&#34;_blank&#34; alt=&#34;Follow JennyBryan&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/jennybc&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3143&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;51.7&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;prof at UBC, humane #rstats, statistics, teach @STAT545, @ropensci&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/jennybc/googlesheets&#34;&gt;googlesheets&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;R&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;491&lt;/strong&gt;&lt;span&gt; Commits by @jennybc&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;331&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;40&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;65&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Google Spreadsheets R API&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;39. Rebecca Murphey&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/rmurphey&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Rebecca Murphey&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/504070124509229056/6t-MUDgL_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Austin, TX working at Indeed&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=rmurphey&#34; target=&#34;_blank&#34; alt=&#34;Follow rmurphey&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/rmurphey&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3250&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;51.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Software engineer @IndeedEng.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/rmurphey/mulberry&#34;&gt;mulberry&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1075&lt;/strong&gt;&lt;span&gt; Commits by @rmurphey&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;8&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;8&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;34&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Home of Toura Mulberry, tools and a framework for quickly producing cross-platform mobile applications using Javascript, HTML, CSS, and PhoneGap&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;40. Delisa Mason&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/kattrali&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Delisa Mason&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/542803639316664320/Jzcs814D_normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Working at BugSnag&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=kattrali&#34; target=&#34;_blank&#34; alt=&#34;Follow kattrali&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/kattrali&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2321&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;49.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Hacking back in time  

Lead Open Source Engineer @bugsnag&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/danlucraft/redcar&#34;&gt;redcar&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Ruby&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;645&lt;/strong&gt;&lt;span&gt; Commits by @kattrali&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1002&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;52&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;160&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A cross-platform programmer&#39;s editor written in Ruby.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;41. Nelle Varoquaux&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/NelleV&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Nelle Varoquaux&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/569716392/twitterProfilePhoto_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Paris working at Center for Computational Biology&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=nvaroqua&#34; target=&#34;_blank&#34; alt=&#34;Follow nvaroqua&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/NelleV&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1889&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;49.2&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Currently PHD candidate at MINES ParisTech&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/MarkUsProject/Markus&#34;&gt;Markus&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Ruby&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;432&lt;/strong&gt;&lt;span&gt; Commits by @NelleV&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;137&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;11&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;172&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Git repository of MarkUs&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;42. Mikayla Hutchinson&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/mhutch&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Mikayla Hutchinson&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/660886133262319616/CeK5UubM_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Somerville, MA, USA working at Xamarin&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=mjhutchinson&#34; target=&#34;_blank&#34; alt=&#34;Follow mjhutchinson&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/mhutch&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;7178&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;47.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Xamarin Technical PM, gamedev, silversmith, baker, ratmom. I make tools to help people create wonderful things.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/mono/monodevelop&#34;&gt;monodevelop&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;C#&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;5075&lt;/strong&gt;&lt;span&gt; Commits by @mhutch&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1620&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;206&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;679&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;MonoDevelop is a cross platform IDE mostly aimed at Mono/.NET developers&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;43. Corinna Vinschen&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Corinna Vinschen&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;https://avatars2.githubusercontent.com/u/7604664?v=3&amp;s=460&#34;&gt;&lt;span class=&#34;location&#34;&gt;Working at RedHat&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button hide&#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=&#34; target=&#34;_blank&#34; alt=&#34;Follow &#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button hide&#34; href=&#34;&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;12492&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;44.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Lead since mid-2014 on Cygwin at RedHat&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/mirror/newlib-cygwin&#34;&gt;newlib-cygwin&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;C&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;5235&lt;/strong&gt;&lt;span&gt; Commits by @&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;8&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Cygwin newlib mirror &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;44. Sarah Allen&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/ultrasaurus&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Sarah Allen&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/451707693577682945/6MKmBXjK_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in San Francisco, CA working at 18F&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=ultrasaurus&#34; target=&#34;_blank&#34; alt=&#34;Follow ultrasaurus&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/ultrasaurus&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2095&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;43.7&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;I write code, connect pixels and speak truth to make change. @bridgefoundry @mightyverse @18F&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/18F/midas&#34;&gt;openopps-platform&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;356&lt;/strong&gt;&lt;span&gt; Commits by @ultrasaurus&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;198&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;47&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;116&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Open Opportunities open source platform&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;45. Marian Beermann&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/enkore&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Marian Beermann&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/no-avatar.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button hide&#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=&#34; target=&#34;_blank&#34; alt=&#34;Follow &#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/enkore&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1184&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;43.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/enkore/i3pystatus&#34;&gt;i3pystatus&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;765&lt;/strong&gt;&lt;span&gt; Commits by @enkore&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;229&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;27&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;123&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A complete replacement for i3status&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;46. Carol (Nichols || Goulding)&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/carols10cents&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Carol (Nichols || Goulding)&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/446291681252364288/_okxMUY1_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Pittsburgh working at Integer 32&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=Carols10cents&#34; target=&#34;_blank&#34; alt=&#34;Follow Carols10cents&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/carols10cents&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2871&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;43.2&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Rust developer. Pittsburgh, tech, music, sports, home improvement. I&#39;m a maker, connector, hugger. All my mistakes/they brought me to you.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/hotsh/rstat.us&#34;&gt;rstat.us&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Ruby&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;508&lt;/strong&gt;&lt;span&gt; Commits by @carols10cents&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;747&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;44&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;225&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Simple microblogging network based on the ostatus protocol.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;47. Vanessa Sochat&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/vsoch&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Vanessa Sochat&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/1033615710/vsoch_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Stanford, CA working at Stanford University&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=vsoch&#34; target=&#34;_blank&#34; alt=&#34;Follow vsoch&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/vsoch&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3344&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;42.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;PhD student at Standord in Biomedical Informatics&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/expfactory/expfactory-docker&#34;&gt;expfactory-docker&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;231&lt;/strong&gt;&lt;span&gt; Commits by @vsoch&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;container for deploying behavioral psychology experiments&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;48. Kristina Chodorow&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/kchodorow&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Kristina Chodorow&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/362414023/n809676_30991415_5620_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in New York City working at Google&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=kchodorow&#34; target=&#34;_blank&#34; alt=&#34;Follow kchodorow&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/kchodorow&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3186&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;41.7&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Software engineer at Google working on @bazelbuild, author of several O&#39;Reilly books on MongoDB.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/mongodb/mongo&#34;&gt;mongo&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;C++&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;597&lt;/strong&gt;&lt;span&gt; Commits by @kchodorow&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9300&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;959&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2618&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;The Mongo Database&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;49. Lisa Passing&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/lislis&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Lisa Passing&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/lisa-passing.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Berlin, Germany working at Travis CI&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button hide&#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=&#34; target=&#34;_blank&#34; alt=&#34;Follow &#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/lislis&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2102&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;39.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Open source and video game enthusiast, RailsGirls and ClojureBridge supporter. I actually do love CSS.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/travis-ci/travis-web&#34;&gt;travis-web&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;CSS&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;964&lt;/strong&gt;&lt;span&gt; Commits by @lislis&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;334&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;36&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;150&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;The Ember web client for Travis CI&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;50. Alena Prokharchyk&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/alena1108&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Alena Prokharchyk&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/526072719087910913/5mpnIcdL_normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Mountain View, California working at Rancher Labs&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=lemonjet&#34; target=&#34;_blank&#34; alt=&#34;Follow lemonjet&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/alena1108&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;6425&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;38.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Software Engineer @Rancher_Labs&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/apache/cloudstack&#34;&gt;cloudstack&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Java&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2142&lt;/strong&gt;&lt;span&gt; Commits by @alena1108&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;374&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;87&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;487&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Mirror of Apache Cloudstack&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;51. Katerina Marchán&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/zkat&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Katerina Marchán&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/726562339319767041/EjdWYRZm_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Oakland, CA working at NPM&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=maybekatz&#34; target=&#34;_blank&#34; alt=&#34;Follow maybekatz&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/zkat&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;6318&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;37.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Green-haired digital dryad. Boricua. Cook. Game dev. PLT nerd. npm CLI team. Queer/ace/gq.  時々日本語で書ける/hablo español/falo um pouco de BR  https://t.co/ucZRAWkG2S&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/zkat/sheeple&#34;&gt;sheeple&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Common Lisp&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1227&lt;/strong&gt;&lt;span&gt; Commits by @zkat&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;51&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Cheeky prototypes for Common Lisp&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;52. Abigail Cabunoc Mayes&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/acabunoc&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Abigail Cabunoc Mayes&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/549828293654876160/tHuO1vnZ_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Toronto, Canada working at Mozilla&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=abbycabs&#34; target=&#34;_blank&#34; alt=&#34;Follow abbycabs&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/acabunoc&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;4279&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;36.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Lead developer, Mozilla Science Lab (@MozillaScience) (web + science = ♥) alum:@OICR_news @wormbase @uwaterloo // Fully known &amp; truly loved&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/mozillascience/PaperBadger&#34;&gt;PaperBadger&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;202&lt;/strong&gt;&lt;span&gt; Commits by @acabunoc&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;65&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;23&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;36&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Issuing badges to credit authors for their work on academic papers &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;53. Aswini Sridhar&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/ashumeow&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Aswini Sridhar&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/447828615338549248/qCMt0tXw_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Somewhere else still in Earth working at MepServe&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=ashumeow&#34; target=&#34;_blank&#34; alt=&#34;Follow ashumeow&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/ashumeow&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;5027&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;36.7&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;A Geek who isn&#39;t nerdy but an introvert who is workaholic &amp; rarely, a gamer. Loves to scribble, break &amp; code! Music made her love Signals. Books are her buddies&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/Geek-Research-Lab/MeowJS&#34;&gt;MeowJS&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1148&lt;/strong&gt;&lt;span&gt; Commits by @ashumeow&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A simple fast JavaScript Library&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;54. Karissa McKelvey&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/karissa&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Karissa McKelvey&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/724943710908256256/cKJ3qP7H_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Oakland, CA working at US Open Data&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=okdistribute&#34; target=&#34;_blank&#34; alt=&#34;Follow okdistribute&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/karissa&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;4113&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;36.6&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Mad science with @dat_project during the day, trumpet at night&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/maxogden/dat&#34;&gt;dat&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;390&lt;/strong&gt;&lt;span&gt; Commits by @karissa&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4374&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;286&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;281&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;:floppy_disk: open source peer to peer data sharing&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;55. Jessica B. Hamrick&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/jhamrick&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Jessica B. Hamrick&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/2907249863/bb82aadc2644b9e044f5d04dfd910b9b_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Berkeley, CA working at UC Berkeley&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=jhamrick&#34; target=&#34;_blank&#34; alt=&#34;Follow jhamrick&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/jhamrick&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;5259&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;34.0&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Bayesian, pythonista, cognitive scientist, feminist. IPython and Jupyter, too.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/jupyter/nbgrader&#34;&gt;nbgrader&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;HTML&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;213&lt;/strong&gt;&lt;span&gt; Commits by @jhamrick&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;161&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;15&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;43&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A system for assigning and grading notebooks&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;56. Marina Glancy&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/marinaglancy&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Marina Glancy&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/461503093855637504/PT9t9q-F_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Perth, Australia working at Moodle&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=marinaglancy&#34; target=&#34;_blank&#34; alt=&#34;Follow marinaglancy&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/marinaglancy&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2252&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;32.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Development Process Manager at Moodle&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/moodle/moodle&#34;&gt;moodle&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;PHP&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1014&lt;/strong&gt;&lt;span&gt; Commits by @marinaglancy&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1418&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;264&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2335&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Moodle - the world&#39;s open source learning platform&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;57. Alison Gianotto&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/snipe&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Alison Gianotto&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/545415835675033600/gDuSi44o_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in NYC expat in San Diego, CA working at Grokability&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=snipeyhead&#34; target=&#34;_blank&#34; alt=&#34;Follow snipeyhead&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/snipe&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2945&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;31.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Hacker, co-founder/CTO @MassMosaic, creator Snipe-IT, CEO of Grokability, open sourcerer, author, speaker, devops, infosec, atheist, chaotic neutral, ENTP, NSFW&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/snipe/snipe-it&#34;&gt;snipe-it&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;PHP&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2400&lt;/strong&gt;&lt;span&gt; Commits by @snipe&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;751&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;123&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;366&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A free open source IT asset/license management system built in PHP on Laravel 4.2 and Bootstrap 3. &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;58. Evadne Wu&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/evadne&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Evadne Wu&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/2246294748/6603BCF2-2CDC-45B8-981C-FFA56AEB7329_normal&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in SYD / HND / YVR / LHR working at Faria Systems&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=evadne&#34; target=&#34;_blank&#34; alt=&#34;Follow evadne&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/evadne&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;7394&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;30.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;HCI &amp; Software Architecture / Visa Collector / Open Source Contributor / International Women of Mystery&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/waveface/Partio-iOS&#34;&gt;Partio-iOS&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Objective-C&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;4455&lt;/strong&gt;&lt;span&gt; Commits by @evadne&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Partio is a Latin verb meaning &#34;to share&#34;, which is exactly what we are going to do&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;59. Erin Braswell&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/erinspace&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Erin Braswell&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/3262809538/3724f2d31e8ae55d0b89e2f7cef5f95f_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Charlottesville, VA working at Center for Open Science&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=erinbspace&#34; target=&#34;_blank&#34; alt=&#34;Follow erinbspace&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/erinspace&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;5168&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;30.2&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Lover of all things astronomy, science and computers; professional wrestling enthusiast&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/fabianvf/scrapi&#34;&gt;scrapi&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1926&lt;/strong&gt;&lt;span&gt; Commits by @erinspace&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A data processing pipeline that schedules and runs content harvesters, normalizes their data, and outputs that normalized data to a variety of output streams. This is part of the SHARE project, and will be used to create a free and open dataset of research (meta)data. Data collected can be explored at https://osf.io/share/, and viewed at https://osf.io/api/v1/share/search/. Developer docs can be viewed at https://osf.io/wur56/wiki&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;60. Katharine Berry&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/Katharine&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Katharine Berry&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/3630087303/66bcb76a9ce7da35ab4d5ff13e3f2716_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Redwood City, CA working at Pebble Technology&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=KatharineBerry&#34; target=&#34;_blank&#34; alt=&#34;Follow KatharineBerry&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/Katharine&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2669&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;29.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Developer Tooling Lead and Sparkly Code Princess at @Pebble.

Almost certainly insane.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/pebble/cloudpebble&#34;&gt;cloudpebble&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1097&lt;/strong&gt;&lt;span&gt; Commits by @Katharine&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;145&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;64&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;33&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;CloudPebble source. Here be dragons.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;61. Joanna Rutkowska&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/rootkovska&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Joanna Rutkowska&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/498767272744202243/szRTjdOX_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Warsaw working at Invisible Things Lab &amp; QubesOS&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=rootkovska&#34; target=&#34;_blank&#34; alt=&#34;Follow rootkovska&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/rootkovska&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;5618&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;24.9&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Founder of Invisible Things Lab and @QubesOS&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/QubesOS/qubes-core-admin&#34;&gt;qubes-core-admin&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;497&lt;/strong&gt;&lt;span&gt; Commits by @rootkovska&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;15&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;22&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Qubes component: core-admin&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;62. Melissa Linkert&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/melissalinkert&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Melissa Linkert&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/melissa-linkert.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Working at Glencoe Software&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=melissa_linkert&#34; target=&#34;_blank&#34; alt=&#34;Follow melissa_linkert&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/melissalinkert&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;13534&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;24.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Interested in the Open Microscopy Environment&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/openmicroscopy/bioformats&#34;&gt;bioformats&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Java&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;6759&lt;/strong&gt;&lt;span&gt; Commits by @melissalinkert&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;101&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;13&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;129&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Bio-Formats is a Java library for reading and writing data in life sciences image file formats. It is developed by the  Open Microscopy Environment (particularly  UW-Madison LOCI and  Glencoe Software). Bio-Formats is released under the  GNU General Public License (GPL); commercial licenses are available from  Glencoe Software. &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;63. Corinne Krych&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/corinnekrych&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Corinne Krych&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/1804433301/corinne_1__normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in French Riviera working at Red Hat&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=corinnekrych&#34; target=&#34;_blank&#34; alt=&#34;Follow corinnekrych&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/corinnekrych&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2743&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;23.5&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Mobile - HTML5 - iOS - AeroGear - RHMAP Client SDK tech lead - Red Hat&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/aerogear/aerogear-ios-cookbook&#34;&gt;aerogear-ios-cookbook&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Swift&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;264&lt;/strong&gt;&lt;span&gt; Commits by @corinnekrych&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;14&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;26&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;18&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;The AeroGear iOS cookbook is a list of recipes to quick start your iOS AeroGear experience. Each recipe is a complete iOS app.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;64. Rebecca Sutton Koeser&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/rlskoeser&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Rebecca Sutton Koeser&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/378800000211609542/3ebe6b1a1fe4c57741c55cfa74cb7366_normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Atlanta, Georgia, USA working at Emory University Libraries&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=suttonkoeser&#34; target=&#34;_blank&#34; alt=&#34;Follow suttonkoeser&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/rlskoeser&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;6425&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;23.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Software Engineer, PhD in English Literature; digital libraries/digital humanities.  Python programmer, reader, gamer, gadget girl, mother.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/emory-libraries/readux&#34;&gt;readux&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;792&lt;/strong&gt;&lt;span&gt; Commits by @rlskoeser&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Django web application to display, annotate, and export digitized books in a Fedora Commons repository&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;65. Melanie Warrick&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/nyghtowl&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Melanie Warrick&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/3649874017/b1bd533fab6633b705c7a583cba4f07a_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in SF working at Skymind.io&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=nyghtowl&#34; target=&#34;_blank&#34; alt=&#34;Follow nyghtowl&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/nyghtowl&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;4886&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;23.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Deep Learning Engineer at Skymind. I want to make tech sapient.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/deeplearning4j/nd4j&#34;&gt;nd4j&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Java&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;58&lt;/strong&gt;&lt;span&gt; Commits by @nyghtowl&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;390&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;60&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;189&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Fast, Scientific and Numerical Computing for the JVM (NDArrays)&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;66. Louise Crow&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/crowbot&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Louise Crow&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/19826292/450870060_e593f305fd_s_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in London (Peckham) working at mySociety&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=crowbot&#34; target=&#34;_blank&#34; alt=&#34;Follow crowbot&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/crowbot&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;8317&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;23.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;developer for @mySociety, working on Alaveteli, the FOI software behind @WhatDoTheyKnow. Live in Peckham. Personal account.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/mysociety/alaveteli&#34;&gt;alaveteli&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Ruby&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2625&lt;/strong&gt;&lt;span&gt; Commits by @crowbot&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;170&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;34&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;110&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Provide a Freedom of Information request system for your jurisdiction&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;67. Lilia Kai&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/liliakai&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Lilia Kai&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/116727166/me_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Open Whisper Systems working at Open WhisperSystems&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=liliakai&#34; target=&#34;_blank&#34; alt=&#34;Follow liliakai&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/liliakai&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2048&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;23.0&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;ləˈlē-ə ˈkaɪ&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/WhisperSystems/TextSecure-Browser&#34;&gt;Signal-Desktop&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1502&lt;/strong&gt;&lt;span&gt; Commits by @liliakai&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1592&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;179&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;227&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Signal Private Messenger for the Desktop&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;68. C J Silverio&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/ceejbot&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;C J Silverio&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;https://pbs.twimg.com/profile_images/631253658743603200/XeO_3PC7_400x400.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Menlo Park, CA working at NPM&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=ceejbot&#34; target=&#34;_blank&#34; alt=&#34;Follow ceejbot&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/ceejbot&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2698&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;22.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Ceej aka ceejbot. THE NPM SIEGE BOT. Innovative thought admiral-ship in cat-related tweeting.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/ceejbot/polyclay&#34;&gt;polyclay&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;171&lt;/strong&gt;&lt;span&gt; Commits by @ceejbot&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;a schema-enforcing model class for node.js, with optional key-value store persistence&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;69. Amanda Shih&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/pandafulmanda&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Amanda Shih&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/546906721554145280/6zxoznyM_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Houstan, Texas working at OpenStax&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=pandafulmanda&#34; target=&#34;_blank&#34; alt=&#34;Follow pandafulmanda&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/pandafulmanda&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2743&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;21.2&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/openstax/tutor-js&#34;&gt;tutor-js&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;CoffeeScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1097&lt;/strong&gt;&lt;span&gt; Commits by @pandafulmanda&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;30&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;:mortar_board: Javascript frontend for openstax tutor&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;70. Jana Beck&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/jebeck&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Jana Beck&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/729810331434913793/JpOmuQch_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Bay Area, CA working at Tidepool&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=ipancreas&#34; target=&#34;_blank&#34; alt=&#34;Follow ipancreas&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/jebeck&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;4220&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;20.6&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;PWD (type 1). Avid QuantifiedSelfer with interests in data visualization, statistics, gamification. Coffee snob. (Slow) runner. Bike commuter.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/tidepool-org/tideline&#34;&gt;tideline&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1624&lt;/strong&gt;&lt;span&gt; Commits by @jebeck&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;25&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;29&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;11&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Library for Tidepool&#39;s timeline-style diabetes data visualization(s) used in Blip&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;71. Danielle Madeley&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/danni&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Danielle Madeley&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/378800000644838767/fe1075e8ef820187f9fc301a185537bc_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Melbourne, Australia working at Squareweave&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=dannipenguin&#34; target=&#34;_blank&#34; alt=&#34;Follow dannipenguin&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/danni&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2133&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;20.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Crosslegged on the front lawn. She&#39;s had a bad pill.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/GNOME/empathy&#34;&gt;empathy&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;C&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;366&lt;/strong&gt;&lt;span&gt; Commits by @danni&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;23&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;16&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Empathy IM Client&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;72. Mary Rose Cook&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/maryrosecook&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Mary Rose Cook&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/513365278135025664/dQ8Zo9FG_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in London, England&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=maryrosecook&#34; target=&#34;_blank&#34; alt=&#34;Follow maryrosecook&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/maryrosecook&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;5272&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;19.6&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;I’m making Code Lauren (game programming for beginners). I made Gitlet, Isla, Empty Black and Pistol Slut.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/maryrosecook/gitlet&#34;&gt;gitlet&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;952&lt;/strong&gt;&lt;span&gt; Commits by @maryrosecook&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1325&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;42&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;82&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Git implemented in JavaScript&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;73. Alice Zoë Bevan-McGregor&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/amcgregor&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Alice Zoë Bevan-McGregor&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/alice-zoe-bevan-mcgregor.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Montreal, Canada working at Illico Hodes&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=GothAlice&#34; target=&#34;_blank&#34; alt=&#34;Follow GothAlice&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/amcgregor&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2738&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;19.5&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Currently leading a small international development team working on a WebCore (Python) job distribution and analytics platform powered by MongoDB.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/marrow/WebCore&#34;&gt;WebCore&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;328&lt;/strong&gt;&lt;span&gt; Commits by @amcgregor&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;52&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;WebCore, the super tiny and blazingly fast modular Python web nanoframework. We offer a dependency graphing extension system, MVC separation, reusable namespaces, and universal URL dispatch protocol with tight WebOb integration and natural Python semantics in a few hundred lines of code.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;74. Isis Agora Lovecruft&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/isislovecruft&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Isis Agora Lovecruft&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/2726879247/c650a4ac75330afbacee3fc52d56a29b_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in 4096R/A3ADB67A2CDB8B35 working at The Tor Project&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=isislovecruft&#34; target=&#34;_blank&#34; alt=&#34;Follow isislovecruft&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/isislovecruft&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;7040&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;19.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Anarchist; hacker; physicist. Core developer @torproject: #Tor bridges, #censorship circumvention, sometimes Tor Browser. they/their. !آزادی بیان برای همه&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/isislovecruft/bridgedb&#34;&gt;bridgedb&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1834&lt;/strong&gt;&lt;span&gt; Commits by @isislovecruft&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Personal development fork of https://git.torproject.org/bridgedb.git. Don&#39;t clone this copy of the repo, or I&#39;ll happily rebase branches out from under you. Clone https://git.torproject.org/user/isis/bridgedb.git instead.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;75. Sarah Bird&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/birdsarah&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Sarah Bird&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/sarah-bird.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Oakland, CA working at Continuum Analytics&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button hide&#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=&#34; target=&#34;_blank&#34; alt=&#34;Follow &#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/birdsarah&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2391&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;19.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Developing Bokeh - an open source data visualization library&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/bokeh/bokeh&#34;&gt;bokeh&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;341&lt;/strong&gt;&lt;span&gt; Commits by @birdsarah&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4223&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;276&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;878&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Interactive Web Plotting for Python&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;76. Maira Bello&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/mairatma&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Maira Bello&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/449184421522833408/vE97maMs_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Working at Liferay&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=mairatma&#34; target=&#34;_blank&#34; alt=&#34;Follow mairatma&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/mairatma&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2853&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;17.4&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/alloyui/core&#34;&gt;metal.js&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;451&lt;/strong&gt;&lt;span&gt; Commits by @mairatma&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;58&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;18&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;22&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Build UI components in a solid, flexible way&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;77. Heather Piwowar&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/hpiwowar&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Heather Piwowar&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;https://pbs.twimg.com/profile_images/519570521/heather_new_haircut_bigger.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Working at Impactstory&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=researchremix&#34; target=&#34;_blank&#34; alt=&#34;Follow researchremix&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/hpiwowar&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;4854&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;17.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;cofounder of @impactstory: learn the full impact of your research. Research passion: measuring data sharing and reuse. Adore cookies+cycling+reading+my fam.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/total-impact/total-impact-core&#34;&gt;total-impact-core&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1757&lt;/strong&gt;&lt;span&gt; Commits by @hpiwowar&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;54&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;12&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;An api and backend code to gather the impacts of diverse scholarly products online.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;78. Maria Grazia Alastra&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/MariagraziaAlastra&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Maria Grazia Alastra&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/maria-grazia-alastra.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button hide&#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=&#34; target=&#34;_blank&#34; alt=&#34;Follow &#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/MariagraziaAlastra&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2427&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;17.0&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Core contributor to the DuckDuckGo - Community Platform&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/duckduckgo/community-platform&#34;&gt;community-platform&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2067&lt;/strong&gt;&lt;span&gt; Commits by @MariagraziaAlastra&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;419&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;70&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;117&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;DuckDuckGo Community Platform&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;79. Nada Amin&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/namin&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Nada Amin&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/564694579543166976/lW7ec0h6_normal.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Geneva, Switzerland working at LAMP lab @ EPFL&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=nadamin&#34; target=&#34;_blank&#34; alt=&#34;Follow nadamin&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/namin&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;5618&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;16.0&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/TiarkRompf/minidot&#34;&gt;minidot&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Coq&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1785&lt;/strong&gt;&lt;span&gt; Commits by @namin&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;15&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Dependent Object Types (DOT), bottom up&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;80. Sarah Vessels&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/cheshire137&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Sarah Vessels&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/716116943913267200/fi6YRHKU_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Nashville, TN working at GitHub&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=cheshire137&#34; target=&#34;_blank&#34; alt=&#34;Follow cheshire137&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/cheshire137&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2553&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;16.0&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Tea drinker, gamer, developer at GitHub. Find me at https://t.co/KnsiOll0fP&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/moneypenny/blicblock-js&#34;&gt;blicblock-js&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;CSS&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;235&lt;/strong&gt;&lt;span&gt; Commits by @cheshire137&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A JavaScript implementation of the Blicblock game from The Sims 4.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;81. Olga Botvinnik&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/olgabot&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Olga Botvinnik&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/596720676276342784/HQWFRIVq_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in San Diego, CA working at UCSD&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=olgabot&#34; target=&#34;_blank&#34; alt=&#34;Follow olgabot&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/olgabot&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;4172&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;15.4&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;@MIT, @UCSC Alumna. PhD student in Bioinformatics @UCSanDiego. Data dula. Beware of opinions on: Python, open science, dataviz, yoga, fashion, Beyoncé.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/YeoLab/flotilla&#34;&gt;flotilla&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2010&lt;/strong&gt;&lt;span&gt; Commits by @olgabot&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;66&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;36&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;15&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Reproducible machine learning analysis of gene expression and alternative splicing data&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;82. Remi Taylor&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/remi&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Remi Taylor&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/remi-taylor.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Seattle working at Google&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=remilytaylor&#34; target=&#34;_blank&#34; alt=&#34;Follow remilytaylor&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/remi&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2780&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;15.3&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Developer Relations @ Google Cloud Rubyist, C#, open source hacker {opinions are my own}&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/GoogleCloudPlatform/getting-started-ruby&#34;&gt;getting-started-ruby&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Ruby&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;47&lt;/strong&gt;&lt;span&gt; Commits by @remi&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;27&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;24&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;13&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A tutorial for creating a complete application using Ruby on Google Cloud Platform&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;83. Flavia Missi&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/flaviamissi&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Flavia Missi&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/584492581012295681/EMEq3obC_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Malmö, Sweden working at Min Doktor&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=flaviamissi&#34; target=&#34;_blank&#34; alt=&#34;Follow flaviamissi&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/flaviamissi&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3019&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;15.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Passionate software developer, always seeking for new challenges. Eternal learner. Pythonist from heart, in love with Golang.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/tsuru/tsuru&#34;&gt;tsuru&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Go&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1195&lt;/strong&gt;&lt;span&gt; Commits by @flaviamissi&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1883&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;178&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;237&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Open source, extensible and Docker-based Platform as a Service (PaaS).&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;84. Christine Spang&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/spang&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Christine Spang&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/724720803980283904/VSN8D78k_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in OAK | SFO working at Nylas&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=spang&#34; target=&#34;_blank&#34; alt=&#34;Follow spang&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/spang&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2037&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;13.6&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;there&#39;s gotta be a better way | cofounder &amp; CTO @nylas | spang@nylas.com&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/nylas/sync-engine&#34;&gt;sync-engine&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;956&lt;/strong&gt;&lt;span&gt; Commits by @spang&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2931&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;153&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;254&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;:incoming_envelope: IMAP/SMTP sync system with modern APIs&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;85. Lindsay Young&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/LindsayYoung&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Lindsay Young&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/655085971164164096/Gou4wYy-_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in US working at 18F&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=not_young&#34; target=&#34;_blank&#34; alt=&#34;Follow not_young&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/LindsayYoung&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2509&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;12.4&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Political data nerd in DC. All opinions belong to strangers. Retweets = marriage proposals.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/18F/openFEC&#34;&gt;openFEC&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1142&lt;/strong&gt;&lt;span&gt; Commits by @LindsayYoung&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;148&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;32&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;39&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;The first RESTful API for the Federal Election Commission. We&#39;re aiming to make campaign finance more accessible for journalists, academics, developers, and other transparency seekers.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;86. Kylie McClain&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/somasis&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Kylie McClain&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/kylie-mcclain.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in North Carolina, USA&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button hide&#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=&#34; target=&#34;_blank&#34; alt=&#34;Follow &#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/somasis&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2675&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;12.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;My name is Kylie McClain, and I am a 17 year old woman. I have been using computers since I was about three years old, and using Linux since age seven.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/Somasis/beginning&#34;&gt;beginning&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Shell&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;338&lt;/strong&gt;&lt;span&gt; Commits by @somasis&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;22&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;an init system that isn&#39;t smarter than you&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;87. Laura DeCicco&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/ldecicco-USGS&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Laura DeCicco&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/637276761609277446/ynePZaMu_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Working at U.S. Geological Survey&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=deciccodonk&#34; target=&#34;_blank&#34; alt=&#34;Follow deciccodonk&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/ldecicco-USGS&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;4037&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;12.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/USGS-R/dataRetrieval&#34;&gt;dataRetrieval&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;R&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1139&lt;/strong&gt;&lt;span&gt; Commits by @ldecicco-USGS&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;37&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;20&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;21&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;This R package is designed to obtain its water quality sample data, streamflow data, and metadata directly from either the USGS  or EPA, as well as user-supplied text files.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;88. Anne Lyle&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/ens-ap5&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Anne Lyle&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/anne-lyle.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Working at Ensembl.org&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button hide&#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=&#34; target=&#34;_blank&#34; alt=&#34;Follow &#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/ens-ap5&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;8422&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;11.7&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/Ensembl/ensembl-webcode&#34;&gt;ensembl-webcode&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Perl&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;6708&lt;/strong&gt;&lt;span&gt; Commits by @ens-ap5&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;15&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;26&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;The code to run an Ensembl website&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;89. Kathryn Killebrew&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/flibbertigibbet&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Kathryn Killebrew&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/677341154237685760/4tnqkYU8_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Philadelphia, PA working at Azavea&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=banderkat&#34; target=&#34;_blank&#34; alt=&#34;Follow banderkat&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/flibbertigibbet&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2564&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;10.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Software developer and data wrangler.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/WorldBank-Transport/open-transit-indicators&#34;&gt;open-transit-indicators&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Scala&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;305&lt;/strong&gt;&lt;span&gt; Commits by @flibbertigibbet&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;23&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;21&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;14&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;An open-source tool to support transport agencies in planning and managing public transit systems&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;90. Franziska Hinkelmann&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/fhinkel&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/661485440751509505/ZnNN9qes_normal.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Munich, Germany working at Google&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=fhinkel&#34; target=&#34;_blank&#34; alt=&#34;Follow fhinkel&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/fhinkel&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3108&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;10.2&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Mathematician turned software engineer.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/fhinkel/InteractiveShell&#34;&gt;InteractiveShell&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;HTML&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1069&lt;/strong&gt;&lt;span&gt; Commits by @fhinkel&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;6&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Build web apps for interactive command-line tools&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;91. Angie Byron&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/webchick&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Angie Byron&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;http://pbs.twimg.com/profile_images/468968010976227328/vqMnCLG5_normal.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Vancouverish, BC working at Acquia&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=webchick&#34; target=&#34;_blank&#34; alt=&#34;Follow webchick&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/webchick&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;10379&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;10.1&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Herder of cats. @Drupal core committer. Director of Community Development for @Acquia. @OReillyMedia author. @DrupalAssoc. Mom. Lesbionic Ace. Nerd. Gamer.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/drupal/drupal&#34;&gt;drupal&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;PHP&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3106&lt;/strong&gt;&lt;span&gt; Commits by @webchick&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2233&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;370&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1074&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Verbatim mirror of the git.drupal.org repository for Drupal core. Changes will not be pulled, and merge requests will not be accepted, if you want to contribute, go to Drupal.org: &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;92. Rachel Mandelbaum&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/rmandelb&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Rachel Mandelbaum&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/rachel-mandelbaum.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Pittsburgh, Pennsylvania working at Carnegie Mellon University&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button hide&#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=&#34; target=&#34;_blank&#34; alt=&#34;Follow &#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/rmandelb&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;3099&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;10.0&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;My research interests are predominantly in the areas of observational cosmology and galaxy studies, with the goal of improving our understanding of dark energy, dark matter, and galaxy formation.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/GalSim-developers/GalSim&#34;&gt;GalSim&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2075&lt;/strong&gt;&lt;span&gt; Commits by @rmandelb&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;54&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;43&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;31&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;The modular galaxy image simulation toolkit&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;93. Ada Rose Edwards&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/AdaRoseEdwards&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Ada Rose Edwards&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;https://pbs.twimg.com/profile_images/592907703615418369/baa1Upgp_400x400.png&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in London, UK working at FT Labs&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=lady_ada_king&#34; target=&#34;_blank&#34; alt=&#34;Follow lady_ada_king&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/AdaRoseEdwards&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1753&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9.9&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;JS Dev, Photography and Muay Thai. Developer for the Financial Times. Tumbr: http://sonbr.tumblr.com  (nsfw)&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/AdaRoseEdwards/contrast-widget&#34;&gt;contrast-widget&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;32&lt;/strong&gt;&lt;span&gt; Commits by @AdaRoseEdwards&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;6&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Bookmarklet to analyse the contrast of test elements in a document&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;94. Lisa Ballard&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/basilleaf&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Lisa Ballard&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;https://pbs.twimg.com/profile_images/539202902825259008/FF3oahiv_400x400.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in San Francisco, CA working at NASA PDS Rings Node, SETI Institute&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=basilleaf&#34; target=&#34;_blank&#34; alt=&#34;Follow basilleaf&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/basilleaf&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1916&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9.9&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Web dev, hacker, space geek. Science, nature, wildlife, health, social justice. NASASocial Alum. Learning to scuba dive.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/basilleaf/spaceprob.es&#34;&gt;spaceprob.es&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;JavaScript&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;272&lt;/strong&gt;&lt;span&gt; Commits by @basilleaf&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Spaceprob.es catalogs the active human-made machines that freckle our solar system and dot our galaxy&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;95. Emma Strubell&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/strubell&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Emma Strubell&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;https://pbs.twimg.com/profile_images/553022864144601089/oliNrQGv_400x400.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Amherst, MA working at UMass Amherst&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=strubell&#34; target=&#34;_blank&#34; alt=&#34;Follow strubell&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/strubell&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1159&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9.9&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;I&#39;m a Ph.D. student at UMass Amherst working in the Information Extraction and Synthesis Laboratory with Professor Andrew McCallum.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/factorie/factorie&#34;&gt;factorie&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Scala&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;492&lt;/strong&gt;&lt;span&gt; Commits by @strubell&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;409&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;72&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;131&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;FACTORIE is a toolkit for deployable probabilistic modeling, implemented as a software library in Scala. It provides its users with a succinct language for creating relational factor graphs, estimating parameters and performing inference.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;96. Lisa Glendenning&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/lisaglendenning&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Lisa Glendenning&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;/post/100-awesome-women-in-the-open-source-community-you-should-know/lisa-glendenning.JPG&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Seattle, Washington working at University of Washington&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button hide&#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=&#34; target=&#34;_blank&#34; alt=&#34;Follow &#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/lisaglendenning&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1686&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9.9&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;I am a Ph.D. candidate advised by Thomas Anderson and Arvind Krishnamurthy at the University of Washington. My research focuses on building blocks for fault-tolerant distributed systems.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/lisaglendenning/zookeeper-lite&#34;&gt;zookeeper-lite&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Java&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;508&lt;/strong&gt;&lt;span&gt; Commits by @lisaglendenning&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A &#34;lite&#34; implementation of both the server and client ZooKeeper protocol.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;97. Jessica Ker&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/jessitron&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Jessica Ker&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;https://pbs.twimg.com/profile_images/728251919467057152/Z2uk49Ww_400x400.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in St. Louis, MO working at Stripe&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=jessitron&#34; target=&#34;_blank&#34; alt=&#34;Follow jessitron&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/jessitron&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1143&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Functional developer, speaker, mother, crazy nut. Stripe. Learning and growing. &lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/jessitron/bison&#34;&gt;bison&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Scala&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;76&lt;/strong&gt;&lt;span&gt; Commits by @jessitron&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;12&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;When Code Reacts to Data: demonstrating a dataflow programming style with scalaz-streams&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;98. Irene Knapp&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/IreneKnapp&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Irene Knapp&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;https://pbs.twimg.com/profile_images/514221735755792384/ZSDOK8FZ_400x400.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in California working at Google&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=ireneista&#34; target=&#34;_blank&#34; alt=&#34;Follow ireneista&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/IreneKnapp&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;2110&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9.8&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Smart, funny, occasionally sarcastic.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/IreneKnapp/modern-data&#34;&gt;modern-data&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;C&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;350&lt;/strong&gt;&lt;span&gt; Commits by @IreneKnapp&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;12&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A self-describing binary data format for dependently-typed object graphs.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;99. Anna Schneider&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/aschn&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Anna Schneider&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;https://pbs.twimg.com/profile_images/3441319763/8dc012f166c7626ab9354abdd13fc14b_400x400.jpeg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Bay Area, CA working at WattTime&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=windupanna&#34; target=&#34;_blank&#34; alt=&#34;Follow windupanna&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/aschn&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1830&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9.7&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Co-founder + CTO @wattTime, Climate Fellow @echoinggreen, Berkeley PhD, #ForbesUnder30. Thinking about Python, clean tech, inclusive STEM, tech for good.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/WattTime/pyiso&#34;&gt;pyiso&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;291&lt;/strong&gt;&lt;span&gt; Commits by @aschn&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;19&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;13&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;23&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;Python client libraries for ISO and other power grid data sources.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;

&lt;div style=&#34;height: 45px;&#34;&gt;&lt;h2&gt;100. Tara L Andrews&lt;/h2&gt;&lt;/div&gt;    
&lt;div id=&#34;user-card&#34;&gt;
  &lt;div class=&#34;github-card user-card&#34;&gt;
    &lt;div class=&#34;header&#34;&gt;
      &lt;a class=&#34;avatar&#34; href=&#34;https://github.com/tla&#34; target=&#34;_top&#34;&gt;&lt;strong&gt;Tara L Andrews&lt;/strong&gt;&lt;/a&gt;
      &lt;img src=&#34;https://pbs.twimg.com/profile_images/182707767/me_maarssen_400x400.jpg&#34;&gt;&lt;span class=&#34;location&#34;&gt;Based in Zürich, Switzerland working at University of Bern&lt;/span&gt;&lt;/span&gt;

      &lt;div class=&#34;custom-follow-button &#34;&gt;
        &lt;a href=&#34;https://twitter.com/intent/user?screen_name=tla&#34; target=&#34;_blank&#34; alt=&#34;Follow tla&#34;&gt;
          &lt;i class=&#34;btn-icon&#34;&gt;&lt;/i&gt;
          &lt;span class=&#34;btn-text&#34;&gt;Follow&lt;/span&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;a class=&#34;button &#34; href=&#34;https://github.com/tla&#34; target=&#34;_top&#34;&gt;
        &lt;span class=&#34;flaticon-circle&#34;&gt;&lt;/span&gt; Follow
        &lt;/a&gt;
    &lt;/div&gt;
    &lt;ul class=&#34;status&#34;&gt;
      &lt;li&gt;&lt;strong&gt;1444&lt;/strong&gt;&lt;span&gt; Total Commits&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;9.6&lt;/strong&gt;&lt;span&gt; PageRank&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;footer&#34;&gt;Byzantine historian, computer geek. Asst Prof of Digital Humanities, University of Bern. Long-distance cyclist and runner catching the triathlon bug.&lt;/div&gt;
    &lt;div class=&#34;repo_header&#34;&gt;&lt;a href=&#34;https://github.com/tla/stemmatology&#34;&gt;stemmatology&lt;/a&gt; &lt;span class=&#34;language&#34;&gt;Perl&lt;/span&gt; &lt;span class=&#34;featured_repo&#34;&gt;Featured Repo&lt;/span&gt;&lt;/div&gt;
    &lt;ul class=&#34;repo_stats&#34;&gt;
      &lt;li&gt;&lt;strong&gt;666&lt;/strong&gt;&lt;span&gt; Commits by @tla&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;span&gt; Stars&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;6&lt;/strong&gt;&lt;span&gt; Watchers&lt;/span&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;span&gt; Forks&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&#34;repo_footer&#34;&gt;A Perl library for modelling textual variation.&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;height: 5px&#34;&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Levenshtein distance, LCS, diff and blame</title>
      <link>/post/meetup-blame/</link>
      <pubDate>Mon, 15 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/meetup-blame/</guid>
      <description>

&lt;p&gt;There are some interesting &lt;a href=&#34;http://www.meetup.com&#34;&gt;meetups&lt;/a&gt; going on in Madrid,
and as part of the engineering team at &lt;strong&gt;source{d}&lt;/strong&gt;, we often attend and
organize some of them; it is a nice way to blow off some steam after work,
learn some cool new things and meet quite interesting people.&lt;/p&gt;

&lt;p&gt;A few weeks ago, at a &lt;a href=&#34;http://www.meetup.com/Papers-We-Love-Madrid/&#34;&gt;Papers we love
Madrid&lt;/a&gt; meetup, I had the chance
to give a talk about how &lt;code&gt;git blame&lt;/code&gt; works.*&lt;/p&gt;

&lt;p&gt;Blaming a file in git is an operation that identifies who modified each of the
lines in a file, along with the modification date and other details.  This
comes in handy when you want to know which member of your team wrote a particular piece of
code or who is to blame for a bug }:-).&lt;/p&gt;

&lt;p&gt;For example, let&amp;rsquo;s blame &lt;code&gt;src/bufio/bufio.go&lt;/code&gt; from the standard Go Distribution:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ git blame src/bufio/bufio.go
[...]
64776da4 src/pkg/bufio/bufio.go (Rob Pike          2011-12-13 15:07:17 -0800  40) const minReadBufferSize = 16
4ffc7992 src/pkg/bufio/bufio.go (Rui Ueyama        2014-03-24 11:48:34 -0700  41) const maxConsecutiveEmptyReads = 100
[...]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;According to this &lt;code&gt;git blame&lt;/code&gt; output, it seems that the declaration of the
constant &lt;code&gt;minReadBufferSize&lt;/code&gt; was last modified (or created) by Rob Pike in 2011
while the last version of &lt;code&gt;maxConsecutiveEmptyReads&lt;/code&gt; is attributed to Rui Ueyama in
2014.&lt;/p&gt;

&lt;p&gt;The current &lt;code&gt;git blame&lt;/code&gt; implementation is a highly optimized and quite
powerful piece of code, but its core functionality is easy to understand
once you grasp a few concepts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Levenshtein Distance&lt;/li&gt;
&lt;li&gt;Longest Common Subsequence Problem&lt;/li&gt;
&lt;li&gt;Diff&lt;/li&gt;
&lt;li&gt;Tracking Lines Across File Revisions&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The goal of the talk was to understand these concepts and some of their more
naive implementations.  This blog post is not going to be a full transcription
of my talk, but allow me to tease you with a brief introduction to these
interesting topics:&lt;/p&gt;

&lt;h2 id=&#34;1-levenshtein-distance:96a8f5e83b4c340209192177cad4778a&#34;&gt;1. Levenshtein Distance&lt;/h2&gt;

&lt;p&gt;The Levenshtein distance is a popular measure of how (dis)similar two strings
are.  More precisely, it is the minimum number of &lt;em&gt;edits&lt;/em&gt; you have to perform on
one of them to turn it into the other, where by edits I mean: adding, removing
or changing a single character.&lt;/p&gt;

&lt;p&gt;As expected, the Levenshtein distance of two identical strings is 0:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;a := &amp;quot;pain&amp;quot;
Levenshtein(a, a) // is 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For strings that differ only in one &lt;em&gt;edit&lt;/em&gt;, the Levenshtein distance should be
1:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;a := &amp;quot;pain&amp;quot;
b := &amp;quot;plain&amp;quot;
Levenshtein(a, b)  // is 1, just insert &#39;l&#39; at a[1]

c := &amp;quot;pan&amp;quot;
Levenshtein(a, c)  // is 1, just remove &#39;i&#39; from a[2]

d := &amp;quot;pawn&amp;quot;
Levenshtein(a, d)  // is 1, just change &#39;i&#39; to &#39;w&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When the strings differ in more than one &lt;em&gt;edit&lt;/em&gt;, calculating the
Levenshtein distance is no longer trivial since there are many different
combinations of edits that will allow you to turn one string into another,
and only some of them will have the minimum number of edits:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;e := &amp;quot;Lost&amp;quot;
f := &amp;quot;plot&amp;quot;
Levenshtein(e, f)  // is 3, here is one possible
                   //       combination of edits:
                   //   - change &#39;L&#39; at e[0] to &#39;p&#39;
                   //   - insert &#39;l&#39; at e[1]
                   //   - remove &#39;s&#39; from e[3]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Calculating the Levenshtein distance of two strings is a fun and interesting
&lt;a href=&#34;https://www.youtube.com/watch?v=wXQLil_SGCI&#34;&gt;programming workout&lt;/a&gt;. In the case
that you get stuck on it, you will find a recursive solution, as well as a dynamic
programming one, in the &lt;a href=&#34;https://drive.google.com/file/d/0B05KyBUlYY2TV2N6X2x6ZWhBXzQ/view?usp=sharing&#34;&gt;slides from my
talk&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;2-longest-common-subsequence-problem:96a8f5e83b4c340209192177cad4778a&#34;&gt;2. Longest Common Subsequence Problem&lt;/h2&gt;

&lt;p&gt;The Longest Common Subsequence Problem (LCS for shorts), is a classic computer
science problem, consisting in finding the longest subsequence common to all
sequences in a given set.&lt;/p&gt;

&lt;p&gt;For example, the LCS of the strings &lt;code&gt;&amp;quot;pain&amp;quot;&lt;/code&gt; and &lt;code&gt;&amp;quot;plans&amp;quot;&lt;/code&gt; is &lt;code&gt;&amp;quot;pan&amp;quot;&lt;/code&gt;, as it
has all the characters common to both strings, without messing up the character
ordering.&lt;/p&gt;

&lt;p&gt;Solving this problem for longer strings is not trivial, though:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Go&#34;&gt;a := &amp;quot;AAACCGTGAGTTATTCGTTCTAGAA&amp;quot;
b := &amp;quot;CACCCCTAAGGTACCTTTGGTTC&amp;quot;
LCS(a, b) // is &amp;quot;ACCTGGTTTTGTTC&amp;quot; or &amp;quot;ACCTAGTATTGTTC&amp;quot; ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Knowing the LCS of two strings is equivalent to knowing the actual set of
edits you need to perform to turn one into the other. You will find an
intuitive explanation of this important equivalence in the &lt;a href=&#34;https://drive.google.com/file/d/0B05KyBUlYY2TV2N6X2x6ZWhBXzQ/view?usp=sharing&#34;&gt;slides from the
talk&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;3-diff:96a8f5e83b4c340209192177cad4778a&#34;&gt;3. Diff&lt;/h2&gt;

&lt;p&gt;The Diff Algorithm is the basis of &lt;code&gt;git blame&lt;/code&gt; and a venerable piece of
code that has been laying around since 1970.&lt;/p&gt;

&lt;p&gt;Given two files, the &lt;code&gt;diff&lt;/code&gt; command will return the &lt;em&gt;line edits&lt;/em&gt; you have to
perform to one of them, to turn it into the other. For example: given the files
&lt;code&gt;a.txt&lt;/code&gt; and &lt;code&gt;b.txt&lt;/code&gt;&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ cat a.txt
aaa
aaaaa
aa

$ cat b.txt
bb
bbb
aaa
AAAAA
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;diff&lt;/code&gt; of both files would be:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ diff a.txt b.txt
0a1,2
&amp;gt; bb
&amp;gt; bbb
2,3c4
&amp;lt; aaaaa
&amp;lt; aa
---
&amp;gt; AAAAA
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you probably already know, this means:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;0a1,2&lt;/code&gt;: add at line 0 (at the beginning) of file &lt;code&gt;a.txt&lt;/code&gt;, the lines 1 and 2 from file &lt;code&gt;b.txt&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;2,3c4&lt;/code&gt;: substitute lines 2 and 3 of file &lt;code&gt;a.txt&lt;/code&gt; with line number 4 of file &lt;code&gt;b.txt&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The current version of &lt;code&gt;diff&lt;/code&gt; is highly optimized, but, at its core, it
can be easily understood as some hashing (turning lines into &lt;em&gt;equivalent
characters&lt;/em&gt;), and an LCS solver.  You will find more details about this in the
&lt;a href=&#34;https://drive.google.com/file/d/0B05KyBUlYY2TV2N6X2x6ZWhBXzQ/view?usp=sharing&#34;&gt;slides from the talk&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;4-tracking-lines-across-file-revisions:96a8f5e83b4c340209192177cad4778a&#34;&gt;4. Tracking Lines Across File Revisions&lt;/h2&gt;

&lt;p&gt;At the core of the &lt;code&gt;git blame&lt;/code&gt; algorithm is the problem of tracking lines
across file revisions; knowing at which revision each particular line
was added or modified.&lt;/p&gt;

&lt;p&gt;This problem is usually solved by creating a graph where:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;vertexes represent each line of a file, for all revisions of the file&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;edges represent the same line across diferent revisions of the file&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the &lt;a href=&#34;https://drive.google.com/file/d/0B05KyBUlYY2TV2N6X2x6ZWhBXzQ/view?usp=sharing&#34;&gt;slides from the talk&lt;/a&gt; you can find examples of
forward and backward versions of a graph traversal algorithm to solve the
blaming problem, from the 2006 paper &lt;a href=&#34;https://users.soe.ucsc.edu/~ejw/papers/MSR26s-zimmermann.pdf&#34;&gt;Mining Version Archives for Co-changed
Lines&lt;/a&gt;
(Zimmermann et al.).&lt;/p&gt;

&lt;p&gt;*We would like to thank &lt;a href=&#34;https://www.shuttlecloud.com/&#34;&gt;ShuttleCloud&lt;/a&gt; for
hosting and organizing the event (and for the beers!).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First ReactMad meetup: Time travelling with React and Redux</title>
      <link>/post/reactmad-redux/</link>
      <pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/reactmad-redux/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;/post/reactmad-redux/back.jpg&#34; alt=&#34;View from the back of the room&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Last month we did the first Meetup of the ReactMad, the Madrid React user group. The topic was &lt;em&gt;&amp;ldquo;Time travelling with React and Redux&amp;rdquo;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The talk was structured in four parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Introduction to Redux&lt;/strong&gt; where the basic concepts of Redux were explained.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrate Redux with React&lt;/strong&gt; using the &lt;code&gt;react-redux&lt;/code&gt; npm package and how to manage the separation of concerns in the components.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Setup the Redux Dev Tools&lt;/strong&gt; to be able to use time travel in debugging.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Example&lt;/strong&gt; of a very basic twitter timeline built with these technologies, including a demonstration of how the time travelling works with them.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;introduction-to-redux:8fac3e3799d4f2c4634a1475f727c0a9&#34;&gt;Introduction to Redux&lt;/h2&gt;

&lt;p&gt;The first part of the talk was about the three principles of Redux and its three kind of components.&lt;/p&gt;

&lt;p&gt;The three basic principles Redux is built upon are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There is a single source if truth (all the state in one tree object inside a single store).&lt;/li&gt;
&lt;li&gt;State is always read-only.&lt;/li&gt;
&lt;li&gt;Mutations are written as pure functions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then we went one by one, describing and showing examples of the three types of components you can have in a Redux application&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Actions&lt;/strong&gt; that are just plain javascript object describing that something happened. We also mentioned the &lt;em&gt;action creator pattern&lt;/em&gt; in redux to reduce boilerplate.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reducers&lt;/strong&gt; which are where all the logic of the state happens. They are pure functions that given a previous status and an action they return a new status after applying the mentioned action.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Store&lt;/strong&gt; is where all the state is contained. It has the methods to subscribe to the state, get it and dispatch an action to it. Remember that because of the principle of &lt;em&gt;single source of truth&lt;/em&gt; we can &lt;strong&gt;only have one store&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Surprisingly, that is pretty much all you have to know about Redux because it has a really minimal and well designed API that &lt;strong&gt;makes developing very readable and testable code a delightful experience&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;integrate-redux-with-react:8fac3e3799d4f2c4634a1475f727c0a9&#34;&gt;Integrate Redux with React&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Integrating Redux with React is a very easy task&lt;/strong&gt;. Redux is not coupled to any framework, which means you can use it with any framework you want. With React is even easier because we have the &lt;code&gt;react-redux&lt;/code&gt; npm package that provides a simple way of integrating both libraries.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;react-redux&lt;/code&gt; has two functions that will make our life easier&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Provider&lt;/code&gt;, a component that must wrap your root component in order to pass the store down to all the component hierarchy.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;connect&lt;/code&gt;, which connects a component and subscribes it to updates made to a part —or the whole— state.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When working with React and Redux you have to think very well the separation of concerns in your application. Having a lot of components connected to the state may decrease the performance of the app. It&amp;rsquo;s even very redundant because the data is in another place. For that, we can divide our components in two types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Smart components&lt;/strong&gt; that are connected to the state and hold the logic. By holding all the logic here is easier to debug and test.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dumb components&lt;/strong&gt; that only render whatever data their parent passed to them and execute actions also passed to them. That way, we have components that are like pure functions, easily testable and logic-less.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;redux-devtools:8fac3e3799d4f2c4634a1475f727c0a9&#34;&gt;Redux DevTools&lt;/h2&gt;

&lt;p&gt;With just a few additions &lt;strong&gt;we can integrate the redux-devtools and add a panel with the stream of states and actions that happened through time&lt;/strong&gt;. This panel gives us the ability to go back and forth in time through that stream. All we have to do is enhance the store with a middleware and render the debug panel in our app using functions and components from the &lt;code&gt;redux-devtools&lt;/code&gt; npm package.&lt;/p&gt;

&lt;h2 id=&#34;the-event:8fac3e3799d4f2c4634a1475f727c0a9&#34;&gt;The event&lt;/h2&gt;

&lt;p&gt;Though there weren&amp;rsquo;t a lot of assistants, they said they found the topic very interesting and a lot of very good questions were asked in the Q&amp;amp;A part.
We hope everyone that assisted to the talk found it interesting and they can use the knowledge shared in it to build awesome apps.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/mvader/reactmad-redux-example&#34;&gt;You can find the slides as well as the source code of the example here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/reactmad-redux/audience.jpeg&#34; alt=&#34;The audience&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>